
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Categories
 * 
 */
export type Categories = $Result.DefaultSelection<Prisma.$CategoriesPayload>
/**
 * Model CategoriesOnModules
 * 
 */
export type CategoriesOnModules = $Result.DefaultSelection<Prisma.$CategoriesOnModulesPayload>
/**
 * Model Modules
 * 
 */
export type Modules = $Result.DefaultSelection<Prisma.$ModulesPayload>
/**
 * Model Resources
 * 
 */
export type Resources = $Result.DefaultSelection<Prisma.$ResourcesPayload>
/**
 * Model ResourcesOnModules
 * 
 */
export type ResourcesOnModules = $Result.DefaultSelection<Prisma.$ResourcesOnModulesPayload>
/**
 * Model UsersOnCategories
 * 
 */
export type UsersOnCategories = $Result.DefaultSelection<Prisma.$UsersOnCategoriesPayload>
/**
 * Model security_code
 * 
 */
export type security_code = $Result.DefaultSelection<Prisma.$security_codePayload>
/**
 * Model token_managements
 * 
 */
export type token_managements = $Result.DefaultSelection<Prisma.$token_managementsPayload>
/**
 * Model user_configuration
 * 
 */
export type user_configuration = $Result.DefaultSelection<Prisma.$user_configurationPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Libraries: {
  BIGDATA: 'BIGDATA'
};

export type Libraries = (typeof Libraries)[keyof typeof Libraries]


export const StatusSecurityCode: {
  ACTIVE: 'ACTIVE',
  CHECKED: 'CHECKED',
  CANCELED: 'CANCELED'
};

export type StatusSecurityCode = (typeof StatusSecurityCode)[keyof typeof StatusSecurityCode]


export const Status: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  BLOCKED: 'BLOCKED',
  CREATED: 'CREATED'
};

export type Status = (typeof Status)[keyof typeof Status]


export const Role: {
  MANAGER: 'MANAGER',
  SUPPORT: 'SUPPORT',
  EMPLOYEE: 'EMPLOYEE',
  ADMIN: 'ADMIN',
  CLIENT: 'CLIENT'
};

export type Role = (typeof Role)[keyof typeof Role]


export const TypeEmailConfirm: {
  UNCONFIRMED: 'UNCONFIRMED',
  CONFIRMED: 'CONFIRMED'
};

export type TypeEmailConfirm = (typeof TypeEmailConfirm)[keyof typeof TypeEmailConfirm]

}

export type Libraries = $Enums.Libraries

export const Libraries: typeof $Enums.Libraries

export type StatusSecurityCode = $Enums.StatusSecurityCode

export const StatusSecurityCode: typeof $Enums.StatusSecurityCode

export type Status = $Enums.Status

export const Status: typeof $Enums.Status

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type TypeEmailConfirm = $Enums.TypeEmailConfirm

export const TypeEmailConfirm: typeof $Enums.TypeEmailConfirm

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Categories
 * const categories = await prisma.categories.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Categories
   * const categories = await prisma.categories.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.categories`: Exposes CRUD operations for the **Categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.categories.findMany()
    * ```
    */
  get categories(): Prisma.CategoriesDelegate<ExtArgs>;

  /**
   * `prisma.categoriesOnModules`: Exposes CRUD operations for the **CategoriesOnModules** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoriesOnModules
    * const categoriesOnModules = await prisma.categoriesOnModules.findMany()
    * ```
    */
  get categoriesOnModules(): Prisma.CategoriesOnModulesDelegate<ExtArgs>;

  /**
   * `prisma.modules`: Exposes CRUD operations for the **Modules** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modules
    * const modules = await prisma.modules.findMany()
    * ```
    */
  get modules(): Prisma.ModulesDelegate<ExtArgs>;

  /**
   * `prisma.resources`: Exposes CRUD operations for the **Resources** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Resources
    * const resources = await prisma.resources.findMany()
    * ```
    */
  get resources(): Prisma.ResourcesDelegate<ExtArgs>;

  /**
   * `prisma.resourcesOnModules`: Exposes CRUD operations for the **ResourcesOnModules** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ResourcesOnModules
    * const resourcesOnModules = await prisma.resourcesOnModules.findMany()
    * ```
    */
  get resourcesOnModules(): Prisma.ResourcesOnModulesDelegate<ExtArgs>;

  /**
   * `prisma.usersOnCategories`: Exposes CRUD operations for the **UsersOnCategories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UsersOnCategories
    * const usersOnCategories = await prisma.usersOnCategories.findMany()
    * ```
    */
  get usersOnCategories(): Prisma.UsersOnCategoriesDelegate<ExtArgs>;

  /**
   * `prisma.security_code`: Exposes CRUD operations for the **security_code** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Security_codes
    * const security_codes = await prisma.security_code.findMany()
    * ```
    */
  get security_code(): Prisma.security_codeDelegate<ExtArgs>;

  /**
   * `prisma.token_managements`: Exposes CRUD operations for the **token_managements** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Token_managements
    * const token_managements = await prisma.token_managements.findMany()
    * ```
    */
  get token_managements(): Prisma.token_managementsDelegate<ExtArgs>;

  /**
   * `prisma.user_configuration`: Exposes CRUD operations for the **user_configuration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_configurations
    * const user_configurations = await prisma.user_configuration.findMany()
    * ```
    */
  get user_configuration(): Prisma.user_configurationDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.8.0
   * Query Engine version: 0a83d8541752d7582de2ebc1ece46519ce72a848
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Categories: 'Categories',
    CategoriesOnModules: 'CategoriesOnModules',
    Modules: 'Modules',
    Resources: 'Resources',
    ResourcesOnModules: 'ResourcesOnModules',
    UsersOnCategories: 'UsersOnCategories',
    security_code: 'security_code',
    token_managements: 'token_managements',
    user_configuration: 'user_configuration',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'categories' | 'categoriesOnModules' | 'modules' | 'resources' | 'resourcesOnModules' | 'usersOnCategories' | 'security_code' | 'token_managements' | 'user_configuration' | 'users'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Categories: {
        payload: Prisma.$CategoriesPayload<ExtArgs>
        fields: Prisma.CategoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          findFirst: {
            args: Prisma.CategoriesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          findMany: {
            args: Prisma.CategoriesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>[]
          }
          create: {
            args: Prisma.CategoriesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          createMany: {
            args: Prisma.CategoriesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CategoriesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          update: {
            args: Prisma.CategoriesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          deleteMany: {
            args: Prisma.CategoriesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CategoriesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategories>
          }
          groupBy: {
            args: Prisma.CategoriesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriesCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriesCountAggregateOutputType> | number
          }
        }
      }
      CategoriesOnModules: {
        payload: Prisma.$CategoriesOnModulesPayload<ExtArgs>
        fields: Prisma.CategoriesOnModulesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoriesOnModulesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoriesOnModulesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>
          }
          findFirst: {
            args: Prisma.CategoriesOnModulesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoriesOnModulesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>
          }
          findMany: {
            args: Prisma.CategoriesOnModulesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>[]
          }
          create: {
            args: Prisma.CategoriesOnModulesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>
          }
          createMany: {
            args: Prisma.CategoriesOnModulesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.CategoriesOnModulesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>
          }
          update: {
            args: Prisma.CategoriesOnModulesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>
          }
          deleteMany: {
            args: Prisma.CategoriesOnModulesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.CategoriesOnModulesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.CategoriesOnModulesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$CategoriesOnModulesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesOnModulesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategoriesOnModules>
          }
          groupBy: {
            args: Prisma.CategoriesOnModulesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<CategoriesOnModulesGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoriesOnModulesCountArgs<ExtArgs>,
            result: $Utils.Optional<CategoriesOnModulesCountAggregateOutputType> | number
          }
        }
      }
      Modules: {
        payload: Prisma.$ModulesPayload<ExtArgs>
        fields: Prisma.ModulesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModulesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModulesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>
          }
          findFirst: {
            args: Prisma.ModulesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModulesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>
          }
          findMany: {
            args: Prisma.ModulesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>[]
          }
          create: {
            args: Prisma.ModulesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>
          }
          createMany: {
            args: Prisma.ModulesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ModulesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>
          }
          update: {
            args: Prisma.ModulesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>
          }
          deleteMany: {
            args: Prisma.ModulesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ModulesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ModulesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ModulesPayload>
          }
          aggregate: {
            args: Prisma.ModulesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateModules>
          }
          groupBy: {
            args: Prisma.ModulesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ModulesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModulesCountArgs<ExtArgs>,
            result: $Utils.Optional<ModulesCountAggregateOutputType> | number
          }
        }
      }
      Resources: {
        payload: Prisma.$ResourcesPayload<ExtArgs>
        fields: Prisma.ResourcesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResourcesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResourcesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>
          }
          findFirst: {
            args: Prisma.ResourcesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResourcesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>
          }
          findMany: {
            args: Prisma.ResourcesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>[]
          }
          create: {
            args: Prisma.ResourcesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>
          }
          createMany: {
            args: Prisma.ResourcesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ResourcesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>
          }
          update: {
            args: Prisma.ResourcesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>
          }
          deleteMany: {
            args: Prisma.ResourcesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ResourcesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ResourcesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesPayload>
          }
          aggregate: {
            args: Prisma.ResourcesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateResources>
          }
          groupBy: {
            args: Prisma.ResourcesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ResourcesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResourcesCountArgs<ExtArgs>,
            result: $Utils.Optional<ResourcesCountAggregateOutputType> | number
          }
        }
      }
      ResourcesOnModules: {
        payload: Prisma.$ResourcesOnModulesPayload<ExtArgs>
        fields: Prisma.ResourcesOnModulesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ResourcesOnModulesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ResourcesOnModulesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>
          }
          findFirst: {
            args: Prisma.ResourcesOnModulesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ResourcesOnModulesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>
          }
          findMany: {
            args: Prisma.ResourcesOnModulesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>[]
          }
          create: {
            args: Prisma.ResourcesOnModulesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>
          }
          createMany: {
            args: Prisma.ResourcesOnModulesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ResourcesOnModulesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>
          }
          update: {
            args: Prisma.ResourcesOnModulesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>
          }
          deleteMany: {
            args: Prisma.ResourcesOnModulesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ResourcesOnModulesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ResourcesOnModulesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ResourcesOnModulesPayload>
          }
          aggregate: {
            args: Prisma.ResourcesOnModulesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateResourcesOnModules>
          }
          groupBy: {
            args: Prisma.ResourcesOnModulesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ResourcesOnModulesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ResourcesOnModulesCountArgs<ExtArgs>,
            result: $Utils.Optional<ResourcesOnModulesCountAggregateOutputType> | number
          }
        }
      }
      UsersOnCategories: {
        payload: Prisma.$UsersOnCategoriesPayload<ExtArgs>
        fields: Prisma.UsersOnCategoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersOnCategoriesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersOnCategoriesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>
          }
          findFirst: {
            args: Prisma.UsersOnCategoriesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersOnCategoriesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>
          }
          findMany: {
            args: Prisma.UsersOnCategoriesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>[]
          }
          create: {
            args: Prisma.UsersOnCategoriesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>
          }
          createMany: {
            args: Prisma.UsersOnCategoriesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.UsersOnCategoriesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>
          }
          update: {
            args: Prisma.UsersOnCategoriesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>
          }
          deleteMany: {
            args: Prisma.UsersOnCategoriesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UsersOnCategoriesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UsersOnCategoriesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UsersOnCategoriesPayload>
          }
          aggregate: {
            args: Prisma.UsersOnCategoriesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsersOnCategories>
          }
          groupBy: {
            args: Prisma.UsersOnCategoriesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersOnCategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersOnCategoriesCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersOnCategoriesCountAggregateOutputType> | number
          }
        }
      }
      security_code: {
        payload: Prisma.$security_codePayload<ExtArgs>
        fields: Prisma.security_codeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.security_codeFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.security_codeFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>
          }
          findFirst: {
            args: Prisma.security_codeFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.security_codeFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>
          }
          findMany: {
            args: Prisma.security_codeFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>[]
          }
          create: {
            args: Prisma.security_codeCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>
          }
          createMany: {
            args: Prisma.security_codeCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.security_codeDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>
          }
          update: {
            args: Prisma.security_codeUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>
          }
          deleteMany: {
            args: Prisma.security_codeDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.security_codeUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.security_codeUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$security_codePayload>
          }
          aggregate: {
            args: Prisma.Security_codeAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSecurity_code>
          }
          groupBy: {
            args: Prisma.security_codeGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Security_codeGroupByOutputType>[]
          }
          count: {
            args: Prisma.security_codeCountArgs<ExtArgs>,
            result: $Utils.Optional<Security_codeCountAggregateOutputType> | number
          }
        }
      }
      token_managements: {
        payload: Prisma.$token_managementsPayload<ExtArgs>
        fields: Prisma.token_managementsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.token_managementsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.token_managementsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>
          }
          findFirst: {
            args: Prisma.token_managementsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.token_managementsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>
          }
          findMany: {
            args: Prisma.token_managementsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>[]
          }
          create: {
            args: Prisma.token_managementsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>
          }
          createMany: {
            args: Prisma.token_managementsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.token_managementsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>
          }
          update: {
            args: Prisma.token_managementsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>
          }
          deleteMany: {
            args: Prisma.token_managementsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.token_managementsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.token_managementsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$token_managementsPayload>
          }
          aggregate: {
            args: Prisma.Token_managementsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateToken_managements>
          }
          groupBy: {
            args: Prisma.token_managementsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Token_managementsGroupByOutputType>[]
          }
          count: {
            args: Prisma.token_managementsCountArgs<ExtArgs>,
            result: $Utils.Optional<Token_managementsCountAggregateOutputType> | number
          }
        }
      }
      user_configuration: {
        payload: Prisma.$user_configurationPayload<ExtArgs>
        fields: Prisma.user_configurationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_configurationFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_configurationFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>
          }
          findFirst: {
            args: Prisma.user_configurationFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_configurationFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>
          }
          findMany: {
            args: Prisma.user_configurationFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>[]
          }
          create: {
            args: Prisma.user_configurationCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>
          }
          createMany: {
            args: Prisma.user_configurationCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.user_configurationDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>
          }
          update: {
            args: Prisma.user_configurationUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>
          }
          deleteMany: {
            args: Prisma.user_configurationDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.user_configurationUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.user_configurationUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$user_configurationPayload>
          }
          aggregate: {
            args: Prisma.User_configurationAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser_configuration>
          }
          groupBy: {
            args: Prisma.user_configurationGroupByArgs<ExtArgs>,
            result: $Utils.Optional<User_configurationGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_configurationCountArgs<ExtArgs>,
            result: $Utils.Optional<User_configurationCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CategoriesCountOutputType
   */

  export type CategoriesCountOutputType = {
    CategoriesOnModules: number
    UsersOnCategories: number
  }

  export type CategoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CategoriesOnModules?: boolean | CategoriesCountOutputTypeCountCategoriesOnModulesArgs
    UsersOnCategories?: boolean | CategoriesCountOutputTypeCountUsersOnCategoriesArgs
  }

  // Custom InputTypes

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesCountOutputType
     */
    select?: CategoriesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountCategoriesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriesOnModulesWhereInput
  }


  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountUsersOnCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersOnCategoriesWhereInput
  }



  /**
   * Count Type ModulesCountOutputType
   */

  export type ModulesCountOutputType = {
    CategoriesOnModules: number
    ResourcesOnModules: number
  }

  export type ModulesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CategoriesOnModules?: boolean | ModulesCountOutputTypeCountCategoriesOnModulesArgs
    ResourcesOnModules?: boolean | ModulesCountOutputTypeCountResourcesOnModulesArgs
  }

  // Custom InputTypes

  /**
   * ModulesCountOutputType without action
   */
  export type ModulesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModulesCountOutputType
     */
    select?: ModulesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ModulesCountOutputType without action
   */
  export type ModulesCountOutputTypeCountCategoriesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriesOnModulesWhereInput
  }


  /**
   * ModulesCountOutputType without action
   */
  export type ModulesCountOutputTypeCountResourcesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResourcesOnModulesWhereInput
  }



  /**
   * Count Type ResourcesCountOutputType
   */

  export type ResourcesCountOutputType = {
    ResourcesOnModules: number
  }

  export type ResourcesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ResourcesOnModules?: boolean | ResourcesCountOutputTypeCountResourcesOnModulesArgs
  }

  // Custom InputTypes

  /**
   * ResourcesCountOutputType without action
   */
  export type ResourcesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesCountOutputType
     */
    select?: ResourcesCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * ResourcesCountOutputType without action
   */
  export type ResourcesCountOutputTypeCountResourcesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResourcesOnModulesWhereInput
  }



  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    Categories: number
    UsersOnCategories: number
    security_code: number
    token_managements: number
    other_users: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Categories?: boolean | UsersCountOutputTypeCountCategoriesArgs
    UsersOnCategories?: boolean | UsersCountOutputTypeCountUsersOnCategoriesArgs
    security_code?: boolean | UsersCountOutputTypeCountSecurity_codeArgs
    token_managements?: boolean | UsersCountOutputTypeCountToken_managementsArgs
    other_users?: boolean | UsersCountOutputTypeCountOther_usersArgs
  }

  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriesWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUsersOnCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersOnCategoriesWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSecurity_codeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: security_codeWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountToken_managementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: token_managementsWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOther_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }



  /**
   * Models
   */

  /**
   * Model Categories
   */

  export type AggregateCategories = {
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  export type CategoriesAvgAggregateOutputType = {
    id: number | null
    created_id: number | null
    custom_value: number | null
  }

  export type CategoriesSumAggregateOutputType = {
    id: number | null
    created_id: number | null
    custom_value: number | null
  }

  export type CategoriesMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created_id: number | null
    custom_value: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CategoriesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    created_id: number | null
    custom_value: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CategoriesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_id: number
    custom_value: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CategoriesAvgAggregateInputType = {
    id?: true
    created_id?: true
    custom_value?: true
  }

  export type CategoriesSumAggregateInputType = {
    id?: true
    created_id?: true
    custom_value?: true
  }

  export type CategoriesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_id?: true
    custom_value?: true
    created_at?: true
    updated_at?: true
  }

  export type CategoriesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_id?: true
    custom_value?: true
    created_at?: true
    updated_at?: true
  }

  export type CategoriesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_id?: true
    custom_value?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to aggregate.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesMaxAggregateInputType
  }

  export type GetCategoriesAggregateType<T extends CategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories[P]>
      : GetScalarType<T[P], AggregateCategories[P]>
  }




  export type CategoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriesWhereInput
    orderBy?: CategoriesOrderByWithAggregationInput | CategoriesOrderByWithAggregationInput[]
    by: CategoriesScalarFieldEnum[] | CategoriesScalarFieldEnum
    having?: CategoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesCountAggregateInputType | true
    _avg?: CategoriesAvgAggregateInputType
    _sum?: CategoriesSumAggregateInputType
    _min?: CategoriesMinAggregateInputType
    _max?: CategoriesMaxAggregateInputType
  }

  export type CategoriesGroupByOutputType = {
    id: number
    name: string
    description: string | null
    created_id: number | null
    custom_value: number | null
    created_at: Date
    updated_at: Date
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  type GetCategoriesGroupByPayload<T extends CategoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
        }
      >
    >


  export type CategoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_id?: boolean
    custom_value?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | Categories$usersArgs<ExtArgs>
    CategoriesOnModules?: boolean | Categories$CategoriesOnModulesArgs<ExtArgs>
    UsersOnCategories?: boolean | Categories$UsersOnCategoriesArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>

  export type CategoriesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_id?: boolean
    custom_value?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type CategoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Categories$usersArgs<ExtArgs>
    CategoriesOnModules?: boolean | Categories$CategoriesOnModulesArgs<ExtArgs>
    UsersOnCategories?: boolean | Categories$UsersOnCategoriesArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $CategoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Categories"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      CategoriesOnModules: Prisma.$CategoriesOnModulesPayload<ExtArgs>[]
      UsersOnCategories: Prisma.$UsersOnCategoriesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      created_id: number | null
      custom_value: number | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["categories"]>
    composites: {}
  }


  type CategoriesGetPayload<S extends boolean | null | undefined | CategoriesDefaultArgs> = $Result.GetResult<Prisma.$CategoriesPayload, S>

  type CategoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriesCountAggregateInputType | true
    }

  export interface CategoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Categories'], meta: { name: 'Categories' } }
    /**
     * Find zero or one Categories that matches the filter.
     * @param {CategoriesFindUniqueArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CategoriesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesFindUniqueArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Categories that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CategoriesFindUniqueOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CategoriesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesFindFirstArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CategoriesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindFirstArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesFindFirstOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CategoriesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.categories.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesWithIdOnly = await prisma.categories.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CategoriesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Categories.
     * @param {CategoriesCreateArgs} args - Arguments to create a Categories.
     * @example
     * // Create one Categories
     * const Categories = await prisma.categories.create({
     *   data: {
     *     // ... data to create a Categories
     *   }
     * })
     * 
    **/
    create<T extends CategoriesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesCreateArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Categories.
     *     @param {CategoriesCreateManyArgs} args - Arguments to create many Categories.
     *     @example
     *     // Create many Categories
     *     const categories = await prisma.categories.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CategoriesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categories.
     * @param {CategoriesDeleteArgs} args - Arguments to delete one Categories.
     * @example
     * // Delete one Categories
     * const Categories = await prisma.categories.delete({
     *   where: {
     *     // ... filter to delete one Categories
     *   }
     * })
     * 
    **/
    delete<T extends CategoriesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesDeleteArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Categories.
     * @param {CategoriesUpdateArgs} args - Arguments to update one Categories.
     * @example
     * // Update one Categories
     * const categories = await prisma.categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CategoriesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesUpdateArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Categories.
     * @param {CategoriesDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CategoriesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CategoriesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categories.
     * @param {CategoriesUpsertArgs} args - Arguments to update or create a Categories.
     * @example
     * // Update or create a Categories
     * const categories = await prisma.categories.upsert({
     *   create: {
     *     // ... data to create a Categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories we want to update
     *   }
     * })
    **/
    upsert<T extends CategoriesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesUpsertArgs<ExtArgs>>
    ): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.categories.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoriesCountArgs>(
      args?: Subset<T, CategoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesAggregateArgs>(args: Subset<T, CategoriesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesAggregateType<T>>

    /**
     * Group by Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriesGroupByArgs['orderBy'] }
        : { orderBy?: CategoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Categories model
   */
  readonly fields: CategoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends Categories$usersArgs<ExtArgs> = {}>(args?: Subset<T, Categories$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    CategoriesOnModules<T extends Categories$CategoriesOnModulesArgs<ExtArgs> = {}>(args?: Subset<T, Categories$CategoriesOnModulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findMany'> | Null>;

    UsersOnCategories<T extends Categories$UsersOnCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Categories$UsersOnCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Categories model
   */ 
  interface CategoriesFieldRefs {
    readonly id: FieldRef<"Categories", 'Int'>
    readonly name: FieldRef<"Categories", 'String'>
    readonly description: FieldRef<"Categories", 'String'>
    readonly created_id: FieldRef<"Categories", 'Int'>
    readonly custom_value: FieldRef<"Categories", 'Float'>
    readonly created_at: FieldRef<"Categories", 'DateTime'>
    readonly updated_at: FieldRef<"Categories", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * Categories findUnique
   */
  export type CategoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories findUniqueOrThrow
   */
  export type CategoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories findFirst
   */
  export type CategoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * Categories findFirstOrThrow
   */
  export type CategoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * Categories findMany
   */
  export type CategoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * Categories create
   */
  export type CategoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a Categories.
     */
    data: XOR<CategoriesCreateInput, CategoriesUncheckedCreateInput>
  }


  /**
   * Categories createMany
   */
  export type CategoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoriesCreateManyInput | CategoriesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Categories update
   */
  export type CategoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a Categories.
     */
    data: XOR<CategoriesUpdateInput, CategoriesUncheckedUpdateInput>
    /**
     * Choose, which Categories to update.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories updateMany
   */
  export type CategoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoriesUpdateManyMutationInput, CategoriesUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoriesWhereInput
  }


  /**
   * Categories upsert
   */
  export type CategoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the Categories to update in case it exists.
     */
    where: CategoriesWhereUniqueInput
    /**
     * In case the Categories found by the `where` argument doesn't exist, create a new Categories with this data.
     */
    create: XOR<CategoriesCreateInput, CategoriesUncheckedCreateInput>
    /**
     * In case the Categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriesUpdateInput, CategoriesUncheckedUpdateInput>
  }


  /**
   * Categories delete
   */
  export type CategoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    /**
     * Filter which Categories to delete.
     */
    where: CategoriesWhereUniqueInput
  }


  /**
   * Categories deleteMany
   */
  export type CategoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoriesWhereInput
  }


  /**
   * Categories.users
   */
  export type Categories$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }


  /**
   * Categories.CategoriesOnModules
   */
  export type Categories$CategoriesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    where?: CategoriesOnModulesWhereInput
    orderBy?: CategoriesOnModulesOrderByWithRelationInput | CategoriesOnModulesOrderByWithRelationInput[]
    cursor?: CategoriesOnModulesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriesOnModulesScalarFieldEnum | CategoriesOnModulesScalarFieldEnum[]
  }


  /**
   * Categories.UsersOnCategories
   */
  export type Categories$UsersOnCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    where?: UsersOnCategoriesWhereInput
    orderBy?: UsersOnCategoriesOrderByWithRelationInput | UsersOnCategoriesOrderByWithRelationInput[]
    cursor?: UsersOnCategoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersOnCategoriesScalarFieldEnum | UsersOnCategoriesScalarFieldEnum[]
  }


  /**
   * Categories without action
   */
  export type CategoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
  }



  /**
   * Model CategoriesOnModules
   */

  export type AggregateCategoriesOnModules = {
    _count: CategoriesOnModulesCountAggregateOutputType | null
    _avg: CategoriesOnModulesAvgAggregateOutputType | null
    _sum: CategoriesOnModulesSumAggregateOutputType | null
    _min: CategoriesOnModulesMinAggregateOutputType | null
    _max: CategoriesOnModulesMaxAggregateOutputType | null
  }

  export type CategoriesOnModulesAvgAggregateOutputType = {
    id: number | null
    categoryId: number | null
    moduleId: number | null
  }

  export type CategoriesOnModulesSumAggregateOutputType = {
    id: number | null
    categoryId: number | null
    moduleId: number | null
  }

  export type CategoriesOnModulesMinAggregateOutputType = {
    id: number | null
    categoryId: number | null
    moduleId: number | null
  }

  export type CategoriesOnModulesMaxAggregateOutputType = {
    id: number | null
    categoryId: number | null
    moduleId: number | null
  }

  export type CategoriesOnModulesCountAggregateOutputType = {
    id: number
    categoryId: number
    moduleId: number
    _all: number
  }


  export type CategoriesOnModulesAvgAggregateInputType = {
    id?: true
    categoryId?: true
    moduleId?: true
  }

  export type CategoriesOnModulesSumAggregateInputType = {
    id?: true
    categoryId?: true
    moduleId?: true
  }

  export type CategoriesOnModulesMinAggregateInputType = {
    id?: true
    categoryId?: true
    moduleId?: true
  }

  export type CategoriesOnModulesMaxAggregateInputType = {
    id?: true
    categoryId?: true
    moduleId?: true
  }

  export type CategoriesOnModulesCountAggregateInputType = {
    id?: true
    categoryId?: true
    moduleId?: true
    _all?: true
  }

  export type CategoriesOnModulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriesOnModules to aggregate.
     */
    where?: CategoriesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriesOnModules to fetch.
     */
    orderBy?: CategoriesOnModulesOrderByWithRelationInput | CategoriesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoriesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriesOnModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoriesOnModules
    **/
    _count?: true | CategoriesOnModulesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriesOnModulesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriesOnModulesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesOnModulesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesOnModulesMaxAggregateInputType
  }

  export type GetCategoriesOnModulesAggregateType<T extends CategoriesOnModulesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoriesOnModules]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoriesOnModules[P]>
      : GetScalarType<T[P], AggregateCategoriesOnModules[P]>
  }




  export type CategoriesOnModulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoriesOnModulesWhereInput
    orderBy?: CategoriesOnModulesOrderByWithAggregationInput | CategoriesOnModulesOrderByWithAggregationInput[]
    by: CategoriesOnModulesScalarFieldEnum[] | CategoriesOnModulesScalarFieldEnum
    having?: CategoriesOnModulesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesOnModulesCountAggregateInputType | true
    _avg?: CategoriesOnModulesAvgAggregateInputType
    _sum?: CategoriesOnModulesSumAggregateInputType
    _min?: CategoriesOnModulesMinAggregateInputType
    _max?: CategoriesOnModulesMaxAggregateInputType
  }

  export type CategoriesOnModulesGroupByOutputType = {
    id: number
    categoryId: number
    moduleId: number
    _count: CategoriesOnModulesCountAggregateOutputType | null
    _avg: CategoriesOnModulesAvgAggregateOutputType | null
    _sum: CategoriesOnModulesSumAggregateOutputType | null
    _min: CategoriesOnModulesMinAggregateOutputType | null
    _max: CategoriesOnModulesMaxAggregateOutputType | null
  }

  type GetCategoriesOnModulesGroupByPayload<T extends CategoriesOnModulesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesOnModulesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesOnModulesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesOnModulesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesOnModulesGroupByOutputType[P]>
        }
      >
    >


  export type CategoriesOnModulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    moduleId?: boolean
    Categories?: boolean | CategoriesDefaultArgs<ExtArgs>
    Modules?: boolean | ModulesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categoriesOnModules"]>

  export type CategoriesOnModulesSelectScalar = {
    id?: boolean
    categoryId?: boolean
    moduleId?: boolean
  }

  export type CategoriesOnModulesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Categories?: boolean | CategoriesDefaultArgs<ExtArgs>
    Modules?: boolean | ModulesDefaultArgs<ExtArgs>
  }


  export type $CategoriesOnModulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoriesOnModules"
    objects: {
      Categories: Prisma.$CategoriesPayload<ExtArgs>
      Modules: Prisma.$ModulesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      categoryId: number
      moduleId: number
    }, ExtArgs["result"]["categoriesOnModules"]>
    composites: {}
  }


  type CategoriesOnModulesGetPayload<S extends boolean | null | undefined | CategoriesOnModulesDefaultArgs> = $Result.GetResult<Prisma.$CategoriesOnModulesPayload, S>

  type CategoriesOnModulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoriesOnModulesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoriesOnModulesCountAggregateInputType | true
    }

  export interface CategoriesOnModulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoriesOnModules'], meta: { name: 'CategoriesOnModules' } }
    /**
     * Find zero or one CategoriesOnModules that matches the filter.
     * @param {CategoriesOnModulesFindUniqueArgs} args - Arguments to find a CategoriesOnModules
     * @example
     * // Get one CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends CategoriesOnModulesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesOnModulesFindUniqueArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one CategoriesOnModules that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {CategoriesOnModulesFindUniqueOrThrowArgs} args - Arguments to find a CategoriesOnModules
     * @example
     * // Get one CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends CategoriesOnModulesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesOnModulesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first CategoriesOnModules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesFindFirstArgs} args - Arguments to find a CategoriesOnModules
     * @example
     * // Get one CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends CategoriesOnModulesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesOnModulesFindFirstArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first CategoriesOnModules that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesFindFirstOrThrowArgs} args - Arguments to find a CategoriesOnModules
     * @example
     * // Get one CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends CategoriesOnModulesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesOnModulesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more CategoriesOnModules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.findMany()
     * 
     * // Get first 10 CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesOnModulesWithIdOnly = await prisma.categoriesOnModules.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends CategoriesOnModulesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesOnModulesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a CategoriesOnModules.
     * @param {CategoriesOnModulesCreateArgs} args - Arguments to create a CategoriesOnModules.
     * @example
     * // Create one CategoriesOnModules
     * const CategoriesOnModules = await prisma.categoriesOnModules.create({
     *   data: {
     *     // ... data to create a CategoriesOnModules
     *   }
     * })
     * 
    **/
    create<T extends CategoriesOnModulesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesOnModulesCreateArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many CategoriesOnModules.
     *     @param {CategoriesOnModulesCreateManyArgs} args - Arguments to create many CategoriesOnModules.
     *     @example
     *     // Create many CategoriesOnModules
     *     const categoriesOnModules = await prisma.categoriesOnModules.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends CategoriesOnModulesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesOnModulesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CategoriesOnModules.
     * @param {CategoriesOnModulesDeleteArgs} args - Arguments to delete one CategoriesOnModules.
     * @example
     * // Delete one CategoriesOnModules
     * const CategoriesOnModules = await prisma.categoriesOnModules.delete({
     *   where: {
     *     // ... filter to delete one CategoriesOnModules
     *   }
     * })
     * 
    **/
    delete<T extends CategoriesOnModulesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesOnModulesDeleteArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one CategoriesOnModules.
     * @param {CategoriesOnModulesUpdateArgs} args - Arguments to update one CategoriesOnModules.
     * @example
     * // Update one CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends CategoriesOnModulesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesOnModulesUpdateArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more CategoriesOnModules.
     * @param {CategoriesOnModulesDeleteManyArgs} args - Arguments to filter CategoriesOnModules to delete.
     * @example
     * // Delete a few CategoriesOnModules
     * const { count } = await prisma.categoriesOnModules.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends CategoriesOnModulesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, CategoriesOnModulesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoriesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends CategoriesOnModulesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesOnModulesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CategoriesOnModules.
     * @param {CategoriesOnModulesUpsertArgs} args - Arguments to update or create a CategoriesOnModules.
     * @example
     * // Update or create a CategoriesOnModules
     * const categoriesOnModules = await prisma.categoriesOnModules.upsert({
     *   create: {
     *     // ... data to create a CategoriesOnModules
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoriesOnModules we want to update
     *   }
     * })
    **/
    upsert<T extends CategoriesOnModulesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, CategoriesOnModulesUpsertArgs<ExtArgs>>
    ): Prisma__CategoriesOnModulesClient<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of CategoriesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesCountArgs} args - Arguments to filter CategoriesOnModules to count.
     * @example
     * // Count the number of CategoriesOnModules
     * const count = await prisma.categoriesOnModules.count({
     *   where: {
     *     // ... the filter for the CategoriesOnModules we want to count
     *   }
     * })
    **/
    count<T extends CategoriesOnModulesCountArgs>(
      args?: Subset<T, CategoriesOnModulesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesOnModulesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoriesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesOnModulesAggregateArgs>(args: Subset<T, CategoriesOnModulesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesOnModulesAggregateType<T>>

    /**
     * Group by CategoriesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesOnModulesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoriesOnModulesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoriesOnModulesGroupByArgs['orderBy'] }
        : { orderBy?: CategoriesOnModulesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoriesOnModulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesOnModulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoriesOnModules model
   */
  readonly fields: CategoriesOnModulesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoriesOnModules.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoriesOnModulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Categories<T extends CategoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriesDefaultArgs<ExtArgs>>): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Modules<T extends ModulesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModulesDefaultArgs<ExtArgs>>): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the CategoriesOnModules model
   */ 
  interface CategoriesOnModulesFieldRefs {
    readonly id: FieldRef<"CategoriesOnModules", 'Int'>
    readonly categoryId: FieldRef<"CategoriesOnModules", 'Int'>
    readonly moduleId: FieldRef<"CategoriesOnModules", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * CategoriesOnModules findUnique
   */
  export type CategoriesOnModulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which CategoriesOnModules to fetch.
     */
    where: CategoriesOnModulesWhereUniqueInput
  }


  /**
   * CategoriesOnModules findUniqueOrThrow
   */
  export type CategoriesOnModulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which CategoriesOnModules to fetch.
     */
    where: CategoriesOnModulesWhereUniqueInput
  }


  /**
   * CategoriesOnModules findFirst
   */
  export type CategoriesOnModulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which CategoriesOnModules to fetch.
     */
    where?: CategoriesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriesOnModules to fetch.
     */
    orderBy?: CategoriesOnModulesOrderByWithRelationInput | CategoriesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriesOnModules.
     */
    cursor?: CategoriesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriesOnModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriesOnModules.
     */
    distinct?: CategoriesOnModulesScalarFieldEnum | CategoriesOnModulesScalarFieldEnum[]
  }


  /**
   * CategoriesOnModules findFirstOrThrow
   */
  export type CategoriesOnModulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which CategoriesOnModules to fetch.
     */
    where?: CategoriesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriesOnModules to fetch.
     */
    orderBy?: CategoriesOnModulesOrderByWithRelationInput | CategoriesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoriesOnModules.
     */
    cursor?: CategoriesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriesOnModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoriesOnModules.
     */
    distinct?: CategoriesOnModulesScalarFieldEnum | CategoriesOnModulesScalarFieldEnum[]
  }


  /**
   * CategoriesOnModules findMany
   */
  export type CategoriesOnModulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which CategoriesOnModules to fetch.
     */
    where?: CategoriesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoriesOnModules to fetch.
     */
    orderBy?: CategoriesOnModulesOrderByWithRelationInput | CategoriesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoriesOnModules.
     */
    cursor?: CategoriesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoriesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoriesOnModules.
     */
    skip?: number
    distinct?: CategoriesOnModulesScalarFieldEnum | CategoriesOnModulesScalarFieldEnum[]
  }


  /**
   * CategoriesOnModules create
   */
  export type CategoriesOnModulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoriesOnModules.
     */
    data: XOR<CategoriesOnModulesCreateInput, CategoriesOnModulesUncheckedCreateInput>
  }


  /**
   * CategoriesOnModules createMany
   */
  export type CategoriesOnModulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoriesOnModules.
     */
    data: CategoriesOnModulesCreateManyInput | CategoriesOnModulesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * CategoriesOnModules update
   */
  export type CategoriesOnModulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoriesOnModules.
     */
    data: XOR<CategoriesOnModulesUpdateInput, CategoriesOnModulesUncheckedUpdateInput>
    /**
     * Choose, which CategoriesOnModules to update.
     */
    where: CategoriesOnModulesWhereUniqueInput
  }


  /**
   * CategoriesOnModules updateMany
   */
  export type CategoriesOnModulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoriesOnModules.
     */
    data: XOR<CategoriesOnModulesUpdateManyMutationInput, CategoriesOnModulesUncheckedUpdateManyInput>
    /**
     * Filter which CategoriesOnModules to update
     */
    where?: CategoriesOnModulesWhereInput
  }


  /**
   * CategoriesOnModules upsert
   */
  export type CategoriesOnModulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoriesOnModules to update in case it exists.
     */
    where: CategoriesOnModulesWhereUniqueInput
    /**
     * In case the CategoriesOnModules found by the `where` argument doesn't exist, create a new CategoriesOnModules with this data.
     */
    create: XOR<CategoriesOnModulesCreateInput, CategoriesOnModulesUncheckedCreateInput>
    /**
     * In case the CategoriesOnModules was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoriesOnModulesUpdateInput, CategoriesOnModulesUncheckedUpdateInput>
  }


  /**
   * CategoriesOnModules delete
   */
  export type CategoriesOnModulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    /**
     * Filter which CategoriesOnModules to delete.
     */
    where: CategoriesOnModulesWhereUniqueInput
  }


  /**
   * CategoriesOnModules deleteMany
   */
  export type CategoriesOnModulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoriesOnModules to delete
     */
    where?: CategoriesOnModulesWhereInput
  }


  /**
   * CategoriesOnModules without action
   */
  export type CategoriesOnModulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
  }



  /**
   * Model Modules
   */

  export type AggregateModules = {
    _count: ModulesCountAggregateOutputType | null
    _avg: ModulesAvgAggregateOutputType | null
    _sum: ModulesSumAggregateOutputType | null
    _min: ModulesMinAggregateOutputType | null
    _max: ModulesMaxAggregateOutputType | null
  }

  export type ModulesAvgAggregateOutputType = {
    id: number | null
    value: number | null
  }

  export type ModulesSumAggregateOutputType = {
    id: number | null
    value: number | null
  }

  export type ModulesMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    value: number | null
    created_at: Date | null
    updated_at: Date | null
    path_make_function: string | null
  }

  export type ModulesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    value: number | null
    created_at: Date | null
    updated_at: Date | null
    path_make_function: string | null
  }

  export type ModulesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    value: number
    created_at: number
    updated_at: number
    path_make_function: number
    _all: number
  }


  export type ModulesAvgAggregateInputType = {
    id?: true
    value?: true
  }

  export type ModulesSumAggregateInputType = {
    id?: true
    value?: true
  }

  export type ModulesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    value?: true
    created_at?: true
    updated_at?: true
    path_make_function?: true
  }

  export type ModulesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    value?: true
    created_at?: true
    updated_at?: true
    path_make_function?: true
  }

  export type ModulesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    value?: true
    created_at?: true
    updated_at?: true
    path_make_function?: true
    _all?: true
  }

  export type ModulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modules to aggregate.
     */
    where?: ModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modules to fetch.
     */
    orderBy?: ModulesOrderByWithRelationInput | ModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Modules
    **/
    _count?: true | ModulesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModulesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModulesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModulesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModulesMaxAggregateInputType
  }

  export type GetModulesAggregateType<T extends ModulesAggregateArgs> = {
        [P in keyof T & keyof AggregateModules]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModules[P]>
      : GetScalarType<T[P], AggregateModules[P]>
  }




  export type ModulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModulesWhereInput
    orderBy?: ModulesOrderByWithAggregationInput | ModulesOrderByWithAggregationInput[]
    by: ModulesScalarFieldEnum[] | ModulesScalarFieldEnum
    having?: ModulesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModulesCountAggregateInputType | true
    _avg?: ModulesAvgAggregateInputType
    _sum?: ModulesSumAggregateInputType
    _min?: ModulesMinAggregateInputType
    _max?: ModulesMaxAggregateInputType
  }

  export type ModulesGroupByOutputType = {
    id: number
    name: string
    description: string
    value: number
    created_at: Date
    updated_at: Date
    path_make_function: string
    _count: ModulesCountAggregateOutputType | null
    _avg: ModulesAvgAggregateOutputType | null
    _sum: ModulesSumAggregateOutputType | null
    _min: ModulesMinAggregateOutputType | null
    _max: ModulesMaxAggregateOutputType | null
  }

  type GetModulesGroupByPayload<T extends ModulesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModulesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModulesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModulesGroupByOutputType[P]>
            : GetScalarType<T[P], ModulesGroupByOutputType[P]>
        }
      >
    >


  export type ModulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    path_make_function?: boolean
    CategoriesOnModules?: boolean | Modules$CategoriesOnModulesArgs<ExtArgs>
    ResourcesOnModules?: boolean | Modules$ResourcesOnModulesArgs<ExtArgs>
    _count?: boolean | ModulesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modules"]>

  export type ModulesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    value?: boolean
    created_at?: boolean
    updated_at?: boolean
    path_make_function?: boolean
  }

  export type ModulesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CategoriesOnModules?: boolean | Modules$CategoriesOnModulesArgs<ExtArgs>
    ResourcesOnModules?: boolean | Modules$ResourcesOnModulesArgs<ExtArgs>
    _count?: boolean | ModulesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $ModulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Modules"
    objects: {
      CategoriesOnModules: Prisma.$CategoriesOnModulesPayload<ExtArgs>[]
      ResourcesOnModules: Prisma.$ResourcesOnModulesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      value: number
      created_at: Date
      updated_at: Date
      path_make_function: string
    }, ExtArgs["result"]["modules"]>
    composites: {}
  }


  type ModulesGetPayload<S extends boolean | null | undefined | ModulesDefaultArgs> = $Result.GetResult<Prisma.$ModulesPayload, S>

  type ModulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ModulesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModulesCountAggregateInputType | true
    }

  export interface ModulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modules'], meta: { name: 'Modules' } }
    /**
     * Find zero or one Modules that matches the filter.
     * @param {ModulesFindUniqueArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ModulesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ModulesFindUniqueArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Modules that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ModulesFindUniqueOrThrowArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ModulesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ModulesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Modules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesFindFirstArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ModulesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ModulesFindFirstArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Modules that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesFindFirstOrThrowArgs} args - Arguments to find a Modules
     * @example
     * // Get one Modules
     * const modules = await prisma.modules.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ModulesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ModulesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Modules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modules
     * const modules = await prisma.modules.findMany()
     * 
     * // Get first 10 Modules
     * const modules = await prisma.modules.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modulesWithIdOnly = await prisma.modules.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ModulesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ModulesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Modules.
     * @param {ModulesCreateArgs} args - Arguments to create a Modules.
     * @example
     * // Create one Modules
     * const Modules = await prisma.modules.create({
     *   data: {
     *     // ... data to create a Modules
     *   }
     * })
     * 
    **/
    create<T extends ModulesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ModulesCreateArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Modules.
     *     @param {ModulesCreateManyArgs} args - Arguments to create many Modules.
     *     @example
     *     // Create many Modules
     *     const modules = await prisma.modules.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ModulesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ModulesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Modules.
     * @param {ModulesDeleteArgs} args - Arguments to delete one Modules.
     * @example
     * // Delete one Modules
     * const Modules = await prisma.modules.delete({
     *   where: {
     *     // ... filter to delete one Modules
     *   }
     * })
     * 
    **/
    delete<T extends ModulesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ModulesDeleteArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Modules.
     * @param {ModulesUpdateArgs} args - Arguments to update one Modules.
     * @example
     * // Update one Modules
     * const modules = await prisma.modules.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ModulesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ModulesUpdateArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Modules.
     * @param {ModulesDeleteManyArgs} args - Arguments to filter Modules to delete.
     * @example
     * // Delete a few Modules
     * const { count } = await prisma.modules.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ModulesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ModulesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modules
     * const modules = await prisma.modules.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ModulesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ModulesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modules.
     * @param {ModulesUpsertArgs} args - Arguments to update or create a Modules.
     * @example
     * // Update or create a Modules
     * const modules = await prisma.modules.upsert({
     *   create: {
     *     // ... data to create a Modules
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modules we want to update
     *   }
     * })
    **/
    upsert<T extends ModulesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ModulesUpsertArgs<ExtArgs>>
    ): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesCountArgs} args - Arguments to filter Modules to count.
     * @example
     * // Count the number of Modules
     * const count = await prisma.modules.count({
     *   where: {
     *     // ... the filter for the Modules we want to count
     *   }
     * })
    **/
    count<T extends ModulesCountArgs>(
      args?: Subset<T, ModulesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModulesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModulesAggregateArgs>(args: Subset<T, ModulesAggregateArgs>): Prisma.PrismaPromise<GetModulesAggregateType<T>>

    /**
     * Group by Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModulesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModulesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModulesGroupByArgs['orderBy'] }
        : { orderBy?: ModulesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Modules model
   */
  readonly fields: ModulesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Modules.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    CategoriesOnModules<T extends Modules$CategoriesOnModulesArgs<ExtArgs> = {}>(args?: Subset<T, Modules$CategoriesOnModulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriesOnModulesPayload<ExtArgs>, T, 'findMany'> | Null>;

    ResourcesOnModules<T extends Modules$ResourcesOnModulesArgs<ExtArgs> = {}>(args?: Subset<T, Modules$ResourcesOnModulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Modules model
   */ 
  interface ModulesFieldRefs {
    readonly id: FieldRef<"Modules", 'Int'>
    readonly name: FieldRef<"Modules", 'String'>
    readonly description: FieldRef<"Modules", 'String'>
    readonly value: FieldRef<"Modules", 'Float'>
    readonly created_at: FieldRef<"Modules", 'DateTime'>
    readonly updated_at: FieldRef<"Modules", 'DateTime'>
    readonly path_make_function: FieldRef<"Modules", 'String'>
  }
    

  // Custom InputTypes

  /**
   * Modules findUnique
   */
  export type ModulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * Filter, which Modules to fetch.
     */
    where: ModulesWhereUniqueInput
  }


  /**
   * Modules findUniqueOrThrow
   */
  export type ModulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * Filter, which Modules to fetch.
     */
    where: ModulesWhereUniqueInput
  }


  /**
   * Modules findFirst
   */
  export type ModulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * Filter, which Modules to fetch.
     */
    where?: ModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modules to fetch.
     */
    orderBy?: ModulesOrderByWithRelationInput | ModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modules.
     */
    cursor?: ModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modules.
     */
    distinct?: ModulesScalarFieldEnum | ModulesScalarFieldEnum[]
  }


  /**
   * Modules findFirstOrThrow
   */
  export type ModulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * Filter, which Modules to fetch.
     */
    where?: ModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modules to fetch.
     */
    orderBy?: ModulesOrderByWithRelationInput | ModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modules.
     */
    cursor?: ModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modules.
     */
    distinct?: ModulesScalarFieldEnum | ModulesScalarFieldEnum[]
  }


  /**
   * Modules findMany
   */
  export type ModulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * Filter, which Modules to fetch.
     */
    where?: ModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modules to fetch.
     */
    orderBy?: ModulesOrderByWithRelationInput | ModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Modules.
     */
    cursor?: ModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modules.
     */
    skip?: number
    distinct?: ModulesScalarFieldEnum | ModulesScalarFieldEnum[]
  }


  /**
   * Modules create
   */
  export type ModulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * The data needed to create a Modules.
     */
    data: XOR<ModulesCreateInput, ModulesUncheckedCreateInput>
  }


  /**
   * Modules createMany
   */
  export type ModulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Modules.
     */
    data: ModulesCreateManyInput | ModulesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Modules update
   */
  export type ModulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * The data needed to update a Modules.
     */
    data: XOR<ModulesUpdateInput, ModulesUncheckedUpdateInput>
    /**
     * Choose, which Modules to update.
     */
    where: ModulesWhereUniqueInput
  }


  /**
   * Modules updateMany
   */
  export type ModulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Modules.
     */
    data: XOR<ModulesUpdateManyMutationInput, ModulesUncheckedUpdateManyInput>
    /**
     * Filter which Modules to update
     */
    where?: ModulesWhereInput
  }


  /**
   * Modules upsert
   */
  export type ModulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * The filter to search for the Modules to update in case it exists.
     */
    where: ModulesWhereUniqueInput
    /**
     * In case the Modules found by the `where` argument doesn't exist, create a new Modules with this data.
     */
    create: XOR<ModulesCreateInput, ModulesUncheckedCreateInput>
    /**
     * In case the Modules was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModulesUpdateInput, ModulesUncheckedUpdateInput>
  }


  /**
   * Modules delete
   */
  export type ModulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
    /**
     * Filter which Modules to delete.
     */
    where: ModulesWhereUniqueInput
  }


  /**
   * Modules deleteMany
   */
  export type ModulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modules to delete
     */
    where?: ModulesWhereInput
  }


  /**
   * Modules.CategoriesOnModules
   */
  export type Modules$CategoriesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesOnModules
     */
    select?: CategoriesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesOnModulesInclude<ExtArgs> | null
    where?: CategoriesOnModulesWhereInput
    orderBy?: CategoriesOnModulesOrderByWithRelationInput | CategoriesOnModulesOrderByWithRelationInput[]
    cursor?: CategoriesOnModulesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriesOnModulesScalarFieldEnum | CategoriesOnModulesScalarFieldEnum[]
  }


  /**
   * Modules.ResourcesOnModules
   */
  export type Modules$ResourcesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    where?: ResourcesOnModulesWhereInput
    orderBy?: ResourcesOnModulesOrderByWithRelationInput | ResourcesOnModulesOrderByWithRelationInput[]
    cursor?: ResourcesOnModulesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResourcesOnModulesScalarFieldEnum | ResourcesOnModulesScalarFieldEnum[]
  }


  /**
   * Modules without action
   */
  export type ModulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modules
     */
    select?: ModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ModulesInclude<ExtArgs> | null
  }



  /**
   * Model Resources
   */

  export type AggregateResources = {
    _count: ResourcesCountAggregateOutputType | null
    _avg: ResourcesAvgAggregateOutputType | null
    _sum: ResourcesSumAggregateOutputType | null
    _min: ResourcesMinAggregateOutputType | null
    _max: ResourcesMaxAggregateOutputType | null
  }

  export type ResourcesAvgAggregateOutputType = {
    id: number | null
    value: number | null
  }

  export type ResourcesSumAggregateOutputType = {
    id: number | null
    value: number | null
  }

  export type ResourcesMinAggregateOutputType = {
    id: number | null
    name: string | null
    path: string | null
    description: string | null
    value: number | null
    library: $Enums.Libraries | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ResourcesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    path: string | null
    description: string | null
    value: number | null
    library: $Enums.Libraries | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ResourcesCountAggregateOutputType = {
    id: number
    name: number
    path: number
    description: number
    value: number
    library: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ResourcesAvgAggregateInputType = {
    id?: true
    value?: true
  }

  export type ResourcesSumAggregateInputType = {
    id?: true
    value?: true
  }

  export type ResourcesMinAggregateInputType = {
    id?: true
    name?: true
    path?: true
    description?: true
    value?: true
    library?: true
    created_at?: true
    updated_at?: true
  }

  export type ResourcesMaxAggregateInputType = {
    id?: true
    name?: true
    path?: true
    description?: true
    value?: true
    library?: true
    created_at?: true
    updated_at?: true
  }

  export type ResourcesCountAggregateInputType = {
    id?: true
    name?: true
    path?: true
    description?: true
    value?: true
    library?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ResourcesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Resources to aggregate.
     */
    where?: ResourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourcesOrderByWithRelationInput | ResourcesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Resources
    **/
    _count?: true | ResourcesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ResourcesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ResourcesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResourcesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResourcesMaxAggregateInputType
  }

  export type GetResourcesAggregateType<T extends ResourcesAggregateArgs> = {
        [P in keyof T & keyof AggregateResources]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResources[P]>
      : GetScalarType<T[P], AggregateResources[P]>
  }




  export type ResourcesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResourcesWhereInput
    orderBy?: ResourcesOrderByWithAggregationInput | ResourcesOrderByWithAggregationInput[]
    by: ResourcesScalarFieldEnum[] | ResourcesScalarFieldEnum
    having?: ResourcesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResourcesCountAggregateInputType | true
    _avg?: ResourcesAvgAggregateInputType
    _sum?: ResourcesSumAggregateInputType
    _min?: ResourcesMinAggregateInputType
    _max?: ResourcesMaxAggregateInputType
  }

  export type ResourcesGroupByOutputType = {
    id: number
    name: string
    path: string
    description: string
    value: number
    library: $Enums.Libraries
    created_at: Date
    updated_at: Date
    _count: ResourcesCountAggregateOutputType | null
    _avg: ResourcesAvgAggregateOutputType | null
    _sum: ResourcesSumAggregateOutputType | null
    _min: ResourcesMinAggregateOutputType | null
    _max: ResourcesMaxAggregateOutputType | null
  }

  type GetResourcesGroupByPayload<T extends ResourcesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResourcesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResourcesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResourcesGroupByOutputType[P]>
            : GetScalarType<T[P], ResourcesGroupByOutputType[P]>
        }
      >
    >


  export type ResourcesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    path?: boolean
    description?: boolean
    value?: boolean
    library?: boolean
    created_at?: boolean
    updated_at?: boolean
    ResourcesOnModules?: boolean | Resources$ResourcesOnModulesArgs<ExtArgs>
    _count?: boolean | ResourcesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resources"]>

  export type ResourcesSelectScalar = {
    id?: boolean
    name?: boolean
    path?: boolean
    description?: boolean
    value?: boolean
    library?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ResourcesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ResourcesOnModules?: boolean | Resources$ResourcesOnModulesArgs<ExtArgs>
    _count?: boolean | ResourcesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $ResourcesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Resources"
    objects: {
      ResourcesOnModules: Prisma.$ResourcesOnModulesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      path: string
      description: string
      value: number
      library: $Enums.Libraries
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["resources"]>
    composites: {}
  }


  type ResourcesGetPayload<S extends boolean | null | undefined | ResourcesDefaultArgs> = $Result.GetResult<Prisma.$ResourcesPayload, S>

  type ResourcesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ResourcesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ResourcesCountAggregateInputType | true
    }

  export interface ResourcesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Resources'], meta: { name: 'Resources' } }
    /**
     * Find zero or one Resources that matches the filter.
     * @param {ResourcesFindUniqueArgs} args - Arguments to find a Resources
     * @example
     * // Get one Resources
     * const resources = await prisma.resources.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ResourcesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesFindUniqueArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Resources that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ResourcesFindUniqueOrThrowArgs} args - Arguments to find a Resources
     * @example
     * // Get one Resources
     * const resources = await prisma.resources.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ResourcesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Resources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesFindFirstArgs} args - Arguments to find a Resources
     * @example
     * // Get one Resources
     * const resources = await prisma.resources.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ResourcesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesFindFirstArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Resources that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesFindFirstOrThrowArgs} args - Arguments to find a Resources
     * @example
     * // Get one Resources
     * const resources = await prisma.resources.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ResourcesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Resources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Resources
     * const resources = await prisma.resources.findMany()
     * 
     * // Get first 10 Resources
     * const resources = await prisma.resources.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const resourcesWithIdOnly = await prisma.resources.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ResourcesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Resources.
     * @param {ResourcesCreateArgs} args - Arguments to create a Resources.
     * @example
     * // Create one Resources
     * const Resources = await prisma.resources.create({
     *   data: {
     *     // ... data to create a Resources
     *   }
     * })
     * 
    **/
    create<T extends ResourcesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesCreateArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Resources.
     *     @param {ResourcesCreateManyArgs} args - Arguments to create many Resources.
     *     @example
     *     // Create many Resources
     *     const resources = await prisma.resources.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ResourcesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Resources.
     * @param {ResourcesDeleteArgs} args - Arguments to delete one Resources.
     * @example
     * // Delete one Resources
     * const Resources = await prisma.resources.delete({
     *   where: {
     *     // ... filter to delete one Resources
     *   }
     * })
     * 
    **/
    delete<T extends ResourcesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesDeleteArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Resources.
     * @param {ResourcesUpdateArgs} args - Arguments to update one Resources.
     * @example
     * // Update one Resources
     * const resources = await prisma.resources.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ResourcesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesUpdateArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Resources.
     * @param {ResourcesDeleteManyArgs} args - Arguments to filter Resources to delete.
     * @example
     * // Delete a few Resources
     * const { count } = await prisma.resources.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ResourcesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Resources
     * const resources = await prisma.resources.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ResourcesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Resources.
     * @param {ResourcesUpsertArgs} args - Arguments to update or create a Resources.
     * @example
     * // Update or create a Resources
     * const resources = await prisma.resources.upsert({
     *   create: {
     *     // ... data to create a Resources
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Resources we want to update
     *   }
     * })
    **/
    upsert<T extends ResourcesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesUpsertArgs<ExtArgs>>
    ): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesCountArgs} args - Arguments to filter Resources to count.
     * @example
     * // Count the number of Resources
     * const count = await prisma.resources.count({
     *   where: {
     *     // ... the filter for the Resources we want to count
     *   }
     * })
    **/
    count<T extends ResourcesCountArgs>(
      args?: Subset<T, ResourcesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResourcesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResourcesAggregateArgs>(args: Subset<T, ResourcesAggregateArgs>): Prisma.PrismaPromise<GetResourcesAggregateType<T>>

    /**
     * Group by Resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResourcesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResourcesGroupByArgs['orderBy'] }
        : { orderBy?: ResourcesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResourcesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResourcesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Resources model
   */
  readonly fields: ResourcesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Resources.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResourcesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    ResourcesOnModules<T extends Resources$ResourcesOnModulesArgs<ExtArgs> = {}>(args?: Subset<T, Resources$ResourcesOnModulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Resources model
   */ 
  interface ResourcesFieldRefs {
    readonly id: FieldRef<"Resources", 'Int'>
    readonly name: FieldRef<"Resources", 'String'>
    readonly path: FieldRef<"Resources", 'String'>
    readonly description: FieldRef<"Resources", 'String'>
    readonly value: FieldRef<"Resources", 'Float'>
    readonly library: FieldRef<"Resources", 'Libraries'>
    readonly created_at: FieldRef<"Resources", 'DateTime'>
    readonly updated_at: FieldRef<"Resources", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * Resources findUnique
   */
  export type ResourcesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * Filter, which Resources to fetch.
     */
    where: ResourcesWhereUniqueInput
  }


  /**
   * Resources findUniqueOrThrow
   */
  export type ResourcesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * Filter, which Resources to fetch.
     */
    where: ResourcesWhereUniqueInput
  }


  /**
   * Resources findFirst
   */
  export type ResourcesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * Filter, which Resources to fetch.
     */
    where?: ResourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourcesOrderByWithRelationInput | ResourcesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Resources.
     */
    cursor?: ResourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Resources.
     */
    distinct?: ResourcesScalarFieldEnum | ResourcesScalarFieldEnum[]
  }


  /**
   * Resources findFirstOrThrow
   */
  export type ResourcesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * Filter, which Resources to fetch.
     */
    where?: ResourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourcesOrderByWithRelationInput | ResourcesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Resources.
     */
    cursor?: ResourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Resources.
     */
    distinct?: ResourcesScalarFieldEnum | ResourcesScalarFieldEnum[]
  }


  /**
   * Resources findMany
   */
  export type ResourcesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * Filter, which Resources to fetch.
     */
    where?: ResourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Resources to fetch.
     */
    orderBy?: ResourcesOrderByWithRelationInput | ResourcesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Resources.
     */
    cursor?: ResourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Resources.
     */
    skip?: number
    distinct?: ResourcesScalarFieldEnum | ResourcesScalarFieldEnum[]
  }


  /**
   * Resources create
   */
  export type ResourcesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * The data needed to create a Resources.
     */
    data: XOR<ResourcesCreateInput, ResourcesUncheckedCreateInput>
  }


  /**
   * Resources createMany
   */
  export type ResourcesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Resources.
     */
    data: ResourcesCreateManyInput | ResourcesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * Resources update
   */
  export type ResourcesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * The data needed to update a Resources.
     */
    data: XOR<ResourcesUpdateInput, ResourcesUncheckedUpdateInput>
    /**
     * Choose, which Resources to update.
     */
    where: ResourcesWhereUniqueInput
  }


  /**
   * Resources updateMany
   */
  export type ResourcesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Resources.
     */
    data: XOR<ResourcesUpdateManyMutationInput, ResourcesUncheckedUpdateManyInput>
    /**
     * Filter which Resources to update
     */
    where?: ResourcesWhereInput
  }


  /**
   * Resources upsert
   */
  export type ResourcesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * The filter to search for the Resources to update in case it exists.
     */
    where: ResourcesWhereUniqueInput
    /**
     * In case the Resources found by the `where` argument doesn't exist, create a new Resources with this data.
     */
    create: XOR<ResourcesCreateInput, ResourcesUncheckedCreateInput>
    /**
     * In case the Resources was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResourcesUpdateInput, ResourcesUncheckedUpdateInput>
  }


  /**
   * Resources delete
   */
  export type ResourcesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
    /**
     * Filter which Resources to delete.
     */
    where: ResourcesWhereUniqueInput
  }


  /**
   * Resources deleteMany
   */
  export type ResourcesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Resources to delete
     */
    where?: ResourcesWhereInput
  }


  /**
   * Resources.ResourcesOnModules
   */
  export type Resources$ResourcesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    where?: ResourcesOnModulesWhereInput
    orderBy?: ResourcesOnModulesOrderByWithRelationInput | ResourcesOnModulesOrderByWithRelationInput[]
    cursor?: ResourcesOnModulesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ResourcesOnModulesScalarFieldEnum | ResourcesOnModulesScalarFieldEnum[]
  }


  /**
   * Resources without action
   */
  export type ResourcesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Resources
     */
    select?: ResourcesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesInclude<ExtArgs> | null
  }



  /**
   * Model ResourcesOnModules
   */

  export type AggregateResourcesOnModules = {
    _count: ResourcesOnModulesCountAggregateOutputType | null
    _avg: ResourcesOnModulesAvgAggregateOutputType | null
    _sum: ResourcesOnModulesSumAggregateOutputType | null
    _min: ResourcesOnModulesMinAggregateOutputType | null
    _max: ResourcesOnModulesMaxAggregateOutputType | null
  }

  export type ResourcesOnModulesAvgAggregateOutputType = {
    id: number | null
    moduleId: number | null
    resourceId: number | null
  }

  export type ResourcesOnModulesSumAggregateOutputType = {
    id: number | null
    moduleId: number | null
    resourceId: number | null
  }

  export type ResourcesOnModulesMinAggregateOutputType = {
    id: number | null
    moduleId: number | null
    resourceId: number | null
  }

  export type ResourcesOnModulesMaxAggregateOutputType = {
    id: number | null
    moduleId: number | null
    resourceId: number | null
  }

  export type ResourcesOnModulesCountAggregateOutputType = {
    id: number
    moduleId: number
    resourceId: number
    _all: number
  }


  export type ResourcesOnModulesAvgAggregateInputType = {
    id?: true
    moduleId?: true
    resourceId?: true
  }

  export type ResourcesOnModulesSumAggregateInputType = {
    id?: true
    moduleId?: true
    resourceId?: true
  }

  export type ResourcesOnModulesMinAggregateInputType = {
    id?: true
    moduleId?: true
    resourceId?: true
  }

  export type ResourcesOnModulesMaxAggregateInputType = {
    id?: true
    moduleId?: true
    resourceId?: true
  }

  export type ResourcesOnModulesCountAggregateInputType = {
    id?: true
    moduleId?: true
    resourceId?: true
    _all?: true
  }

  export type ResourcesOnModulesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResourcesOnModules to aggregate.
     */
    where?: ResourcesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResourcesOnModules to fetch.
     */
    orderBy?: ResourcesOnModulesOrderByWithRelationInput | ResourcesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ResourcesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResourcesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResourcesOnModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ResourcesOnModules
    **/
    _count?: true | ResourcesOnModulesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ResourcesOnModulesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ResourcesOnModulesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ResourcesOnModulesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ResourcesOnModulesMaxAggregateInputType
  }

  export type GetResourcesOnModulesAggregateType<T extends ResourcesOnModulesAggregateArgs> = {
        [P in keyof T & keyof AggregateResourcesOnModules]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateResourcesOnModules[P]>
      : GetScalarType<T[P], AggregateResourcesOnModules[P]>
  }




  export type ResourcesOnModulesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ResourcesOnModulesWhereInput
    orderBy?: ResourcesOnModulesOrderByWithAggregationInput | ResourcesOnModulesOrderByWithAggregationInput[]
    by: ResourcesOnModulesScalarFieldEnum[] | ResourcesOnModulesScalarFieldEnum
    having?: ResourcesOnModulesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ResourcesOnModulesCountAggregateInputType | true
    _avg?: ResourcesOnModulesAvgAggregateInputType
    _sum?: ResourcesOnModulesSumAggregateInputType
    _min?: ResourcesOnModulesMinAggregateInputType
    _max?: ResourcesOnModulesMaxAggregateInputType
  }

  export type ResourcesOnModulesGroupByOutputType = {
    id: number
    moduleId: number
    resourceId: number
    _count: ResourcesOnModulesCountAggregateOutputType | null
    _avg: ResourcesOnModulesAvgAggregateOutputType | null
    _sum: ResourcesOnModulesSumAggregateOutputType | null
    _min: ResourcesOnModulesMinAggregateOutputType | null
    _max: ResourcesOnModulesMaxAggregateOutputType | null
  }

  type GetResourcesOnModulesGroupByPayload<T extends ResourcesOnModulesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ResourcesOnModulesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ResourcesOnModulesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ResourcesOnModulesGroupByOutputType[P]>
            : GetScalarType<T[P], ResourcesOnModulesGroupByOutputType[P]>
        }
      >
    >


  export type ResourcesOnModulesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    moduleId?: boolean
    resourceId?: boolean
    Modules?: boolean | ModulesDefaultArgs<ExtArgs>
    Resources?: boolean | ResourcesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["resourcesOnModules"]>

  export type ResourcesOnModulesSelectScalar = {
    id?: boolean
    moduleId?: boolean
    resourceId?: boolean
  }

  export type ResourcesOnModulesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Modules?: boolean | ModulesDefaultArgs<ExtArgs>
    Resources?: boolean | ResourcesDefaultArgs<ExtArgs>
  }


  export type $ResourcesOnModulesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ResourcesOnModules"
    objects: {
      Modules: Prisma.$ModulesPayload<ExtArgs>
      Resources: Prisma.$ResourcesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      moduleId: number
      resourceId: number
    }, ExtArgs["result"]["resourcesOnModules"]>
    composites: {}
  }


  type ResourcesOnModulesGetPayload<S extends boolean | null | undefined | ResourcesOnModulesDefaultArgs> = $Result.GetResult<Prisma.$ResourcesOnModulesPayload, S>

  type ResourcesOnModulesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ResourcesOnModulesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ResourcesOnModulesCountAggregateInputType | true
    }

  export interface ResourcesOnModulesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ResourcesOnModules'], meta: { name: 'ResourcesOnModules' } }
    /**
     * Find zero or one ResourcesOnModules that matches the filter.
     * @param {ResourcesOnModulesFindUniqueArgs} args - Arguments to find a ResourcesOnModules
     * @example
     * // Get one ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ResourcesOnModulesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesOnModulesFindUniqueArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ResourcesOnModules that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ResourcesOnModulesFindUniqueOrThrowArgs} args - Arguments to find a ResourcesOnModules
     * @example
     * // Get one ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ResourcesOnModulesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesOnModulesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ResourcesOnModules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesFindFirstArgs} args - Arguments to find a ResourcesOnModules
     * @example
     * // Get one ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ResourcesOnModulesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesOnModulesFindFirstArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ResourcesOnModules that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesFindFirstOrThrowArgs} args - Arguments to find a ResourcesOnModules
     * @example
     * // Get one ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ResourcesOnModulesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesOnModulesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ResourcesOnModules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.findMany()
     * 
     * // Get first 10 ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const resourcesOnModulesWithIdOnly = await prisma.resourcesOnModules.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ResourcesOnModulesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesOnModulesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ResourcesOnModules.
     * @param {ResourcesOnModulesCreateArgs} args - Arguments to create a ResourcesOnModules.
     * @example
     * // Create one ResourcesOnModules
     * const ResourcesOnModules = await prisma.resourcesOnModules.create({
     *   data: {
     *     // ... data to create a ResourcesOnModules
     *   }
     * })
     * 
    **/
    create<T extends ResourcesOnModulesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesOnModulesCreateArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ResourcesOnModules.
     *     @param {ResourcesOnModulesCreateManyArgs} args - Arguments to create many ResourcesOnModules.
     *     @example
     *     // Create many ResourcesOnModules
     *     const resourcesOnModules = await prisma.resourcesOnModules.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ResourcesOnModulesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesOnModulesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ResourcesOnModules.
     * @param {ResourcesOnModulesDeleteArgs} args - Arguments to delete one ResourcesOnModules.
     * @example
     * // Delete one ResourcesOnModules
     * const ResourcesOnModules = await prisma.resourcesOnModules.delete({
     *   where: {
     *     // ... filter to delete one ResourcesOnModules
     *   }
     * })
     * 
    **/
    delete<T extends ResourcesOnModulesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesOnModulesDeleteArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ResourcesOnModules.
     * @param {ResourcesOnModulesUpdateArgs} args - Arguments to update one ResourcesOnModules.
     * @example
     * // Update one ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ResourcesOnModulesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesOnModulesUpdateArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ResourcesOnModules.
     * @param {ResourcesOnModulesDeleteManyArgs} args - Arguments to filter ResourcesOnModules to delete.
     * @example
     * // Delete a few ResourcesOnModules
     * const { count } = await prisma.resourcesOnModules.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ResourcesOnModulesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ResourcesOnModulesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ResourcesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ResourcesOnModulesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesOnModulesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ResourcesOnModules.
     * @param {ResourcesOnModulesUpsertArgs} args - Arguments to update or create a ResourcesOnModules.
     * @example
     * // Update or create a ResourcesOnModules
     * const resourcesOnModules = await prisma.resourcesOnModules.upsert({
     *   create: {
     *     // ... data to create a ResourcesOnModules
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ResourcesOnModules we want to update
     *   }
     * })
    **/
    upsert<T extends ResourcesOnModulesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ResourcesOnModulesUpsertArgs<ExtArgs>>
    ): Prisma__ResourcesOnModulesClient<$Result.GetResult<Prisma.$ResourcesOnModulesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ResourcesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesCountArgs} args - Arguments to filter ResourcesOnModules to count.
     * @example
     * // Count the number of ResourcesOnModules
     * const count = await prisma.resourcesOnModules.count({
     *   where: {
     *     // ... the filter for the ResourcesOnModules we want to count
     *   }
     * })
    **/
    count<T extends ResourcesOnModulesCountArgs>(
      args?: Subset<T, ResourcesOnModulesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ResourcesOnModulesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ResourcesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ResourcesOnModulesAggregateArgs>(args: Subset<T, ResourcesOnModulesAggregateArgs>): Prisma.PrismaPromise<GetResourcesOnModulesAggregateType<T>>

    /**
     * Group by ResourcesOnModules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ResourcesOnModulesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ResourcesOnModulesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ResourcesOnModulesGroupByArgs['orderBy'] }
        : { orderBy?: ResourcesOnModulesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ResourcesOnModulesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetResourcesOnModulesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ResourcesOnModules model
   */
  readonly fields: ResourcesOnModulesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ResourcesOnModules.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ResourcesOnModulesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Modules<T extends ModulesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModulesDefaultArgs<ExtArgs>>): Prisma__ModulesClient<$Result.GetResult<Prisma.$ModulesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Resources<T extends ResourcesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ResourcesDefaultArgs<ExtArgs>>): Prisma__ResourcesClient<$Result.GetResult<Prisma.$ResourcesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ResourcesOnModules model
   */ 
  interface ResourcesOnModulesFieldRefs {
    readonly id: FieldRef<"ResourcesOnModules", 'Int'>
    readonly moduleId: FieldRef<"ResourcesOnModules", 'Int'>
    readonly resourceId: FieldRef<"ResourcesOnModules", 'Int'>
  }
    

  // Custom InputTypes

  /**
   * ResourcesOnModules findUnique
   */
  export type ResourcesOnModulesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which ResourcesOnModules to fetch.
     */
    where: ResourcesOnModulesWhereUniqueInput
  }


  /**
   * ResourcesOnModules findUniqueOrThrow
   */
  export type ResourcesOnModulesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which ResourcesOnModules to fetch.
     */
    where: ResourcesOnModulesWhereUniqueInput
  }


  /**
   * ResourcesOnModules findFirst
   */
  export type ResourcesOnModulesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which ResourcesOnModules to fetch.
     */
    where?: ResourcesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResourcesOnModules to fetch.
     */
    orderBy?: ResourcesOnModulesOrderByWithRelationInput | ResourcesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResourcesOnModules.
     */
    cursor?: ResourcesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResourcesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResourcesOnModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResourcesOnModules.
     */
    distinct?: ResourcesOnModulesScalarFieldEnum | ResourcesOnModulesScalarFieldEnum[]
  }


  /**
   * ResourcesOnModules findFirstOrThrow
   */
  export type ResourcesOnModulesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which ResourcesOnModules to fetch.
     */
    where?: ResourcesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResourcesOnModules to fetch.
     */
    orderBy?: ResourcesOnModulesOrderByWithRelationInput | ResourcesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ResourcesOnModules.
     */
    cursor?: ResourcesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResourcesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResourcesOnModules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ResourcesOnModules.
     */
    distinct?: ResourcesOnModulesScalarFieldEnum | ResourcesOnModulesScalarFieldEnum[]
  }


  /**
   * ResourcesOnModules findMany
   */
  export type ResourcesOnModulesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * Filter, which ResourcesOnModules to fetch.
     */
    where?: ResourcesOnModulesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ResourcesOnModules to fetch.
     */
    orderBy?: ResourcesOnModulesOrderByWithRelationInput | ResourcesOnModulesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ResourcesOnModules.
     */
    cursor?: ResourcesOnModulesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ResourcesOnModules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ResourcesOnModules.
     */
    skip?: number
    distinct?: ResourcesOnModulesScalarFieldEnum | ResourcesOnModulesScalarFieldEnum[]
  }


  /**
   * ResourcesOnModules create
   */
  export type ResourcesOnModulesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * The data needed to create a ResourcesOnModules.
     */
    data: XOR<ResourcesOnModulesCreateInput, ResourcesOnModulesUncheckedCreateInput>
  }


  /**
   * ResourcesOnModules createMany
   */
  export type ResourcesOnModulesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ResourcesOnModules.
     */
    data: ResourcesOnModulesCreateManyInput | ResourcesOnModulesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * ResourcesOnModules update
   */
  export type ResourcesOnModulesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * The data needed to update a ResourcesOnModules.
     */
    data: XOR<ResourcesOnModulesUpdateInput, ResourcesOnModulesUncheckedUpdateInput>
    /**
     * Choose, which ResourcesOnModules to update.
     */
    where: ResourcesOnModulesWhereUniqueInput
  }


  /**
   * ResourcesOnModules updateMany
   */
  export type ResourcesOnModulesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ResourcesOnModules.
     */
    data: XOR<ResourcesOnModulesUpdateManyMutationInput, ResourcesOnModulesUncheckedUpdateManyInput>
    /**
     * Filter which ResourcesOnModules to update
     */
    where?: ResourcesOnModulesWhereInput
  }


  /**
   * ResourcesOnModules upsert
   */
  export type ResourcesOnModulesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * The filter to search for the ResourcesOnModules to update in case it exists.
     */
    where: ResourcesOnModulesWhereUniqueInput
    /**
     * In case the ResourcesOnModules found by the `where` argument doesn't exist, create a new ResourcesOnModules with this data.
     */
    create: XOR<ResourcesOnModulesCreateInput, ResourcesOnModulesUncheckedCreateInput>
    /**
     * In case the ResourcesOnModules was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ResourcesOnModulesUpdateInput, ResourcesOnModulesUncheckedUpdateInput>
  }


  /**
   * ResourcesOnModules delete
   */
  export type ResourcesOnModulesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
    /**
     * Filter which ResourcesOnModules to delete.
     */
    where: ResourcesOnModulesWhereUniqueInput
  }


  /**
   * ResourcesOnModules deleteMany
   */
  export type ResourcesOnModulesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ResourcesOnModules to delete
     */
    where?: ResourcesOnModulesWhereInput
  }


  /**
   * ResourcesOnModules without action
   */
  export type ResourcesOnModulesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ResourcesOnModules
     */
    select?: ResourcesOnModulesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: ResourcesOnModulesInclude<ExtArgs> | null
  }



  /**
   * Model UsersOnCategories
   */

  export type AggregateUsersOnCategories = {
    _count: UsersOnCategoriesCountAggregateOutputType | null
    _avg: UsersOnCategoriesAvgAggregateOutputType | null
    _sum: UsersOnCategoriesSumAggregateOutputType | null
    _min: UsersOnCategoriesMinAggregateOutputType | null
    _max: UsersOnCategoriesMaxAggregateOutputType | null
  }

  export type UsersOnCategoriesAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    categoryId: number | null
  }

  export type UsersOnCategoriesSumAggregateOutputType = {
    id: number | null
    userId: number | null
    categoryId: number | null
  }

  export type UsersOnCategoriesMinAggregateOutputType = {
    id: number | null
    userId: number | null
    categoryId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersOnCategoriesMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    categoryId: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersOnCategoriesCountAggregateOutputType = {
    id: number
    userId: number
    categoryId: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsersOnCategoriesAvgAggregateInputType = {
    id?: true
    userId?: true
    categoryId?: true
  }

  export type UsersOnCategoriesSumAggregateInputType = {
    id?: true
    userId?: true
    categoryId?: true
  }

  export type UsersOnCategoriesMinAggregateInputType = {
    id?: true
    userId?: true
    categoryId?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersOnCategoriesMaxAggregateInputType = {
    id?: true
    userId?: true
    categoryId?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersOnCategoriesCountAggregateInputType = {
    id?: true
    userId?: true
    categoryId?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsersOnCategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsersOnCategories to aggregate.
     */
    where?: UsersOnCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsersOnCategories to fetch.
     */
    orderBy?: UsersOnCategoriesOrderByWithRelationInput | UsersOnCategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersOnCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsersOnCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsersOnCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UsersOnCategories
    **/
    _count?: true | UsersOnCategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersOnCategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersOnCategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersOnCategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersOnCategoriesMaxAggregateInputType
  }

  export type GetUsersOnCategoriesAggregateType<T extends UsersOnCategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateUsersOnCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsersOnCategories[P]>
      : GetScalarType<T[P], AggregateUsersOnCategories[P]>
  }




  export type UsersOnCategoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersOnCategoriesWhereInput
    orderBy?: UsersOnCategoriesOrderByWithAggregationInput | UsersOnCategoriesOrderByWithAggregationInput[]
    by: UsersOnCategoriesScalarFieldEnum[] | UsersOnCategoriesScalarFieldEnum
    having?: UsersOnCategoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersOnCategoriesCountAggregateInputType | true
    _avg?: UsersOnCategoriesAvgAggregateInputType
    _sum?: UsersOnCategoriesSumAggregateInputType
    _min?: UsersOnCategoriesMinAggregateInputType
    _max?: UsersOnCategoriesMaxAggregateInputType
  }

  export type UsersOnCategoriesGroupByOutputType = {
    id: number
    userId: number
    categoryId: number
    created_at: Date
    updated_at: Date
    _count: UsersOnCategoriesCountAggregateOutputType | null
    _avg: UsersOnCategoriesAvgAggregateOutputType | null
    _sum: UsersOnCategoriesSumAggregateOutputType | null
    _min: UsersOnCategoriesMinAggregateOutputType | null
    _max: UsersOnCategoriesMaxAggregateOutputType | null
  }

  type GetUsersOnCategoriesGroupByPayload<T extends UsersOnCategoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersOnCategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersOnCategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersOnCategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], UsersOnCategoriesGroupByOutputType[P]>
        }
      >
    >


  export type UsersOnCategoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    categoryId?: boolean
    created_at?: boolean
    updated_at?: boolean
    Categories?: boolean | CategoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usersOnCategories"]>

  export type UsersOnCategoriesSelectScalar = {
    id?: boolean
    userId?: boolean
    categoryId?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type UsersOnCategoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Categories?: boolean | CategoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }


  export type $UsersOnCategoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UsersOnCategories"
    objects: {
      Categories: Prisma.$CategoriesPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      categoryId: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["usersOnCategories"]>
    composites: {}
  }


  type UsersOnCategoriesGetPayload<S extends boolean | null | undefined | UsersOnCategoriesDefaultArgs> = $Result.GetResult<Prisma.$UsersOnCategoriesPayload, S>

  type UsersOnCategoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsersOnCategoriesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersOnCategoriesCountAggregateInputType | true
    }

  export interface UsersOnCategoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UsersOnCategories'], meta: { name: 'UsersOnCategories' } }
    /**
     * Find zero or one UsersOnCategories that matches the filter.
     * @param {UsersOnCategoriesFindUniqueArgs} args - Arguments to find a UsersOnCategories
     * @example
     * // Get one UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsersOnCategoriesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UsersOnCategoriesFindUniqueArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one UsersOnCategories that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UsersOnCategoriesFindUniqueOrThrowArgs} args - Arguments to find a UsersOnCategories
     * @example
     * // Get one UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsersOnCategoriesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersOnCategoriesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first UsersOnCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesFindFirstArgs} args - Arguments to find a UsersOnCategories
     * @example
     * // Get one UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsersOnCategoriesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersOnCategoriesFindFirstArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first UsersOnCategories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesFindFirstOrThrowArgs} args - Arguments to find a UsersOnCategories
     * @example
     * // Get one UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsersOnCategoriesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersOnCategoriesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more UsersOnCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.findMany()
     * 
     * // Get first 10 UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersOnCategoriesWithIdOnly = await prisma.usersOnCategories.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UsersOnCategoriesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersOnCategoriesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a UsersOnCategories.
     * @param {UsersOnCategoriesCreateArgs} args - Arguments to create a UsersOnCategories.
     * @example
     * // Create one UsersOnCategories
     * const UsersOnCategories = await prisma.usersOnCategories.create({
     *   data: {
     *     // ... data to create a UsersOnCategories
     *   }
     * })
     * 
    **/
    create<T extends UsersOnCategoriesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UsersOnCategoriesCreateArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many UsersOnCategories.
     *     @param {UsersOnCategoriesCreateManyArgs} args - Arguments to create many UsersOnCategories.
     *     @example
     *     // Create many UsersOnCategories
     *     const usersOnCategories = await prisma.usersOnCategories.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UsersOnCategoriesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersOnCategoriesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UsersOnCategories.
     * @param {UsersOnCategoriesDeleteArgs} args - Arguments to delete one UsersOnCategories.
     * @example
     * // Delete one UsersOnCategories
     * const UsersOnCategories = await prisma.usersOnCategories.delete({
     *   where: {
     *     // ... filter to delete one UsersOnCategories
     *   }
     * })
     * 
    **/
    delete<T extends UsersOnCategoriesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UsersOnCategoriesDeleteArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one UsersOnCategories.
     * @param {UsersOnCategoriesUpdateArgs} args - Arguments to update one UsersOnCategories.
     * @example
     * // Update one UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsersOnCategoriesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UsersOnCategoriesUpdateArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more UsersOnCategories.
     * @param {UsersOnCategoriesDeleteManyArgs} args - Arguments to filter UsersOnCategories to delete.
     * @example
     * // Delete a few UsersOnCategories
     * const { count } = await prisma.usersOnCategories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsersOnCategoriesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UsersOnCategoriesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UsersOnCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsersOnCategoriesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UsersOnCategoriesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UsersOnCategories.
     * @param {UsersOnCategoriesUpsertArgs} args - Arguments to update or create a UsersOnCategories.
     * @example
     * // Update or create a UsersOnCategories
     * const usersOnCategories = await prisma.usersOnCategories.upsert({
     *   create: {
     *     // ... data to create a UsersOnCategories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UsersOnCategories we want to update
     *   }
     * })
    **/
    upsert<T extends UsersOnCategoriesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UsersOnCategoriesUpsertArgs<ExtArgs>>
    ): Prisma__UsersOnCategoriesClient<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of UsersOnCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesCountArgs} args - Arguments to filter UsersOnCategories to count.
     * @example
     * // Count the number of UsersOnCategories
     * const count = await prisma.usersOnCategories.count({
     *   where: {
     *     // ... the filter for the UsersOnCategories we want to count
     *   }
     * })
    **/
    count<T extends UsersOnCategoriesCountArgs>(
      args?: Subset<T, UsersOnCategoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersOnCategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UsersOnCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersOnCategoriesAggregateArgs>(args: Subset<T, UsersOnCategoriesAggregateArgs>): Prisma.PrismaPromise<GetUsersOnCategoriesAggregateType<T>>

    /**
     * Group by UsersOnCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersOnCategoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersOnCategoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersOnCategoriesGroupByArgs['orderBy'] }
        : { orderBy?: UsersOnCategoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersOnCategoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersOnCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UsersOnCategories model
   */
  readonly fields: UsersOnCategoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UsersOnCategories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersOnCategoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Categories<T extends CategoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoriesDefaultArgs<ExtArgs>>): Prisma__CategoriesClient<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the UsersOnCategories model
   */ 
  interface UsersOnCategoriesFieldRefs {
    readonly id: FieldRef<"UsersOnCategories", 'Int'>
    readonly userId: FieldRef<"UsersOnCategories", 'Int'>
    readonly categoryId: FieldRef<"UsersOnCategories", 'Int'>
    readonly created_at: FieldRef<"UsersOnCategories", 'DateTime'>
    readonly updated_at: FieldRef<"UsersOnCategories", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * UsersOnCategories findUnique
   */
  export type UsersOnCategoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * Filter, which UsersOnCategories to fetch.
     */
    where: UsersOnCategoriesWhereUniqueInput
  }


  /**
   * UsersOnCategories findUniqueOrThrow
   */
  export type UsersOnCategoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * Filter, which UsersOnCategories to fetch.
     */
    where: UsersOnCategoriesWhereUniqueInput
  }


  /**
   * UsersOnCategories findFirst
   */
  export type UsersOnCategoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * Filter, which UsersOnCategories to fetch.
     */
    where?: UsersOnCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsersOnCategories to fetch.
     */
    orderBy?: UsersOnCategoriesOrderByWithRelationInput | UsersOnCategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsersOnCategories.
     */
    cursor?: UsersOnCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsersOnCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsersOnCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsersOnCategories.
     */
    distinct?: UsersOnCategoriesScalarFieldEnum | UsersOnCategoriesScalarFieldEnum[]
  }


  /**
   * UsersOnCategories findFirstOrThrow
   */
  export type UsersOnCategoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * Filter, which UsersOnCategories to fetch.
     */
    where?: UsersOnCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsersOnCategories to fetch.
     */
    orderBy?: UsersOnCategoriesOrderByWithRelationInput | UsersOnCategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UsersOnCategories.
     */
    cursor?: UsersOnCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsersOnCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsersOnCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UsersOnCategories.
     */
    distinct?: UsersOnCategoriesScalarFieldEnum | UsersOnCategoriesScalarFieldEnum[]
  }


  /**
   * UsersOnCategories findMany
   */
  export type UsersOnCategoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * Filter, which UsersOnCategories to fetch.
     */
    where?: UsersOnCategoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UsersOnCategories to fetch.
     */
    orderBy?: UsersOnCategoriesOrderByWithRelationInput | UsersOnCategoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UsersOnCategories.
     */
    cursor?: UsersOnCategoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UsersOnCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UsersOnCategories.
     */
    skip?: number
    distinct?: UsersOnCategoriesScalarFieldEnum | UsersOnCategoriesScalarFieldEnum[]
  }


  /**
   * UsersOnCategories create
   */
  export type UsersOnCategoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a UsersOnCategories.
     */
    data: XOR<UsersOnCategoriesCreateInput, UsersOnCategoriesUncheckedCreateInput>
  }


  /**
   * UsersOnCategories createMany
   */
  export type UsersOnCategoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UsersOnCategories.
     */
    data: UsersOnCategoriesCreateManyInput | UsersOnCategoriesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * UsersOnCategories update
   */
  export type UsersOnCategoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a UsersOnCategories.
     */
    data: XOR<UsersOnCategoriesUpdateInput, UsersOnCategoriesUncheckedUpdateInput>
    /**
     * Choose, which UsersOnCategories to update.
     */
    where: UsersOnCategoriesWhereUniqueInput
  }


  /**
   * UsersOnCategories updateMany
   */
  export type UsersOnCategoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UsersOnCategories.
     */
    data: XOR<UsersOnCategoriesUpdateManyMutationInput, UsersOnCategoriesUncheckedUpdateManyInput>
    /**
     * Filter which UsersOnCategories to update
     */
    where?: UsersOnCategoriesWhereInput
  }


  /**
   * UsersOnCategories upsert
   */
  export type UsersOnCategoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the UsersOnCategories to update in case it exists.
     */
    where: UsersOnCategoriesWhereUniqueInput
    /**
     * In case the UsersOnCategories found by the `where` argument doesn't exist, create a new UsersOnCategories with this data.
     */
    create: XOR<UsersOnCategoriesCreateInput, UsersOnCategoriesUncheckedCreateInput>
    /**
     * In case the UsersOnCategories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersOnCategoriesUpdateInput, UsersOnCategoriesUncheckedUpdateInput>
  }


  /**
   * UsersOnCategories delete
   */
  export type UsersOnCategoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    /**
     * Filter which UsersOnCategories to delete.
     */
    where: UsersOnCategoriesWhereUniqueInput
  }


  /**
   * UsersOnCategories deleteMany
   */
  export type UsersOnCategoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UsersOnCategories to delete
     */
    where?: UsersOnCategoriesWhereInput
  }


  /**
   * UsersOnCategories without action
   */
  export type UsersOnCategoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
  }



  /**
   * Model security_code
   */

  export type AggregateSecurity_code = {
    _count: Security_codeCountAggregateOutputType | null
    _avg: Security_codeAvgAggregateOutputType | null
    _sum: Security_codeSumAggregateOutputType | null
    _min: Security_codeMinAggregateOutputType | null
    _max: Security_codeMaxAggregateOutputType | null
  }

  export type Security_codeAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type Security_codeSumAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type Security_codeMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    code: string | null
    date_expiration: Date | null
    status: $Enums.StatusSecurityCode | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Security_codeMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    code: string | null
    date_expiration: Date | null
    status: $Enums.StatusSecurityCode | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Security_codeCountAggregateOutputType = {
    id: number
    id_user: number
    code: number
    date_expiration: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Security_codeAvgAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type Security_codeSumAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type Security_codeMinAggregateInputType = {
    id?: true
    id_user?: true
    code?: true
    date_expiration?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Security_codeMaxAggregateInputType = {
    id?: true
    id_user?: true
    code?: true
    date_expiration?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Security_codeCountAggregateInputType = {
    id?: true
    id_user?: true
    code?: true
    date_expiration?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Security_codeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_code to aggregate.
     */
    where?: security_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_codes to fetch.
     */
    orderBy?: security_codeOrderByWithRelationInput | security_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: security_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned security_codes
    **/
    _count?: true | Security_codeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Security_codeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Security_codeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Security_codeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Security_codeMaxAggregateInputType
  }

  export type GetSecurity_codeAggregateType<T extends Security_codeAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurity_code]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurity_code[P]>
      : GetScalarType<T[P], AggregateSecurity_code[P]>
  }




  export type security_codeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: security_codeWhereInput
    orderBy?: security_codeOrderByWithAggregationInput | security_codeOrderByWithAggregationInput[]
    by: Security_codeScalarFieldEnum[] | Security_codeScalarFieldEnum
    having?: security_codeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Security_codeCountAggregateInputType | true
    _avg?: Security_codeAvgAggregateInputType
    _sum?: Security_codeSumAggregateInputType
    _min?: Security_codeMinAggregateInputType
    _max?: Security_codeMaxAggregateInputType
  }

  export type Security_codeGroupByOutputType = {
    id: number
    id_user: number
    code: string
    date_expiration: Date
    status: $Enums.StatusSecurityCode
    created_at: Date
    updated_at: Date
    _count: Security_codeCountAggregateOutputType | null
    _avg: Security_codeAvgAggregateOutputType | null
    _sum: Security_codeSumAggregateOutputType | null
    _min: Security_codeMinAggregateOutputType | null
    _max: Security_codeMaxAggregateOutputType | null
  }

  type GetSecurity_codeGroupByPayload<T extends security_codeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Security_codeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Security_codeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Security_codeGroupByOutputType[P]>
            : GetScalarType<T[P], Security_codeGroupByOutputType[P]>
        }
      >
    >


  export type security_codeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    code?: boolean
    date_expiration?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["security_code"]>

  export type security_codeSelectScalar = {
    id?: boolean
    id_user?: boolean
    code?: boolean
    date_expiration?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type security_codeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }


  export type $security_codePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "security_code"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number
      code: string
      date_expiration: Date
      status: $Enums.StatusSecurityCode
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["security_code"]>
    composites: {}
  }


  type security_codeGetPayload<S extends boolean | null | undefined | security_codeDefaultArgs> = $Result.GetResult<Prisma.$security_codePayload, S>

  type security_codeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<security_codeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Security_codeCountAggregateInputType | true
    }

  export interface security_codeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['security_code'], meta: { name: 'security_code' } }
    /**
     * Find zero or one Security_code that matches the filter.
     * @param {security_codeFindUniqueArgs} args - Arguments to find a Security_code
     * @example
     * // Get one Security_code
     * const security_code = await prisma.security_code.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends security_codeFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, security_codeFindUniqueArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Security_code that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {security_codeFindUniqueOrThrowArgs} args - Arguments to find a Security_code
     * @example
     * // Get one Security_code
     * const security_code = await prisma.security_code.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends security_codeFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, security_codeFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Security_code that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_codeFindFirstArgs} args - Arguments to find a Security_code
     * @example
     * // Get one Security_code
     * const security_code = await prisma.security_code.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends security_codeFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, security_codeFindFirstArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Security_code that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_codeFindFirstOrThrowArgs} args - Arguments to find a Security_code
     * @example
     * // Get one Security_code
     * const security_code = await prisma.security_code.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends security_codeFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, security_codeFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Security_codes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_codeFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Security_codes
     * const security_codes = await prisma.security_code.findMany()
     * 
     * // Get first 10 Security_codes
     * const security_codes = await prisma.security_code.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const security_codeWithIdOnly = await prisma.security_code.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends security_codeFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, security_codeFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Security_code.
     * @param {security_codeCreateArgs} args - Arguments to create a Security_code.
     * @example
     * // Create one Security_code
     * const Security_code = await prisma.security_code.create({
     *   data: {
     *     // ... data to create a Security_code
     *   }
     * })
     * 
    **/
    create<T extends security_codeCreateArgs<ExtArgs>>(
      args: SelectSubset<T, security_codeCreateArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Security_codes.
     *     @param {security_codeCreateManyArgs} args - Arguments to create many Security_codes.
     *     @example
     *     // Create many Security_codes
     *     const security_code = await prisma.security_code.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends security_codeCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, security_codeCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Security_code.
     * @param {security_codeDeleteArgs} args - Arguments to delete one Security_code.
     * @example
     * // Delete one Security_code
     * const Security_code = await prisma.security_code.delete({
     *   where: {
     *     // ... filter to delete one Security_code
     *   }
     * })
     * 
    **/
    delete<T extends security_codeDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, security_codeDeleteArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Security_code.
     * @param {security_codeUpdateArgs} args - Arguments to update one Security_code.
     * @example
     * // Update one Security_code
     * const security_code = await prisma.security_code.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends security_codeUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, security_codeUpdateArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Security_codes.
     * @param {security_codeDeleteManyArgs} args - Arguments to filter Security_codes to delete.
     * @example
     * // Delete a few Security_codes
     * const { count } = await prisma.security_code.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends security_codeDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, security_codeDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Security_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_codeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Security_codes
     * const security_code = await prisma.security_code.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends security_codeUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, security_codeUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Security_code.
     * @param {security_codeUpsertArgs} args - Arguments to update or create a Security_code.
     * @example
     * // Update or create a Security_code
     * const security_code = await prisma.security_code.upsert({
     *   create: {
     *     // ... data to create a Security_code
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Security_code we want to update
     *   }
     * })
    **/
    upsert<T extends security_codeUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, security_codeUpsertArgs<ExtArgs>>
    ): Prisma__security_codeClient<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Security_codes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_codeCountArgs} args - Arguments to filter Security_codes to count.
     * @example
     * // Count the number of Security_codes
     * const count = await prisma.security_code.count({
     *   where: {
     *     // ... the filter for the Security_codes we want to count
     *   }
     * })
    **/
    count<T extends security_codeCountArgs>(
      args?: Subset<T, security_codeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Security_codeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Security_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Security_codeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Security_codeAggregateArgs>(args: Subset<T, Security_codeAggregateArgs>): Prisma.PrismaPromise<GetSecurity_codeAggregateType<T>>

    /**
     * Group by Security_code.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {security_codeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends security_codeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: security_codeGroupByArgs['orderBy'] }
        : { orderBy?: security_codeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, security_codeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurity_codeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the security_code model
   */
  readonly fields: security_codeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for security_code.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__security_codeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the security_code model
   */ 
  interface security_codeFieldRefs {
    readonly id: FieldRef<"security_code", 'Int'>
    readonly id_user: FieldRef<"security_code", 'Int'>
    readonly code: FieldRef<"security_code", 'String'>
    readonly date_expiration: FieldRef<"security_code", 'DateTime'>
    readonly status: FieldRef<"security_code", 'StatusSecurityCode'>
    readonly created_at: FieldRef<"security_code", 'DateTime'>
    readonly updated_at: FieldRef<"security_code", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * security_code findUnique
   */
  export type security_codeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * Filter, which security_code to fetch.
     */
    where: security_codeWhereUniqueInput
  }


  /**
   * security_code findUniqueOrThrow
   */
  export type security_codeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * Filter, which security_code to fetch.
     */
    where: security_codeWhereUniqueInput
  }


  /**
   * security_code findFirst
   */
  export type security_codeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * Filter, which security_code to fetch.
     */
    where?: security_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_codes to fetch.
     */
    orderBy?: security_codeOrderByWithRelationInput | security_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_codes.
     */
    cursor?: security_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_codes.
     */
    distinct?: Security_codeScalarFieldEnum | Security_codeScalarFieldEnum[]
  }


  /**
   * security_code findFirstOrThrow
   */
  export type security_codeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * Filter, which security_code to fetch.
     */
    where?: security_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_codes to fetch.
     */
    orderBy?: security_codeOrderByWithRelationInput | security_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for security_codes.
     */
    cursor?: security_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_codes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of security_codes.
     */
    distinct?: Security_codeScalarFieldEnum | Security_codeScalarFieldEnum[]
  }


  /**
   * security_code findMany
   */
  export type security_codeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * Filter, which security_codes to fetch.
     */
    where?: security_codeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of security_codes to fetch.
     */
    orderBy?: security_codeOrderByWithRelationInput | security_codeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing security_codes.
     */
    cursor?: security_codeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` security_codes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` security_codes.
     */
    skip?: number
    distinct?: Security_codeScalarFieldEnum | Security_codeScalarFieldEnum[]
  }


  /**
   * security_code create
   */
  export type security_codeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * The data needed to create a security_code.
     */
    data: XOR<security_codeCreateInput, security_codeUncheckedCreateInput>
  }


  /**
   * security_code createMany
   */
  export type security_codeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many security_codes.
     */
    data: security_codeCreateManyInput | security_codeCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * security_code update
   */
  export type security_codeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * The data needed to update a security_code.
     */
    data: XOR<security_codeUpdateInput, security_codeUncheckedUpdateInput>
    /**
     * Choose, which security_code to update.
     */
    where: security_codeWhereUniqueInput
  }


  /**
   * security_code updateMany
   */
  export type security_codeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update security_codes.
     */
    data: XOR<security_codeUpdateManyMutationInput, security_codeUncheckedUpdateManyInput>
    /**
     * Filter which security_codes to update
     */
    where?: security_codeWhereInput
  }


  /**
   * security_code upsert
   */
  export type security_codeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * The filter to search for the security_code to update in case it exists.
     */
    where: security_codeWhereUniqueInput
    /**
     * In case the security_code found by the `where` argument doesn't exist, create a new security_code with this data.
     */
    create: XOR<security_codeCreateInput, security_codeUncheckedCreateInput>
    /**
     * In case the security_code was found with the provided `where` argument, update it with this data.
     */
    update: XOR<security_codeUpdateInput, security_codeUncheckedUpdateInput>
  }


  /**
   * security_code delete
   */
  export type security_codeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    /**
     * Filter which security_code to delete.
     */
    where: security_codeWhereUniqueInput
  }


  /**
   * security_code deleteMany
   */
  export type security_codeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which security_codes to delete
     */
    where?: security_codeWhereInput
  }


  /**
   * security_code without action
   */
  export type security_codeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
  }



  /**
   * Model token_managements
   */

  export type AggregateToken_managements = {
    _count: Token_managementsCountAggregateOutputType | null
    _avg: Token_managementsAvgAggregateOutputType | null
    _sum: Token_managementsSumAggregateOutputType | null
    _min: Token_managementsMinAggregateOutputType | null
    _max: Token_managementsMaxAggregateOutputType | null
  }

  export type Token_managementsAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type Token_managementsSumAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type Token_managementsMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    origin: string | null
    token: string | null
    expiration: Date | null
    status: $Enums.Status | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Token_managementsMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    origin: string | null
    token: string | null
    expiration: Date | null
    status: $Enums.Status | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Token_managementsCountAggregateOutputType = {
    id: number
    id_user: number
    origin: number
    token: number
    expiration: number
    data: number
    status: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Token_managementsAvgAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type Token_managementsSumAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type Token_managementsMinAggregateInputType = {
    id?: true
    id_user?: true
    origin?: true
    token?: true
    expiration?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Token_managementsMaxAggregateInputType = {
    id?: true
    id_user?: true
    origin?: true
    token?: true
    expiration?: true
    status?: true
    created_at?: true
    updated_at?: true
  }

  export type Token_managementsCountAggregateInputType = {
    id?: true
    id_user?: true
    origin?: true
    token?: true
    expiration?: true
    data?: true
    status?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Token_managementsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which token_managements to aggregate.
     */
    where?: token_managementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_managements to fetch.
     */
    orderBy?: token_managementsOrderByWithRelationInput | token_managementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: token_managementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_managements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned token_managements
    **/
    _count?: true | Token_managementsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Token_managementsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Token_managementsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Token_managementsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Token_managementsMaxAggregateInputType
  }

  export type GetToken_managementsAggregateType<T extends Token_managementsAggregateArgs> = {
        [P in keyof T & keyof AggregateToken_managements]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateToken_managements[P]>
      : GetScalarType<T[P], AggregateToken_managements[P]>
  }




  export type token_managementsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: token_managementsWhereInput
    orderBy?: token_managementsOrderByWithAggregationInput | token_managementsOrderByWithAggregationInput[]
    by: Token_managementsScalarFieldEnum[] | Token_managementsScalarFieldEnum
    having?: token_managementsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Token_managementsCountAggregateInputType | true
    _avg?: Token_managementsAvgAggregateInputType
    _sum?: Token_managementsSumAggregateInputType
    _min?: Token_managementsMinAggregateInputType
    _max?: Token_managementsMaxAggregateInputType
  }

  export type Token_managementsGroupByOutputType = {
    id: number
    id_user: number | null
    origin: string
    token: string
    expiration: Date
    data: JsonValue | null
    status: $Enums.Status
    created_at: Date
    updated_at: Date
    _count: Token_managementsCountAggregateOutputType | null
    _avg: Token_managementsAvgAggregateOutputType | null
    _sum: Token_managementsSumAggregateOutputType | null
    _min: Token_managementsMinAggregateOutputType | null
    _max: Token_managementsMaxAggregateOutputType | null
  }

  type GetToken_managementsGroupByPayload<T extends token_managementsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Token_managementsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Token_managementsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Token_managementsGroupByOutputType[P]>
            : GetScalarType<T[P], Token_managementsGroupByOutputType[P]>
        }
      >
    >


  export type token_managementsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    origin?: boolean
    token?: boolean
    expiration?: boolean
    data?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | token_managements$usersArgs<ExtArgs>
  }, ExtArgs["result"]["token_managements"]>

  export type token_managementsSelectScalar = {
    id?: boolean
    id_user?: boolean
    origin?: boolean
    token?: boolean
    expiration?: boolean
    data?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type token_managementsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | token_managements$usersArgs<ExtArgs>
  }


  export type $token_managementsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "token_managements"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number | null
      origin: string
      token: string
      expiration: Date
      data: Prisma.JsonValue | null
      status: $Enums.Status
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["token_managements"]>
    composites: {}
  }


  type token_managementsGetPayload<S extends boolean | null | undefined | token_managementsDefaultArgs> = $Result.GetResult<Prisma.$token_managementsPayload, S>

  type token_managementsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<token_managementsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Token_managementsCountAggregateInputType | true
    }

  export interface token_managementsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['token_managements'], meta: { name: 'token_managements' } }
    /**
     * Find zero or one Token_managements that matches the filter.
     * @param {token_managementsFindUniqueArgs} args - Arguments to find a Token_managements
     * @example
     * // Get one Token_managements
     * const token_managements = await prisma.token_managements.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends token_managementsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, token_managementsFindUniqueArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Token_managements that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {token_managementsFindUniqueOrThrowArgs} args - Arguments to find a Token_managements
     * @example
     * // Get one Token_managements
     * const token_managements = await prisma.token_managements.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends token_managementsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, token_managementsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Token_managements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_managementsFindFirstArgs} args - Arguments to find a Token_managements
     * @example
     * // Get one Token_managements
     * const token_managements = await prisma.token_managements.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends token_managementsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, token_managementsFindFirstArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Token_managements that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_managementsFindFirstOrThrowArgs} args - Arguments to find a Token_managements
     * @example
     * // Get one Token_managements
     * const token_managements = await prisma.token_managements.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends token_managementsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, token_managementsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Token_managements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_managementsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Token_managements
     * const token_managements = await prisma.token_managements.findMany()
     * 
     * // Get first 10 Token_managements
     * const token_managements = await prisma.token_managements.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const token_managementsWithIdOnly = await prisma.token_managements.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends token_managementsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, token_managementsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Token_managements.
     * @param {token_managementsCreateArgs} args - Arguments to create a Token_managements.
     * @example
     * // Create one Token_managements
     * const Token_managements = await prisma.token_managements.create({
     *   data: {
     *     // ... data to create a Token_managements
     *   }
     * })
     * 
    **/
    create<T extends token_managementsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, token_managementsCreateArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Token_managements.
     *     @param {token_managementsCreateManyArgs} args - Arguments to create many Token_managements.
     *     @example
     *     // Create many Token_managements
     *     const token_managements = await prisma.token_managements.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends token_managementsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, token_managementsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Token_managements.
     * @param {token_managementsDeleteArgs} args - Arguments to delete one Token_managements.
     * @example
     * // Delete one Token_managements
     * const Token_managements = await prisma.token_managements.delete({
     *   where: {
     *     // ... filter to delete one Token_managements
     *   }
     * })
     * 
    **/
    delete<T extends token_managementsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, token_managementsDeleteArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Token_managements.
     * @param {token_managementsUpdateArgs} args - Arguments to update one Token_managements.
     * @example
     * // Update one Token_managements
     * const token_managements = await prisma.token_managements.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends token_managementsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, token_managementsUpdateArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Token_managements.
     * @param {token_managementsDeleteManyArgs} args - Arguments to filter Token_managements to delete.
     * @example
     * // Delete a few Token_managements
     * const { count } = await prisma.token_managements.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends token_managementsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, token_managementsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Token_managements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_managementsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Token_managements
     * const token_managements = await prisma.token_managements.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends token_managementsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, token_managementsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Token_managements.
     * @param {token_managementsUpsertArgs} args - Arguments to update or create a Token_managements.
     * @example
     * // Update or create a Token_managements
     * const token_managements = await prisma.token_managements.upsert({
     *   create: {
     *     // ... data to create a Token_managements
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Token_managements we want to update
     *   }
     * })
    **/
    upsert<T extends token_managementsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, token_managementsUpsertArgs<ExtArgs>>
    ): Prisma__token_managementsClient<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Token_managements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_managementsCountArgs} args - Arguments to filter Token_managements to count.
     * @example
     * // Count the number of Token_managements
     * const count = await prisma.token_managements.count({
     *   where: {
     *     // ... the filter for the Token_managements we want to count
     *   }
     * })
    **/
    count<T extends token_managementsCountArgs>(
      args?: Subset<T, token_managementsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Token_managementsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Token_managements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Token_managementsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Token_managementsAggregateArgs>(args: Subset<T, Token_managementsAggregateArgs>): Prisma.PrismaPromise<GetToken_managementsAggregateType<T>>

    /**
     * Group by Token_managements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {token_managementsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends token_managementsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: token_managementsGroupByArgs['orderBy'] }
        : { orderBy?: token_managementsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, token_managementsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetToken_managementsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the token_managements model
   */
  readonly fields: token_managementsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for token_managements.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__token_managementsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends token_managements$usersArgs<ExtArgs> = {}>(args?: Subset<T, token_managements$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the token_managements model
   */ 
  interface token_managementsFieldRefs {
    readonly id: FieldRef<"token_managements", 'Int'>
    readonly id_user: FieldRef<"token_managements", 'Int'>
    readonly origin: FieldRef<"token_managements", 'String'>
    readonly token: FieldRef<"token_managements", 'String'>
    readonly expiration: FieldRef<"token_managements", 'DateTime'>
    readonly data: FieldRef<"token_managements", 'Json'>
    readonly status: FieldRef<"token_managements", 'Status'>
    readonly created_at: FieldRef<"token_managements", 'DateTime'>
    readonly updated_at: FieldRef<"token_managements", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * token_managements findUnique
   */
  export type token_managementsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * Filter, which token_managements to fetch.
     */
    where: token_managementsWhereUniqueInput
  }


  /**
   * token_managements findUniqueOrThrow
   */
  export type token_managementsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * Filter, which token_managements to fetch.
     */
    where: token_managementsWhereUniqueInput
  }


  /**
   * token_managements findFirst
   */
  export type token_managementsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * Filter, which token_managements to fetch.
     */
    where?: token_managementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_managements to fetch.
     */
    orderBy?: token_managementsOrderByWithRelationInput | token_managementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for token_managements.
     */
    cursor?: token_managementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_managements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of token_managements.
     */
    distinct?: Token_managementsScalarFieldEnum | Token_managementsScalarFieldEnum[]
  }


  /**
   * token_managements findFirstOrThrow
   */
  export type token_managementsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * Filter, which token_managements to fetch.
     */
    where?: token_managementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_managements to fetch.
     */
    orderBy?: token_managementsOrderByWithRelationInput | token_managementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for token_managements.
     */
    cursor?: token_managementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_managements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of token_managements.
     */
    distinct?: Token_managementsScalarFieldEnum | Token_managementsScalarFieldEnum[]
  }


  /**
   * token_managements findMany
   */
  export type token_managementsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * Filter, which token_managements to fetch.
     */
    where?: token_managementsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of token_managements to fetch.
     */
    orderBy?: token_managementsOrderByWithRelationInput | token_managementsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing token_managements.
     */
    cursor?: token_managementsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` token_managements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` token_managements.
     */
    skip?: number
    distinct?: Token_managementsScalarFieldEnum | Token_managementsScalarFieldEnum[]
  }


  /**
   * token_managements create
   */
  export type token_managementsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * The data needed to create a token_managements.
     */
    data: XOR<token_managementsCreateInput, token_managementsUncheckedCreateInput>
  }


  /**
   * token_managements createMany
   */
  export type token_managementsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many token_managements.
     */
    data: token_managementsCreateManyInput | token_managementsCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * token_managements update
   */
  export type token_managementsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * The data needed to update a token_managements.
     */
    data: XOR<token_managementsUpdateInput, token_managementsUncheckedUpdateInput>
    /**
     * Choose, which token_managements to update.
     */
    where: token_managementsWhereUniqueInput
  }


  /**
   * token_managements updateMany
   */
  export type token_managementsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update token_managements.
     */
    data: XOR<token_managementsUpdateManyMutationInput, token_managementsUncheckedUpdateManyInput>
    /**
     * Filter which token_managements to update
     */
    where?: token_managementsWhereInput
  }


  /**
   * token_managements upsert
   */
  export type token_managementsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * The filter to search for the token_managements to update in case it exists.
     */
    where: token_managementsWhereUniqueInput
    /**
     * In case the token_managements found by the `where` argument doesn't exist, create a new token_managements with this data.
     */
    create: XOR<token_managementsCreateInput, token_managementsUncheckedCreateInput>
    /**
     * In case the token_managements was found with the provided `where` argument, update it with this data.
     */
    update: XOR<token_managementsUpdateInput, token_managementsUncheckedUpdateInput>
  }


  /**
   * token_managements delete
   */
  export type token_managementsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    /**
     * Filter which token_managements to delete.
     */
    where: token_managementsWhereUniqueInput
  }


  /**
   * token_managements deleteMany
   */
  export type token_managementsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which token_managements to delete
     */
    where?: token_managementsWhereInput
  }


  /**
   * token_managements.users
   */
  export type token_managements$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }


  /**
   * token_managements without action
   */
  export type token_managementsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
  }



  /**
   * Model user_configuration
   */

  export type AggregateUser_configuration = {
    _count: User_configurationCountAggregateOutputType | null
    _avg: User_configurationAvgAggregateOutputType | null
    _sum: User_configurationSumAggregateOutputType | null
    _min: User_configurationMinAggregateOutputType | null
    _max: User_configurationMaxAggregateOutputType | null
  }

  export type User_configurationAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
    fee_service_fixed: Decimal | null
    fee_service_percent: Decimal | null
    fee_pix: Decimal | null
  }

  export type User_configurationSumAggregateOutputType = {
    id: number | null
    id_user: number | null
    fee_service_fixed: Decimal | null
    fee_service_percent: Decimal | null
    fee_pix: Decimal | null
  }

  export type User_configurationMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    pix_encoded_pixcopypaste: string | null
    pix_qrcode: string | null
    pix_transaction_id: string | null
    pix_key: string | null
    pix_validation_code: string | null
    twofactor_code: string | null
    fee_service_fixed: Decimal | null
    fee_service_percent: Decimal | null
    fee_pix: Decimal | null
    baas_key: string | null
    baas_secret: string | null
    baas_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type User_configurationMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    pix_encoded_pixcopypaste: string | null
    pix_qrcode: string | null
    pix_transaction_id: string | null
    pix_key: string | null
    pix_validation_code: string | null
    twofactor_code: string | null
    fee_service_fixed: Decimal | null
    fee_service_percent: Decimal | null
    fee_pix: Decimal | null
    baas_key: string | null
    baas_secret: string | null
    baas_name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type User_configurationCountAggregateOutputType = {
    id: number
    id_user: number
    pix_encoded_pixcopypaste: number
    pix_qrcode: number
    pix_transaction_id: number
    pix_key: number
    pix_validation_code: number
    twofactor_code: number
    fee_service_fixed: number
    fee_service_percent: number
    fee_pix: number
    baas_key: number
    baas_secret: number
    baas_name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type User_configurationAvgAggregateInputType = {
    id?: true
    id_user?: true
    fee_service_fixed?: true
    fee_service_percent?: true
    fee_pix?: true
  }

  export type User_configurationSumAggregateInputType = {
    id?: true
    id_user?: true
    fee_service_fixed?: true
    fee_service_percent?: true
    fee_pix?: true
  }

  export type User_configurationMinAggregateInputType = {
    id?: true
    id_user?: true
    pix_encoded_pixcopypaste?: true
    pix_qrcode?: true
    pix_transaction_id?: true
    pix_key?: true
    pix_validation_code?: true
    twofactor_code?: true
    fee_service_fixed?: true
    fee_service_percent?: true
    fee_pix?: true
    baas_key?: true
    baas_secret?: true
    baas_name?: true
    created_at?: true
    updated_at?: true
  }

  export type User_configurationMaxAggregateInputType = {
    id?: true
    id_user?: true
    pix_encoded_pixcopypaste?: true
    pix_qrcode?: true
    pix_transaction_id?: true
    pix_key?: true
    pix_validation_code?: true
    twofactor_code?: true
    fee_service_fixed?: true
    fee_service_percent?: true
    fee_pix?: true
    baas_key?: true
    baas_secret?: true
    baas_name?: true
    created_at?: true
    updated_at?: true
  }

  export type User_configurationCountAggregateInputType = {
    id?: true
    id_user?: true
    pix_encoded_pixcopypaste?: true
    pix_qrcode?: true
    pix_transaction_id?: true
    pix_key?: true
    pix_validation_code?: true
    twofactor_code?: true
    fee_service_fixed?: true
    fee_service_percent?: true
    fee_pix?: true
    baas_key?: true
    baas_secret?: true
    baas_name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type User_configurationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_configuration to aggregate.
     */
    where?: user_configurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_configurations to fetch.
     */
    orderBy?: user_configurationOrderByWithRelationInput | user_configurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_configurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_configurations
    **/
    _count?: true | User_configurationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_configurationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_configurationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_configurationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_configurationMaxAggregateInputType
  }

  export type GetUser_configurationAggregateType<T extends User_configurationAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_configuration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_configuration[P]>
      : GetScalarType<T[P], AggregateUser_configuration[P]>
  }




  export type user_configurationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_configurationWhereInput
    orderBy?: user_configurationOrderByWithAggregationInput | user_configurationOrderByWithAggregationInput[]
    by: User_configurationScalarFieldEnum[] | User_configurationScalarFieldEnum
    having?: user_configurationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_configurationCountAggregateInputType | true
    _avg?: User_configurationAvgAggregateInputType
    _sum?: User_configurationSumAggregateInputType
    _min?: User_configurationMinAggregateInputType
    _max?: User_configurationMaxAggregateInputType
  }

  export type User_configurationGroupByOutputType = {
    id: number
    id_user: number
    pix_encoded_pixcopypaste: string | null
    pix_qrcode: string | null
    pix_transaction_id: string | null
    pix_key: string | null
    pix_validation_code: string | null
    twofactor_code: string | null
    fee_service_fixed: Decimal
    fee_service_percent: Decimal
    fee_pix: Decimal
    baas_key: string | null
    baas_secret: string | null
    baas_name: string | null
    created_at: Date
    updated_at: Date
    _count: User_configurationCountAggregateOutputType | null
    _avg: User_configurationAvgAggregateOutputType | null
    _sum: User_configurationSumAggregateOutputType | null
    _min: User_configurationMinAggregateOutputType | null
    _max: User_configurationMaxAggregateOutputType | null
  }

  type GetUser_configurationGroupByPayload<T extends user_configurationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_configurationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_configurationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_configurationGroupByOutputType[P]>
            : GetScalarType<T[P], User_configurationGroupByOutputType[P]>
        }
      >
    >


  export type user_configurationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    pix_encoded_pixcopypaste?: boolean
    pix_qrcode?: boolean
    pix_transaction_id?: boolean
    pix_key?: boolean
    pix_validation_code?: boolean
    twofactor_code?: boolean
    fee_service_fixed?: boolean
    fee_service_percent?: boolean
    fee_pix?: boolean
    baas_key?: boolean
    baas_secret?: boolean
    baas_name?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_configuration"]>

  export type user_configurationSelectScalar = {
    id?: boolean
    id_user?: boolean
    pix_encoded_pixcopypaste?: boolean
    pix_qrcode?: boolean
    pix_transaction_id?: boolean
    pix_key?: boolean
    pix_validation_code?: boolean
    twofactor_code?: boolean
    fee_service_fixed?: boolean
    fee_service_percent?: boolean
    fee_pix?: boolean
    baas_key?: boolean
    baas_secret?: boolean
    baas_name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type user_configurationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }


  export type $user_configurationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_configuration"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number
      pix_encoded_pixcopypaste: string | null
      pix_qrcode: string | null
      pix_transaction_id: string | null
      pix_key: string | null
      pix_validation_code: string | null
      twofactor_code: string | null
      fee_service_fixed: Prisma.Decimal
      fee_service_percent: Prisma.Decimal
      fee_pix: Prisma.Decimal
      baas_key: string | null
      baas_secret: string | null
      baas_name: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["user_configuration"]>
    composites: {}
  }


  type user_configurationGetPayload<S extends boolean | null | undefined | user_configurationDefaultArgs> = $Result.GetResult<Prisma.$user_configurationPayload, S>

  type user_configurationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<user_configurationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: User_configurationCountAggregateInputType | true
    }

  export interface user_configurationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_configuration'], meta: { name: 'user_configuration' } }
    /**
     * Find zero or one User_configuration that matches the filter.
     * @param {user_configurationFindUniqueArgs} args - Arguments to find a User_configuration
     * @example
     * // Get one User_configuration
     * const user_configuration = await prisma.user_configuration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends user_configurationFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, user_configurationFindUniqueArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User_configuration that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {user_configurationFindUniqueOrThrowArgs} args - Arguments to find a User_configuration
     * @example
     * // Get one User_configuration
     * const user_configuration = await prisma.user_configuration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends user_configurationFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, user_configurationFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User_configuration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_configurationFindFirstArgs} args - Arguments to find a User_configuration
     * @example
     * // Get one User_configuration
     * const user_configuration = await prisma.user_configuration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends user_configurationFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, user_configurationFindFirstArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User_configuration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_configurationFindFirstOrThrowArgs} args - Arguments to find a User_configuration
     * @example
     * // Get one User_configuration
     * const user_configuration = await prisma.user_configuration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends user_configurationFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, user_configurationFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more User_configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_configurationFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_configurations
     * const user_configurations = await prisma.user_configuration.findMany()
     * 
     * // Get first 10 User_configurations
     * const user_configurations = await prisma.user_configuration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_configurationWithIdOnly = await prisma.user_configuration.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends user_configurationFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_configurationFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User_configuration.
     * @param {user_configurationCreateArgs} args - Arguments to create a User_configuration.
     * @example
     * // Create one User_configuration
     * const User_configuration = await prisma.user_configuration.create({
     *   data: {
     *     // ... data to create a User_configuration
     *   }
     * })
     * 
    **/
    create<T extends user_configurationCreateArgs<ExtArgs>>(
      args: SelectSubset<T, user_configurationCreateArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many User_configurations.
     *     @param {user_configurationCreateManyArgs} args - Arguments to create many User_configurations.
     *     @example
     *     // Create many User_configurations
     *     const user_configuration = await prisma.user_configuration.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends user_configurationCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_configurationCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_configuration.
     * @param {user_configurationDeleteArgs} args - Arguments to delete one User_configuration.
     * @example
     * // Delete one User_configuration
     * const User_configuration = await prisma.user_configuration.delete({
     *   where: {
     *     // ... filter to delete one User_configuration
     *   }
     * })
     * 
    **/
    delete<T extends user_configurationDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, user_configurationDeleteArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User_configuration.
     * @param {user_configurationUpdateArgs} args - Arguments to update one User_configuration.
     * @example
     * // Update one User_configuration
     * const user_configuration = await prisma.user_configuration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends user_configurationUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, user_configurationUpdateArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more User_configurations.
     * @param {user_configurationDeleteManyArgs} args - Arguments to filter User_configurations to delete.
     * @example
     * // Delete a few User_configurations
     * const { count } = await prisma.user_configuration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends user_configurationDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, user_configurationDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_configurationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_configurations
     * const user_configuration = await prisma.user_configuration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends user_configurationUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, user_configurationUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_configuration.
     * @param {user_configurationUpsertArgs} args - Arguments to update or create a User_configuration.
     * @example
     * // Update or create a User_configuration
     * const user_configuration = await prisma.user_configuration.upsert({
     *   create: {
     *     // ... data to create a User_configuration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_configuration we want to update
     *   }
     * })
    **/
    upsert<T extends user_configurationUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, user_configurationUpsertArgs<ExtArgs>>
    ): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of User_configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_configurationCountArgs} args - Arguments to filter User_configurations to count.
     * @example
     * // Count the number of User_configurations
     * const count = await prisma.user_configuration.count({
     *   where: {
     *     // ... the filter for the User_configurations we want to count
     *   }
     * })
    **/
    count<T extends user_configurationCountArgs>(
      args?: Subset<T, user_configurationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_configurationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_configuration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_configurationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_configurationAggregateArgs>(args: Subset<T, User_configurationAggregateArgs>): Prisma.PrismaPromise<GetUser_configurationAggregateType<T>>

    /**
     * Group by User_configuration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_configurationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_configurationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_configurationGroupByArgs['orderBy'] }
        : { orderBy?: user_configurationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_configurationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_configurationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_configuration model
   */
  readonly fields: user_configurationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_configuration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_configurationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the user_configuration model
   */ 
  interface user_configurationFieldRefs {
    readonly id: FieldRef<"user_configuration", 'Int'>
    readonly id_user: FieldRef<"user_configuration", 'Int'>
    readonly pix_encoded_pixcopypaste: FieldRef<"user_configuration", 'String'>
    readonly pix_qrcode: FieldRef<"user_configuration", 'String'>
    readonly pix_transaction_id: FieldRef<"user_configuration", 'String'>
    readonly pix_key: FieldRef<"user_configuration", 'String'>
    readonly pix_validation_code: FieldRef<"user_configuration", 'String'>
    readonly twofactor_code: FieldRef<"user_configuration", 'String'>
    readonly fee_service_fixed: FieldRef<"user_configuration", 'Decimal'>
    readonly fee_service_percent: FieldRef<"user_configuration", 'Decimal'>
    readonly fee_pix: FieldRef<"user_configuration", 'Decimal'>
    readonly baas_key: FieldRef<"user_configuration", 'String'>
    readonly baas_secret: FieldRef<"user_configuration", 'String'>
    readonly baas_name: FieldRef<"user_configuration", 'String'>
    readonly created_at: FieldRef<"user_configuration", 'DateTime'>
    readonly updated_at: FieldRef<"user_configuration", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * user_configuration findUnique
   */
  export type user_configurationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * Filter, which user_configuration to fetch.
     */
    where: user_configurationWhereUniqueInput
  }


  /**
   * user_configuration findUniqueOrThrow
   */
  export type user_configurationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * Filter, which user_configuration to fetch.
     */
    where: user_configurationWhereUniqueInput
  }


  /**
   * user_configuration findFirst
   */
  export type user_configurationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * Filter, which user_configuration to fetch.
     */
    where?: user_configurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_configurations to fetch.
     */
    orderBy?: user_configurationOrderByWithRelationInput | user_configurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_configurations.
     */
    cursor?: user_configurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_configurations.
     */
    distinct?: User_configurationScalarFieldEnum | User_configurationScalarFieldEnum[]
  }


  /**
   * user_configuration findFirstOrThrow
   */
  export type user_configurationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * Filter, which user_configuration to fetch.
     */
    where?: user_configurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_configurations to fetch.
     */
    orderBy?: user_configurationOrderByWithRelationInput | user_configurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_configurations.
     */
    cursor?: user_configurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_configurations.
     */
    distinct?: User_configurationScalarFieldEnum | User_configurationScalarFieldEnum[]
  }


  /**
   * user_configuration findMany
   */
  export type user_configurationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * Filter, which user_configurations to fetch.
     */
    where?: user_configurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_configurations to fetch.
     */
    orderBy?: user_configurationOrderByWithRelationInput | user_configurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_configurations.
     */
    cursor?: user_configurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_configurations.
     */
    skip?: number
    distinct?: User_configurationScalarFieldEnum | User_configurationScalarFieldEnum[]
  }


  /**
   * user_configuration create
   */
  export type user_configurationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * The data needed to create a user_configuration.
     */
    data: XOR<user_configurationCreateInput, user_configurationUncheckedCreateInput>
  }


  /**
   * user_configuration createMany
   */
  export type user_configurationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_configurations.
     */
    data: user_configurationCreateManyInput | user_configurationCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * user_configuration update
   */
  export type user_configurationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * The data needed to update a user_configuration.
     */
    data: XOR<user_configurationUpdateInput, user_configurationUncheckedUpdateInput>
    /**
     * Choose, which user_configuration to update.
     */
    where: user_configurationWhereUniqueInput
  }


  /**
   * user_configuration updateMany
   */
  export type user_configurationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_configurations.
     */
    data: XOR<user_configurationUpdateManyMutationInput, user_configurationUncheckedUpdateManyInput>
    /**
     * Filter which user_configurations to update
     */
    where?: user_configurationWhereInput
  }


  /**
   * user_configuration upsert
   */
  export type user_configurationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * The filter to search for the user_configuration to update in case it exists.
     */
    where: user_configurationWhereUniqueInput
    /**
     * In case the user_configuration found by the `where` argument doesn't exist, create a new user_configuration with this data.
     */
    create: XOR<user_configurationCreateInput, user_configurationUncheckedCreateInput>
    /**
     * In case the user_configuration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_configurationUpdateInput, user_configurationUncheckedUpdateInput>
  }


  /**
   * user_configuration delete
   */
  export type user_configurationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    /**
     * Filter which user_configuration to delete.
     */
    where: user_configurationWhereUniqueInput
  }


  /**
   * user_configuration deleteMany
   */
  export type user_configurationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_configurations to delete
     */
    where?: user_configurationWhereInput
  }


  /**
   * user_configuration without action
   */
  export type user_configurationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
  }



  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    id_user: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    id_user: number | null
    status: $Enums.Status | null
    email: string | null
    password: string | null
    username: string | null
    role: $Enums.Role | null
    access_token: string | null
    seed: string | null
    integration_token: string | null
    onetime_token: string | null
    two_factor_active: boolean | null
    access_allowed: boolean | null
    created_at: Date | null
    updated_at: Date | null
    email_code: string | null
    email_status: $Enums.TypeEmailConfirm | null
    password_code: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    id_user: number | null
    status: $Enums.Status | null
    email: string | null
    password: string | null
    username: string | null
    role: $Enums.Role | null
    access_token: string | null
    seed: string | null
    integration_token: string | null
    onetime_token: string | null
    two_factor_active: boolean | null
    access_allowed: boolean | null
    created_at: Date | null
    updated_at: Date | null
    email_code: string | null
    email_status: $Enums.TypeEmailConfirm | null
    password_code: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    id_user: number
    status: number
    email: number
    password: number
    username: number
    role: number
    access_token: number
    seed: number
    integration_token: number
    onetime_token: number
    two_factor_active: number
    access_allowed: number
    created_at: number
    updated_at: number
    email_code: number
    email_status: number
    password_code: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    id_user?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    id_user?: true
    status?: true
    email?: true
    password?: true
    username?: true
    role?: true
    access_token?: true
    seed?: true
    integration_token?: true
    onetime_token?: true
    two_factor_active?: true
    access_allowed?: true
    created_at?: true
    updated_at?: true
    email_code?: true
    email_status?: true
    password_code?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    id_user?: true
    status?: true
    email?: true
    password?: true
    username?: true
    role?: true
    access_token?: true
    seed?: true
    integration_token?: true
    onetime_token?: true
    two_factor_active?: true
    access_allowed?: true
    created_at?: true
    updated_at?: true
    email_code?: true
    email_status?: true
    password_code?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    id_user?: true
    status?: true
    email?: true
    password?: true
    username?: true
    role?: true
    access_token?: true
    seed?: true
    integration_token?: true
    onetime_token?: true
    two_factor_active?: true
    access_allowed?: true
    created_at?: true
    updated_at?: true
    email_code?: true
    email_status?: true
    password_code?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    id_user: number | null
    status: $Enums.Status
    email: string
    password: string | null
    username: string | null
    role: $Enums.Role
    access_token: string | null
    seed: string | null
    integration_token: string | null
    onetime_token: string | null
    two_factor_active: boolean
    access_allowed: boolean
    created_at: Date
    updated_at: Date
    email_code: string | null
    email_status: $Enums.TypeEmailConfirm
    password_code: string | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_user?: boolean
    status?: boolean
    email?: boolean
    password?: boolean
    username?: boolean
    role?: boolean
    access_token?: boolean
    seed?: boolean
    integration_token?: boolean
    onetime_token?: boolean
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: boolean
    updated_at?: boolean
    email_code?: boolean
    email_status?: boolean
    password_code?: boolean
    Categories?: boolean | users$CategoriesArgs<ExtArgs>
    UsersOnCategories?: boolean | users$UsersOnCategoriesArgs<ExtArgs>
    security_code?: boolean | users$security_codeArgs<ExtArgs>
    token_managements?: boolean | users$token_managementsArgs<ExtArgs>
    user_configuration?: boolean | users$user_configurationArgs<ExtArgs>
    users?: boolean | users$usersArgs<ExtArgs>
    other_users?: boolean | users$other_usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    id_user?: boolean
    status?: boolean
    email?: boolean
    password?: boolean
    username?: boolean
    role?: boolean
    access_token?: boolean
    seed?: boolean
    integration_token?: boolean
    onetime_token?: boolean
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: boolean
    updated_at?: boolean
    email_code?: boolean
    email_status?: boolean
    password_code?: boolean
  }

  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Categories?: boolean | users$CategoriesArgs<ExtArgs>
    UsersOnCategories?: boolean | users$UsersOnCategoriesArgs<ExtArgs>
    security_code?: boolean | users$security_codeArgs<ExtArgs>
    token_managements?: boolean | users$token_managementsArgs<ExtArgs>
    user_configuration?: boolean | users$user_configurationArgs<ExtArgs>
    users?: boolean | users$usersArgs<ExtArgs>
    other_users?: boolean | users$other_usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      Categories: Prisma.$CategoriesPayload<ExtArgs>[]
      UsersOnCategories: Prisma.$UsersOnCategoriesPayload<ExtArgs>[]
      security_code: Prisma.$security_codePayload<ExtArgs>[]
      token_managements: Prisma.$token_managementsPayload<ExtArgs>[]
      user_configuration: Prisma.$user_configurationPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
      other_users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_user: number | null
      status: $Enums.Status
      email: string
      password: string | null
      username: string | null
      role: $Enums.Role
      access_token: string | null
      seed: string | null
      integration_token: string | null
      onetime_token: string | null
      two_factor_active: boolean
      access_allowed: boolean
      created_at: Date
      updated_at: Date
      email_code: string | null
      email_status: $Enums.TypeEmailConfirm
      password_code: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Categories<T extends users$CategoriesArgs<ExtArgs> = {}>(args?: Subset<T, users$CategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoriesPayload<ExtArgs>, T, 'findMany'> | Null>;

    UsersOnCategories<T extends users$UsersOnCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, users$UsersOnCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersOnCategoriesPayload<ExtArgs>, T, 'findMany'> | Null>;

    security_code<T extends users$security_codeArgs<ExtArgs> = {}>(args?: Subset<T, users$security_codeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$security_codePayload<ExtArgs>, T, 'findMany'> | Null>;

    token_managements<T extends users$token_managementsArgs<ExtArgs> = {}>(args?: Subset<T, users$token_managementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$token_managementsPayload<ExtArgs>, T, 'findMany'> | Null>;

    user_configuration<T extends users$user_configurationArgs<ExtArgs> = {}>(args?: Subset<T, users$user_configurationArgs<ExtArgs>>): Prisma__user_configurationClient<$Result.GetResult<Prisma.$user_configurationPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    users<T extends users$usersArgs<ExtArgs> = {}>(args?: Subset<T, users$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    other_users<T extends users$other_usersArgs<ExtArgs> = {}>(args?: Subset<T, users$other_usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly id_user: FieldRef<"users", 'Int'>
    readonly status: FieldRef<"users", 'Status'>
    readonly email: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'Role'>
    readonly access_token: FieldRef<"users", 'String'>
    readonly seed: FieldRef<"users", 'String'>
    readonly integration_token: FieldRef<"users", 'String'>
    readonly onetime_token: FieldRef<"users", 'String'>
    readonly two_factor_active: FieldRef<"users", 'Boolean'>
    readonly access_allowed: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly email_code: FieldRef<"users", 'String'>
    readonly email_status: FieldRef<"users", 'TypeEmailConfirm'>
    readonly password_code: FieldRef<"users", 'String'>
  }
    

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users.Categories
   */
  export type users$CategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Categories
     */
    select?: CategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: CategoriesInclude<ExtArgs> | null
    where?: CategoriesWhereInput
    orderBy?: CategoriesOrderByWithRelationInput | CategoriesOrderByWithRelationInput[]
    cursor?: CategoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }


  /**
   * users.UsersOnCategories
   */
  export type users$UsersOnCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersOnCategories
     */
    select?: UsersOnCategoriesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: UsersOnCategoriesInclude<ExtArgs> | null
    where?: UsersOnCategoriesWhereInput
    orderBy?: UsersOnCategoriesOrderByWithRelationInput | UsersOnCategoriesOrderByWithRelationInput[]
    cursor?: UsersOnCategoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersOnCategoriesScalarFieldEnum | UsersOnCategoriesScalarFieldEnum[]
  }


  /**
   * users.security_code
   */
  export type users$security_codeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the security_code
     */
    select?: security_codeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: security_codeInclude<ExtArgs> | null
    where?: security_codeWhereInput
    orderBy?: security_codeOrderByWithRelationInput | security_codeOrderByWithRelationInput[]
    cursor?: security_codeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Security_codeScalarFieldEnum | Security_codeScalarFieldEnum[]
  }


  /**
   * users.token_managements
   */
  export type users$token_managementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the token_managements
     */
    select?: token_managementsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: token_managementsInclude<ExtArgs> | null
    where?: token_managementsWhereInput
    orderBy?: token_managementsOrderByWithRelationInput | token_managementsOrderByWithRelationInput[]
    cursor?: token_managementsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Token_managementsScalarFieldEnum | Token_managementsScalarFieldEnum[]
  }


  /**
   * users.user_configuration
   */
  export type users$user_configurationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_configuration
     */
    select?: user_configurationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: user_configurationInclude<ExtArgs> | null
    where?: user_configurationWhereInput
  }


  /**
   * users.users
   */
  export type users$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }


  /**
   * users.other_users
   */
  export type users$other_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well.
     */
    include?: usersInclude<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CategoriesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_id: 'created_id',
    custom_value: 'custom_value',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CategoriesScalarFieldEnum = (typeof CategoriesScalarFieldEnum)[keyof typeof CategoriesScalarFieldEnum]


  export const CategoriesOnModulesScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    moduleId: 'moduleId'
  };

  export type CategoriesOnModulesScalarFieldEnum = (typeof CategoriesOnModulesScalarFieldEnum)[keyof typeof CategoriesOnModulesScalarFieldEnum]


  export const ModulesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    value: 'value',
    created_at: 'created_at',
    updated_at: 'updated_at',
    path_make_function: 'path_make_function'
  };

  export type ModulesScalarFieldEnum = (typeof ModulesScalarFieldEnum)[keyof typeof ModulesScalarFieldEnum]


  export const ResourcesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    path: 'path',
    description: 'description',
    value: 'value',
    library: 'library',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ResourcesScalarFieldEnum = (typeof ResourcesScalarFieldEnum)[keyof typeof ResourcesScalarFieldEnum]


  export const ResourcesOnModulesScalarFieldEnum: {
    id: 'id',
    moduleId: 'moduleId',
    resourceId: 'resourceId'
  };

  export type ResourcesOnModulesScalarFieldEnum = (typeof ResourcesOnModulesScalarFieldEnum)[keyof typeof ResourcesOnModulesScalarFieldEnum]


  export const UsersOnCategoriesScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    categoryId: 'categoryId',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsersOnCategoriesScalarFieldEnum = (typeof UsersOnCategoriesScalarFieldEnum)[keyof typeof UsersOnCategoriesScalarFieldEnum]


  export const Security_codeScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    code: 'code',
    date_expiration: 'date_expiration',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Security_codeScalarFieldEnum = (typeof Security_codeScalarFieldEnum)[keyof typeof Security_codeScalarFieldEnum]


  export const Token_managementsScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    origin: 'origin',
    token: 'token',
    expiration: 'expiration',
    data: 'data',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Token_managementsScalarFieldEnum = (typeof Token_managementsScalarFieldEnum)[keyof typeof Token_managementsScalarFieldEnum]


  export const User_configurationScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    pix_encoded_pixcopypaste: 'pix_encoded_pixcopypaste',
    pix_qrcode: 'pix_qrcode',
    pix_transaction_id: 'pix_transaction_id',
    pix_key: 'pix_key',
    pix_validation_code: 'pix_validation_code',
    twofactor_code: 'twofactor_code',
    fee_service_fixed: 'fee_service_fixed',
    fee_service_percent: 'fee_service_percent',
    fee_pix: 'fee_pix',
    baas_key: 'baas_key',
    baas_secret: 'baas_secret',
    baas_name: 'baas_name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type User_configurationScalarFieldEnum = (typeof User_configurationScalarFieldEnum)[keyof typeof User_configurationScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    id_user: 'id_user',
    status: 'status',
    email: 'email',
    password: 'password',
    username: 'username',
    role: 'role',
    access_token: 'access_token',
    seed: 'seed',
    integration_token: 'integration_token',
    onetime_token: 'onetime_token',
    two_factor_active: 'two_factor_active',
    access_allowed: 'access_allowed',
    created_at: 'created_at',
    updated_at: 'updated_at',
    email_code: 'email_code',
    email_status: 'email_status',
    password_code: 'password_code'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Libraries'
   */
  export type EnumLibrariesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Libraries'>
    


  /**
   * Reference to a field of type 'Libraries[]'
   */
  export type ListEnumLibrariesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Libraries[]'>
    


  /**
   * Reference to a field of type 'StatusSecurityCode'
   */
  export type EnumStatusSecurityCodeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusSecurityCode'>
    


  /**
   * Reference to a field of type 'StatusSecurityCode[]'
   */
  export type ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusSecurityCode[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Status'
   */
  export type EnumStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status'>
    


  /**
   * Reference to a field of type 'Status[]'
   */
  export type ListEnumStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Status[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'TypeEmailConfirm'
   */
  export type EnumTypeEmailConfirmFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeEmailConfirm'>
    


  /**
   * Reference to a field of type 'TypeEmailConfirm[]'
   */
  export type ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TypeEmailConfirm[]'>
    
  /**
   * Deep Input Types
   */


  export type CategoriesWhereInput = {
    AND?: CategoriesWhereInput | CategoriesWhereInput[]
    OR?: CategoriesWhereInput[]
    NOT?: CategoriesWhereInput | CategoriesWhereInput[]
    id?: IntFilter<"Categories"> | number
    name?: StringFilter<"Categories"> | string
    description?: StringNullableFilter<"Categories"> | string | null
    created_id?: IntNullableFilter<"Categories"> | number | null
    custom_value?: FloatNullableFilter<"Categories"> | number | null
    created_at?: DateTimeFilter<"Categories"> | Date | string
    updated_at?: DateTimeFilter<"Categories"> | Date | string
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    CategoriesOnModules?: CategoriesOnModulesListRelationFilter
    UsersOnCategories?: UsersOnCategoriesListRelationFilter
  }

  export type CategoriesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_id?: SortOrderInput | SortOrder
    custom_value?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
    CategoriesOnModules?: CategoriesOnModulesOrderByRelationAggregateInput
    UsersOnCategories?: UsersOnCategoriesOrderByRelationAggregateInput
  }

  export type CategoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoriesWhereInput | CategoriesWhereInput[]
    OR?: CategoriesWhereInput[]
    NOT?: CategoriesWhereInput | CategoriesWhereInput[]
    name?: StringFilter<"Categories"> | string
    description?: StringNullableFilter<"Categories"> | string | null
    created_id?: IntNullableFilter<"Categories"> | number | null
    custom_value?: FloatNullableFilter<"Categories"> | number | null
    created_at?: DateTimeFilter<"Categories"> | Date | string
    updated_at?: DateTimeFilter<"Categories"> | Date | string
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    CategoriesOnModules?: CategoriesOnModulesListRelationFilter
    UsersOnCategories?: UsersOnCategoriesListRelationFilter
  }, "id">

  export type CategoriesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_id?: SortOrderInput | SortOrder
    custom_value?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: CategoriesCountOrderByAggregateInput
    _avg?: CategoriesAvgOrderByAggregateInput
    _max?: CategoriesMaxOrderByAggregateInput
    _min?: CategoriesMinOrderByAggregateInput
    _sum?: CategoriesSumOrderByAggregateInput
  }

  export type CategoriesScalarWhereWithAggregatesInput = {
    AND?: CategoriesScalarWhereWithAggregatesInput | CategoriesScalarWhereWithAggregatesInput[]
    OR?: CategoriesScalarWhereWithAggregatesInput[]
    NOT?: CategoriesScalarWhereWithAggregatesInput | CategoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Categories"> | number
    name?: StringWithAggregatesFilter<"Categories"> | string
    description?: StringNullableWithAggregatesFilter<"Categories"> | string | null
    created_id?: IntNullableWithAggregatesFilter<"Categories"> | number | null
    custom_value?: FloatNullableWithAggregatesFilter<"Categories"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Categories"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Categories"> | Date | string
  }

  export type CategoriesOnModulesWhereInput = {
    AND?: CategoriesOnModulesWhereInput | CategoriesOnModulesWhereInput[]
    OR?: CategoriesOnModulesWhereInput[]
    NOT?: CategoriesOnModulesWhereInput | CategoriesOnModulesWhereInput[]
    id?: IntFilter<"CategoriesOnModules"> | number
    categoryId?: IntFilter<"CategoriesOnModules"> | number
    moduleId?: IntFilter<"CategoriesOnModules"> | number
    Categories?: XOR<CategoriesRelationFilter, CategoriesWhereInput>
    Modules?: XOR<ModulesRelationFilter, ModulesWhereInput>
  }

  export type CategoriesOnModulesOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
    Categories?: CategoriesOrderByWithRelationInput
    Modules?: ModulesOrderByWithRelationInput
  }

  export type CategoriesOnModulesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoriesOnModulesWhereInput | CategoriesOnModulesWhereInput[]
    OR?: CategoriesOnModulesWhereInput[]
    NOT?: CategoriesOnModulesWhereInput | CategoriesOnModulesWhereInput[]
    categoryId?: IntFilter<"CategoriesOnModules"> | number
    moduleId?: IntFilter<"CategoriesOnModules"> | number
    Categories?: XOR<CategoriesRelationFilter, CategoriesWhereInput>
    Modules?: XOR<ModulesRelationFilter, ModulesWhereInput>
  }, "id">

  export type CategoriesOnModulesOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
    _count?: CategoriesOnModulesCountOrderByAggregateInput
    _avg?: CategoriesOnModulesAvgOrderByAggregateInput
    _max?: CategoriesOnModulesMaxOrderByAggregateInput
    _min?: CategoriesOnModulesMinOrderByAggregateInput
    _sum?: CategoriesOnModulesSumOrderByAggregateInput
  }

  export type CategoriesOnModulesScalarWhereWithAggregatesInput = {
    AND?: CategoriesOnModulesScalarWhereWithAggregatesInput | CategoriesOnModulesScalarWhereWithAggregatesInput[]
    OR?: CategoriesOnModulesScalarWhereWithAggregatesInput[]
    NOT?: CategoriesOnModulesScalarWhereWithAggregatesInput | CategoriesOnModulesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CategoriesOnModules"> | number
    categoryId?: IntWithAggregatesFilter<"CategoriesOnModules"> | number
    moduleId?: IntWithAggregatesFilter<"CategoriesOnModules"> | number
  }

  export type ModulesWhereInput = {
    AND?: ModulesWhereInput | ModulesWhereInput[]
    OR?: ModulesWhereInput[]
    NOT?: ModulesWhereInput | ModulesWhereInput[]
    id?: IntFilter<"Modules"> | number
    name?: StringFilter<"Modules"> | string
    description?: StringFilter<"Modules"> | string
    value?: FloatFilter<"Modules"> | number
    created_at?: DateTimeFilter<"Modules"> | Date | string
    updated_at?: DateTimeFilter<"Modules"> | Date | string
    path_make_function?: StringFilter<"Modules"> | string
    CategoriesOnModules?: CategoriesOnModulesListRelationFilter
    ResourcesOnModules?: ResourcesOnModulesListRelationFilter
  }

  export type ModulesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    path_make_function?: SortOrder
    CategoriesOnModules?: CategoriesOnModulesOrderByRelationAggregateInput
    ResourcesOnModules?: ResourcesOnModulesOrderByRelationAggregateInput
  }

  export type ModulesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ModulesWhereInput | ModulesWhereInput[]
    OR?: ModulesWhereInput[]
    NOT?: ModulesWhereInput | ModulesWhereInput[]
    name?: StringFilter<"Modules"> | string
    description?: StringFilter<"Modules"> | string
    value?: FloatFilter<"Modules"> | number
    created_at?: DateTimeFilter<"Modules"> | Date | string
    updated_at?: DateTimeFilter<"Modules"> | Date | string
    path_make_function?: StringFilter<"Modules"> | string
    CategoriesOnModules?: CategoriesOnModulesListRelationFilter
    ResourcesOnModules?: ResourcesOnModulesListRelationFilter
  }, "id">

  export type ModulesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    path_make_function?: SortOrder
    _count?: ModulesCountOrderByAggregateInput
    _avg?: ModulesAvgOrderByAggregateInput
    _max?: ModulesMaxOrderByAggregateInput
    _min?: ModulesMinOrderByAggregateInput
    _sum?: ModulesSumOrderByAggregateInput
  }

  export type ModulesScalarWhereWithAggregatesInput = {
    AND?: ModulesScalarWhereWithAggregatesInput | ModulesScalarWhereWithAggregatesInput[]
    OR?: ModulesScalarWhereWithAggregatesInput[]
    NOT?: ModulesScalarWhereWithAggregatesInput | ModulesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Modules"> | number
    name?: StringWithAggregatesFilter<"Modules"> | string
    description?: StringWithAggregatesFilter<"Modules"> | string
    value?: FloatWithAggregatesFilter<"Modules"> | number
    created_at?: DateTimeWithAggregatesFilter<"Modules"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Modules"> | Date | string
    path_make_function?: StringWithAggregatesFilter<"Modules"> | string
  }

  export type ResourcesWhereInput = {
    AND?: ResourcesWhereInput | ResourcesWhereInput[]
    OR?: ResourcesWhereInput[]
    NOT?: ResourcesWhereInput | ResourcesWhereInput[]
    id?: IntFilter<"Resources"> | number
    name?: StringFilter<"Resources"> | string
    path?: StringFilter<"Resources"> | string
    description?: StringFilter<"Resources"> | string
    value?: FloatFilter<"Resources"> | number
    library?: EnumLibrariesFilter<"Resources"> | $Enums.Libraries
    created_at?: DateTimeFilter<"Resources"> | Date | string
    updated_at?: DateTimeFilter<"Resources"> | Date | string
    ResourcesOnModules?: ResourcesOnModulesListRelationFilter
  }

  export type ResourcesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    description?: SortOrder
    value?: SortOrder
    library?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    ResourcesOnModules?: ResourcesOnModulesOrderByRelationAggregateInput
  }

  export type ResourcesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ResourcesWhereInput | ResourcesWhereInput[]
    OR?: ResourcesWhereInput[]
    NOT?: ResourcesWhereInput | ResourcesWhereInput[]
    name?: StringFilter<"Resources"> | string
    path?: StringFilter<"Resources"> | string
    description?: StringFilter<"Resources"> | string
    value?: FloatFilter<"Resources"> | number
    library?: EnumLibrariesFilter<"Resources"> | $Enums.Libraries
    created_at?: DateTimeFilter<"Resources"> | Date | string
    updated_at?: DateTimeFilter<"Resources"> | Date | string
    ResourcesOnModules?: ResourcesOnModulesListRelationFilter
  }, "id">

  export type ResourcesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    description?: SortOrder
    value?: SortOrder
    library?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: ResourcesCountOrderByAggregateInput
    _avg?: ResourcesAvgOrderByAggregateInput
    _max?: ResourcesMaxOrderByAggregateInput
    _min?: ResourcesMinOrderByAggregateInput
    _sum?: ResourcesSumOrderByAggregateInput
  }

  export type ResourcesScalarWhereWithAggregatesInput = {
    AND?: ResourcesScalarWhereWithAggregatesInput | ResourcesScalarWhereWithAggregatesInput[]
    OR?: ResourcesScalarWhereWithAggregatesInput[]
    NOT?: ResourcesScalarWhereWithAggregatesInput | ResourcesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Resources"> | number
    name?: StringWithAggregatesFilter<"Resources"> | string
    path?: StringWithAggregatesFilter<"Resources"> | string
    description?: StringWithAggregatesFilter<"Resources"> | string
    value?: FloatWithAggregatesFilter<"Resources"> | number
    library?: EnumLibrariesWithAggregatesFilter<"Resources"> | $Enums.Libraries
    created_at?: DateTimeWithAggregatesFilter<"Resources"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Resources"> | Date | string
  }

  export type ResourcesOnModulesWhereInput = {
    AND?: ResourcesOnModulesWhereInput | ResourcesOnModulesWhereInput[]
    OR?: ResourcesOnModulesWhereInput[]
    NOT?: ResourcesOnModulesWhereInput | ResourcesOnModulesWhereInput[]
    id?: IntFilter<"ResourcesOnModules"> | number
    moduleId?: IntFilter<"ResourcesOnModules"> | number
    resourceId?: IntFilter<"ResourcesOnModules"> | number
    Modules?: XOR<ModulesRelationFilter, ModulesWhereInput>
    Resources?: XOR<ResourcesRelationFilter, ResourcesWhereInput>
  }

  export type ResourcesOnModulesOrderByWithRelationInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
    Modules?: ModulesOrderByWithRelationInput
    Resources?: ResourcesOrderByWithRelationInput
  }

  export type ResourcesOnModulesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ResourcesOnModulesWhereInput | ResourcesOnModulesWhereInput[]
    OR?: ResourcesOnModulesWhereInput[]
    NOT?: ResourcesOnModulesWhereInput | ResourcesOnModulesWhereInput[]
    moduleId?: IntFilter<"ResourcesOnModules"> | number
    resourceId?: IntFilter<"ResourcesOnModules"> | number
    Modules?: XOR<ModulesRelationFilter, ModulesWhereInput>
    Resources?: XOR<ResourcesRelationFilter, ResourcesWhereInput>
  }, "id">

  export type ResourcesOnModulesOrderByWithAggregationInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
    _count?: ResourcesOnModulesCountOrderByAggregateInput
    _avg?: ResourcesOnModulesAvgOrderByAggregateInput
    _max?: ResourcesOnModulesMaxOrderByAggregateInput
    _min?: ResourcesOnModulesMinOrderByAggregateInput
    _sum?: ResourcesOnModulesSumOrderByAggregateInput
  }

  export type ResourcesOnModulesScalarWhereWithAggregatesInput = {
    AND?: ResourcesOnModulesScalarWhereWithAggregatesInput | ResourcesOnModulesScalarWhereWithAggregatesInput[]
    OR?: ResourcesOnModulesScalarWhereWithAggregatesInput[]
    NOT?: ResourcesOnModulesScalarWhereWithAggregatesInput | ResourcesOnModulesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ResourcesOnModules"> | number
    moduleId?: IntWithAggregatesFilter<"ResourcesOnModules"> | number
    resourceId?: IntWithAggregatesFilter<"ResourcesOnModules"> | number
  }

  export type UsersOnCategoriesWhereInput = {
    AND?: UsersOnCategoriesWhereInput | UsersOnCategoriesWhereInput[]
    OR?: UsersOnCategoriesWhereInput[]
    NOT?: UsersOnCategoriesWhereInput | UsersOnCategoriesWhereInput[]
    id?: IntFilter<"UsersOnCategories"> | number
    userId?: IntFilter<"UsersOnCategories"> | number
    categoryId?: IntFilter<"UsersOnCategories"> | number
    created_at?: DateTimeFilter<"UsersOnCategories"> | Date | string
    updated_at?: DateTimeFilter<"UsersOnCategories"> | Date | string
    Categories?: XOR<CategoriesRelationFilter, CategoriesWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type UsersOnCategoriesOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    Categories?: CategoriesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type UsersOnCategoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UsersOnCategoriesWhereInput | UsersOnCategoriesWhereInput[]
    OR?: UsersOnCategoriesWhereInput[]
    NOT?: UsersOnCategoriesWhereInput | UsersOnCategoriesWhereInput[]
    userId?: IntFilter<"UsersOnCategories"> | number
    categoryId?: IntFilter<"UsersOnCategories"> | number
    created_at?: DateTimeFilter<"UsersOnCategories"> | Date | string
    updated_at?: DateTimeFilter<"UsersOnCategories"> | Date | string
    Categories?: XOR<CategoriesRelationFilter, CategoriesWhereInput>
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type UsersOnCategoriesOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: UsersOnCategoriesCountOrderByAggregateInput
    _avg?: UsersOnCategoriesAvgOrderByAggregateInput
    _max?: UsersOnCategoriesMaxOrderByAggregateInput
    _min?: UsersOnCategoriesMinOrderByAggregateInput
    _sum?: UsersOnCategoriesSumOrderByAggregateInput
  }

  export type UsersOnCategoriesScalarWhereWithAggregatesInput = {
    AND?: UsersOnCategoriesScalarWhereWithAggregatesInput | UsersOnCategoriesScalarWhereWithAggregatesInput[]
    OR?: UsersOnCategoriesScalarWhereWithAggregatesInput[]
    NOT?: UsersOnCategoriesScalarWhereWithAggregatesInput | UsersOnCategoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UsersOnCategories"> | number
    userId?: IntWithAggregatesFilter<"UsersOnCategories"> | number
    categoryId?: IntWithAggregatesFilter<"UsersOnCategories"> | number
    created_at?: DateTimeWithAggregatesFilter<"UsersOnCategories"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"UsersOnCategories"> | Date | string
  }

  export type security_codeWhereInput = {
    AND?: security_codeWhereInput | security_codeWhereInput[]
    OR?: security_codeWhereInput[]
    NOT?: security_codeWhereInput | security_codeWhereInput[]
    id?: IntFilter<"security_code"> | number
    id_user?: IntFilter<"security_code"> | number
    code?: StringFilter<"security_code"> | string
    date_expiration?: DateTimeFilter<"security_code"> | Date | string
    status?: EnumStatusSecurityCodeFilter<"security_code"> | $Enums.StatusSecurityCode
    created_at?: DateTimeFilter<"security_code"> | Date | string
    updated_at?: DateTimeFilter<"security_code"> | Date | string
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type security_codeOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrder
    code?: SortOrder
    date_expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type security_codeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: security_codeWhereInput | security_codeWhereInput[]
    OR?: security_codeWhereInput[]
    NOT?: security_codeWhereInput | security_codeWhereInput[]
    id_user?: IntFilter<"security_code"> | number
    code?: StringFilter<"security_code"> | string
    date_expiration?: DateTimeFilter<"security_code"> | Date | string
    status?: EnumStatusSecurityCodeFilter<"security_code"> | $Enums.StatusSecurityCode
    created_at?: DateTimeFilter<"security_code"> | Date | string
    updated_at?: DateTimeFilter<"security_code"> | Date | string
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id">

  export type security_codeOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrder
    code?: SortOrder
    date_expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: security_codeCountOrderByAggregateInput
    _avg?: security_codeAvgOrderByAggregateInput
    _max?: security_codeMaxOrderByAggregateInput
    _min?: security_codeMinOrderByAggregateInput
    _sum?: security_codeSumOrderByAggregateInput
  }

  export type security_codeScalarWhereWithAggregatesInput = {
    AND?: security_codeScalarWhereWithAggregatesInput | security_codeScalarWhereWithAggregatesInput[]
    OR?: security_codeScalarWhereWithAggregatesInput[]
    NOT?: security_codeScalarWhereWithAggregatesInput | security_codeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"security_code"> | number
    id_user?: IntWithAggregatesFilter<"security_code"> | number
    code?: StringWithAggregatesFilter<"security_code"> | string
    date_expiration?: DateTimeWithAggregatesFilter<"security_code"> | Date | string
    status?: EnumStatusSecurityCodeWithAggregatesFilter<"security_code"> | $Enums.StatusSecurityCode
    created_at?: DateTimeWithAggregatesFilter<"security_code"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"security_code"> | Date | string
  }

  export type token_managementsWhereInput = {
    AND?: token_managementsWhereInput | token_managementsWhereInput[]
    OR?: token_managementsWhereInput[]
    NOT?: token_managementsWhereInput | token_managementsWhereInput[]
    id?: IntFilter<"token_managements"> | number
    id_user?: IntNullableFilter<"token_managements"> | number | null
    origin?: StringFilter<"token_managements"> | string
    token?: StringFilter<"token_managements"> | string
    expiration?: DateTimeFilter<"token_managements"> | Date | string
    data?: JsonNullableFilter<"token_managements">
    status?: EnumStatusFilter<"token_managements"> | $Enums.Status
    created_at?: DateTimeFilter<"token_managements"> | Date | string
    updated_at?: DateTimeFilter<"token_managements"> | Date | string
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
  }

  export type token_managementsOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrderInput | SortOrder
    origin?: SortOrder
    token?: SortOrder
    expiration?: SortOrder
    data?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type token_managementsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: token_managementsWhereInput | token_managementsWhereInput[]
    OR?: token_managementsWhereInput[]
    NOT?: token_managementsWhereInput | token_managementsWhereInput[]
    id_user?: IntNullableFilter<"token_managements"> | number | null
    origin?: StringFilter<"token_managements"> | string
    token?: StringFilter<"token_managements"> | string
    expiration?: DateTimeFilter<"token_managements"> | Date | string
    data?: JsonNullableFilter<"token_managements">
    status?: EnumStatusFilter<"token_managements"> | $Enums.Status
    created_at?: DateTimeFilter<"token_managements"> | Date | string
    updated_at?: DateTimeFilter<"token_managements"> | Date | string
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
  }, "id">

  export type token_managementsOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrderInput | SortOrder
    origin?: SortOrder
    token?: SortOrder
    expiration?: SortOrder
    data?: SortOrderInput | SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: token_managementsCountOrderByAggregateInput
    _avg?: token_managementsAvgOrderByAggregateInput
    _max?: token_managementsMaxOrderByAggregateInput
    _min?: token_managementsMinOrderByAggregateInput
    _sum?: token_managementsSumOrderByAggregateInput
  }

  export type token_managementsScalarWhereWithAggregatesInput = {
    AND?: token_managementsScalarWhereWithAggregatesInput | token_managementsScalarWhereWithAggregatesInput[]
    OR?: token_managementsScalarWhereWithAggregatesInput[]
    NOT?: token_managementsScalarWhereWithAggregatesInput | token_managementsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"token_managements"> | number
    id_user?: IntNullableWithAggregatesFilter<"token_managements"> | number | null
    origin?: StringWithAggregatesFilter<"token_managements"> | string
    token?: StringWithAggregatesFilter<"token_managements"> | string
    expiration?: DateTimeWithAggregatesFilter<"token_managements"> | Date | string
    data?: JsonNullableWithAggregatesFilter<"token_managements">
    status?: EnumStatusWithAggregatesFilter<"token_managements"> | $Enums.Status
    created_at?: DateTimeWithAggregatesFilter<"token_managements"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"token_managements"> | Date | string
  }

  export type user_configurationWhereInput = {
    AND?: user_configurationWhereInput | user_configurationWhereInput[]
    OR?: user_configurationWhereInput[]
    NOT?: user_configurationWhereInput | user_configurationWhereInput[]
    id?: IntFilter<"user_configuration"> | number
    id_user?: IntFilter<"user_configuration"> | number
    pix_encoded_pixcopypaste?: StringNullableFilter<"user_configuration"> | string | null
    pix_qrcode?: StringNullableFilter<"user_configuration"> | string | null
    pix_transaction_id?: StringNullableFilter<"user_configuration"> | string | null
    pix_key?: StringNullableFilter<"user_configuration"> | string | null
    pix_validation_code?: StringNullableFilter<"user_configuration"> | string | null
    twofactor_code?: StringNullableFilter<"user_configuration"> | string | null
    fee_service_fixed?: DecimalFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    baas_key?: StringNullableFilter<"user_configuration"> | string | null
    baas_secret?: StringNullableFilter<"user_configuration"> | string | null
    baas_name?: StringNullableFilter<"user_configuration"> | string | null
    created_at?: DateTimeFilter<"user_configuration"> | Date | string
    updated_at?: DateTimeFilter<"user_configuration"> | Date | string
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }

  export type user_configurationOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrder
    pix_encoded_pixcopypaste?: SortOrderInput | SortOrder
    pix_qrcode?: SortOrderInput | SortOrder
    pix_transaction_id?: SortOrderInput | SortOrder
    pix_key?: SortOrderInput | SortOrder
    pix_validation_code?: SortOrderInput | SortOrder
    twofactor_code?: SortOrderInput | SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
    baas_key?: SortOrderInput | SortOrder
    baas_secret?: SortOrderInput | SortOrder
    baas_name?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_configurationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    id_user?: number
    AND?: user_configurationWhereInput | user_configurationWhereInput[]
    OR?: user_configurationWhereInput[]
    NOT?: user_configurationWhereInput | user_configurationWhereInput[]
    pix_encoded_pixcopypaste?: StringNullableFilter<"user_configuration"> | string | null
    pix_qrcode?: StringNullableFilter<"user_configuration"> | string | null
    pix_transaction_id?: StringNullableFilter<"user_configuration"> | string | null
    pix_key?: StringNullableFilter<"user_configuration"> | string | null
    pix_validation_code?: StringNullableFilter<"user_configuration"> | string | null
    twofactor_code?: StringNullableFilter<"user_configuration"> | string | null
    fee_service_fixed?: DecimalFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    baas_key?: StringNullableFilter<"user_configuration"> | string | null
    baas_secret?: StringNullableFilter<"user_configuration"> | string | null
    baas_name?: StringNullableFilter<"user_configuration"> | string | null
    created_at?: DateTimeFilter<"user_configuration"> | Date | string
    updated_at?: DateTimeFilter<"user_configuration"> | Date | string
    users?: XOR<UsersRelationFilter, usersWhereInput>
  }, "id" | "id_user">

  export type user_configurationOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrder
    pix_encoded_pixcopypaste?: SortOrderInput | SortOrder
    pix_qrcode?: SortOrderInput | SortOrder
    pix_transaction_id?: SortOrderInput | SortOrder
    pix_key?: SortOrderInput | SortOrder
    pix_validation_code?: SortOrderInput | SortOrder
    twofactor_code?: SortOrderInput | SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
    baas_key?: SortOrderInput | SortOrder
    baas_secret?: SortOrderInput | SortOrder
    baas_name?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: user_configurationCountOrderByAggregateInput
    _avg?: user_configurationAvgOrderByAggregateInput
    _max?: user_configurationMaxOrderByAggregateInput
    _min?: user_configurationMinOrderByAggregateInput
    _sum?: user_configurationSumOrderByAggregateInput
  }

  export type user_configurationScalarWhereWithAggregatesInput = {
    AND?: user_configurationScalarWhereWithAggregatesInput | user_configurationScalarWhereWithAggregatesInput[]
    OR?: user_configurationScalarWhereWithAggregatesInput[]
    NOT?: user_configurationScalarWhereWithAggregatesInput | user_configurationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_configuration"> | number
    id_user?: IntWithAggregatesFilter<"user_configuration"> | number
    pix_encoded_pixcopypaste?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    pix_qrcode?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    pix_transaction_id?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    pix_key?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    pix_validation_code?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    twofactor_code?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    fee_service_fixed?: DecimalWithAggregatesFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalWithAggregatesFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalWithAggregatesFilter<"user_configuration"> | Decimal | DecimalJsLike | number | string
    baas_key?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    baas_secret?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    baas_name?: StringNullableWithAggregatesFilter<"user_configuration"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"user_configuration"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"user_configuration"> | Date | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    id_user?: IntNullableFilter<"users"> | number | null
    status?: EnumStatusFilter<"users"> | $Enums.Status
    email?: StringFilter<"users"> | string
    password?: StringNullableFilter<"users"> | string | null
    username?: StringNullableFilter<"users"> | string | null
    role?: EnumRoleFilter<"users"> | $Enums.Role
    access_token?: StringNullableFilter<"users"> | string | null
    seed?: StringNullableFilter<"users"> | string | null
    integration_token?: StringNullableFilter<"users"> | string | null
    onetime_token?: StringNullableFilter<"users"> | string | null
    two_factor_active?: BoolFilter<"users"> | boolean
    access_allowed?: BoolFilter<"users"> | boolean
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    email_code?: StringNullableFilter<"users"> | string | null
    email_status?: EnumTypeEmailConfirmFilter<"users"> | $Enums.TypeEmailConfirm
    password_code?: StringNullableFilter<"users"> | string | null
    Categories?: CategoriesListRelationFilter
    UsersOnCategories?: UsersOnCategoriesListRelationFilter
    security_code?: Security_codeListRelationFilter
    token_managements?: Token_managementsListRelationFilter
    user_configuration?: XOR<User_configurationNullableRelationFilter, user_configurationWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    other_users?: UsersListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    id_user?: SortOrderInput | SortOrder
    status?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    role?: SortOrder
    access_token?: SortOrderInput | SortOrder
    seed?: SortOrderInput | SortOrder
    integration_token?: SortOrderInput | SortOrder
    onetime_token?: SortOrderInput | SortOrder
    two_factor_active?: SortOrder
    access_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email_code?: SortOrderInput | SortOrder
    email_status?: SortOrder
    password_code?: SortOrderInput | SortOrder
    Categories?: CategoriesOrderByRelationAggregateInput
    UsersOnCategories?: UsersOnCategoriesOrderByRelationAggregateInput
    security_code?: security_codeOrderByRelationAggregateInput
    token_managements?: token_managementsOrderByRelationAggregateInput
    user_configuration?: user_configurationOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    other_users?: usersOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    username?: string
    seed?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id_user?: IntNullableFilter<"users"> | number | null
    status?: EnumStatusFilter<"users"> | $Enums.Status
    password?: StringNullableFilter<"users"> | string | null
    role?: EnumRoleFilter<"users"> | $Enums.Role
    access_token?: StringNullableFilter<"users"> | string | null
    integration_token?: StringNullableFilter<"users"> | string | null
    onetime_token?: StringNullableFilter<"users"> | string | null
    two_factor_active?: BoolFilter<"users"> | boolean
    access_allowed?: BoolFilter<"users"> | boolean
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    email_code?: StringNullableFilter<"users"> | string | null
    email_status?: EnumTypeEmailConfirmFilter<"users"> | $Enums.TypeEmailConfirm
    password_code?: StringNullableFilter<"users"> | string | null
    Categories?: CategoriesListRelationFilter
    UsersOnCategories?: UsersOnCategoriesListRelationFilter
    security_code?: Security_codeListRelationFilter
    token_managements?: Token_managementsListRelationFilter
    user_configuration?: XOR<User_configurationNullableRelationFilter, user_configurationWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    other_users?: UsersListRelationFilter
  }, "id" | "email" | "username" | "seed">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    id_user?: SortOrderInput | SortOrder
    status?: SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    role?: SortOrder
    access_token?: SortOrderInput | SortOrder
    seed?: SortOrderInput | SortOrder
    integration_token?: SortOrderInput | SortOrder
    onetime_token?: SortOrderInput | SortOrder
    two_factor_active?: SortOrder
    access_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email_code?: SortOrderInput | SortOrder
    email_status?: SortOrder
    password_code?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    id_user?: IntNullableWithAggregatesFilter<"users"> | number | null
    status?: EnumStatusWithAggregatesFilter<"users"> | $Enums.Status
    email?: StringWithAggregatesFilter<"users"> | string
    password?: StringNullableWithAggregatesFilter<"users"> | string | null
    username?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: EnumRoleWithAggregatesFilter<"users"> | $Enums.Role
    access_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    seed?: StringNullableWithAggregatesFilter<"users"> | string | null
    integration_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    onetime_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    two_factor_active?: BoolWithAggregatesFilter<"users"> | boolean
    access_allowed?: BoolWithAggregatesFilter<"users"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    email_code?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_status?: EnumTypeEmailConfirmWithAggregatesFilter<"users"> | $Enums.TypeEmailConfirm
    password_code?: StringNullableWithAggregatesFilter<"users"> | string | null
  }

  export type CategoriesCreateInput = {
    name: string
    description?: string | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedOneWithoutCategoriesInput
    CategoriesOnModules?: CategoriesOnModulesCreateNestedManyWithoutCategoriesInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    created_id?: number | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedCreateNestedManyWithoutCategoriesInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutCategoriesNestedInput
    CategoriesOnModules?: CategoriesOnModulesUpdateManyWithoutCategoriesNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_id?: NullableIntFieldUpdateOperationsInput | number | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedUpdateManyWithoutCategoriesNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoriesCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    created_id?: number | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CategoriesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_id?: NullableIntFieldUpdateOperationsInput | number | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriesOnModulesCreateInput = {
    Categories: CategoriesCreateNestedOneWithoutCategoriesOnModulesInput
    Modules: ModulesCreateNestedOneWithoutCategoriesOnModulesInput
  }

  export type CategoriesOnModulesUncheckedCreateInput = {
    id?: number
    categoryId: number
    moduleId: number
  }

  export type CategoriesOnModulesUpdateInput = {
    Categories?: CategoriesUpdateOneRequiredWithoutCategoriesOnModulesNestedInput
    Modules?: ModulesUpdateOneRequiredWithoutCategoriesOnModulesNestedInput
  }

  export type CategoriesOnModulesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriesOnModulesCreateManyInput = {
    id?: number
    categoryId: number
    moduleId: number
  }

  export type CategoriesOnModulesUpdateManyMutationInput = {

  }

  export type CategoriesOnModulesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
  }

  export type ModulesCreateInput = {
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
    CategoriesOnModules?: CategoriesOnModulesCreateNestedManyWithoutModulesInput
    ResourcesOnModules?: ResourcesOnModulesCreateNestedManyWithoutModulesInput
  }

  export type ModulesUncheckedCreateInput = {
    id?: number
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
    CategoriesOnModules?: CategoriesOnModulesUncheckedCreateNestedManyWithoutModulesInput
    ResourcesOnModules?: ResourcesOnModulesUncheckedCreateNestedManyWithoutModulesInput
  }

  export type ModulesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
    CategoriesOnModules?: CategoriesOnModulesUpdateManyWithoutModulesNestedInput
    ResourcesOnModules?: ResourcesOnModulesUpdateManyWithoutModulesNestedInput
  }

  export type ModulesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedUpdateManyWithoutModulesNestedInput
    ResourcesOnModules?: ResourcesOnModulesUncheckedUpdateManyWithoutModulesNestedInput
  }

  export type ModulesCreateManyInput = {
    id?: number
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
  }

  export type ModulesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
  }

  export type ModulesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
  }

  export type ResourcesCreateInput = {
    name: string
    path: string
    description: string
    value: number
    library: $Enums.Libraries
    created_at?: Date | string
    updated_at?: Date | string
    ResourcesOnModules?: ResourcesOnModulesCreateNestedManyWithoutResourcesInput
  }

  export type ResourcesUncheckedCreateInput = {
    id?: number
    name: string
    path: string
    description: string
    value: number
    library: $Enums.Libraries
    created_at?: Date | string
    updated_at?: Date | string
    ResourcesOnModules?: ResourcesOnModulesUncheckedCreateNestedManyWithoutResourcesInput
  }

  export type ResourcesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    library?: EnumLibrariesFieldUpdateOperationsInput | $Enums.Libraries
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ResourcesOnModules?: ResourcesOnModulesUpdateManyWithoutResourcesNestedInput
  }

  export type ResourcesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    library?: EnumLibrariesFieldUpdateOperationsInput | $Enums.Libraries
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ResourcesOnModules?: ResourcesOnModulesUncheckedUpdateManyWithoutResourcesNestedInput
  }

  export type ResourcesCreateManyInput = {
    id?: number
    name: string
    path: string
    description: string
    value: number
    library: $Enums.Libraries
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ResourcesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    library?: EnumLibrariesFieldUpdateOperationsInput | $Enums.Libraries
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourcesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    library?: EnumLibrariesFieldUpdateOperationsInput | $Enums.Libraries
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourcesOnModulesCreateInput = {
    Modules: ModulesCreateNestedOneWithoutResourcesOnModulesInput
    Resources: ResourcesCreateNestedOneWithoutResourcesOnModulesInput
  }

  export type ResourcesOnModulesUncheckedCreateInput = {
    id?: number
    moduleId: number
    resourceId: number
  }

  export type ResourcesOnModulesUpdateInput = {
    Modules?: ModulesUpdateOneRequiredWithoutResourcesOnModulesNestedInput
    Resources?: ResourcesUpdateOneRequiredWithoutResourcesOnModulesNestedInput
  }

  export type ResourcesOnModulesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
    resourceId?: IntFieldUpdateOperationsInput | number
  }

  export type ResourcesOnModulesCreateManyInput = {
    id?: number
    moduleId: number
    resourceId: number
  }

  export type ResourcesOnModulesUpdateManyMutationInput = {

  }

  export type ResourcesOnModulesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
    resourceId?: IntFieldUpdateOperationsInput | number
  }

  export type UsersOnCategoriesCreateInput = {
    created_at?: Date | string
    updated_at?: Date | string
    Categories: CategoriesCreateNestedOneWithoutUsersOnCategoriesInput
    users: usersCreateNestedOneWithoutUsersOnCategoriesInput
  }

  export type UsersOnCategoriesUncheckedCreateInput = {
    id?: number
    userId: number
    categoryId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UsersOnCategoriesUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Categories?: CategoriesUpdateOneRequiredWithoutUsersOnCategoriesNestedInput
    users?: usersUpdateOneRequiredWithoutUsersOnCategoriesNestedInput
  }

  export type UsersOnCategoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersOnCategoriesCreateManyInput = {
    id?: number
    userId: number
    categoryId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UsersOnCategoriesUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersOnCategoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type security_codeCreateInput = {
    code: string
    date_expiration: Date | string
    status?: $Enums.StatusSecurityCode
    created_at?: Date | string
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutSecurity_codeInput
  }

  export type security_codeUncheckedCreateInput = {
    id?: number
    id_user: number
    code: string
    date_expiration: Date | string
    status?: $Enums.StatusSecurityCode
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type security_codeUpdateInput = {
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutSecurity_codeNestedInput
  }

  export type security_codeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type security_codeCreateManyInput = {
    id?: number
    id_user: number
    code: string
    date_expiration: Date | string
    status?: $Enums.StatusSecurityCode
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type security_codeUpdateManyMutationInput = {
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type security_codeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_managementsCreateInput = {
    origin: string
    token: string
    expiration: Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.Status
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedOneWithoutToken_managementsInput
  }

  export type token_managementsUncheckedCreateInput = {
    id?: number
    id_user?: number | null
    origin: string
    token: string
    expiration: Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.Status
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_managementsUpdateInput = {
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutToken_managementsNestedInput
  }

  export type token_managementsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_managementsCreateManyInput = {
    id?: number
    id_user?: number | null
    origin: string
    token: string
    expiration: Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.Status
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_managementsUpdateManyMutationInput = {
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_managementsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_configurationCreateInput = {
    pix_encoded_pixcopypaste?: string | null
    pix_qrcode?: string | null
    pix_transaction_id?: string | null
    pix_key?: string | null
    pix_validation_code?: string | null
    twofactor_code?: string | null
    fee_service_fixed?: Decimal | DecimalJsLike | number | string
    fee_service_percent?: Decimal | DecimalJsLike | number | string
    fee_pix?: Decimal | DecimalJsLike | number | string
    baas_key?: string | null
    baas_secret?: string | null
    baas_name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutUser_configurationInput
  }

  export type user_configurationUncheckedCreateInput = {
    id?: number
    id_user: number
    pix_encoded_pixcopypaste?: string | null
    pix_qrcode?: string | null
    pix_transaction_id?: string | null
    pix_key?: string | null
    pix_validation_code?: string | null
    twofactor_code?: string | null
    fee_service_fixed?: Decimal | DecimalJsLike | number | string
    fee_service_percent?: Decimal | DecimalJsLike | number | string
    fee_pix?: Decimal | DecimalJsLike | number | string
    baas_key?: string | null
    baas_secret?: string | null
    baas_name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_configurationUpdateInput = {
    pix_encoded_pixcopypaste?: NullableStringFieldUpdateOperationsInput | string | null
    pix_qrcode?: NullableStringFieldUpdateOperationsInput | string | null
    pix_transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    pix_key?: NullableStringFieldUpdateOperationsInput | string | null
    pix_validation_code?: NullableStringFieldUpdateOperationsInput | string | null
    twofactor_code?: NullableStringFieldUpdateOperationsInput | string | null
    fee_service_fixed?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    baas_key?: NullableStringFieldUpdateOperationsInput | string | null
    baas_secret?: NullableStringFieldUpdateOperationsInput | string | null
    baas_name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUser_configurationNestedInput
  }

  export type user_configurationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    pix_encoded_pixcopypaste?: NullableStringFieldUpdateOperationsInput | string | null
    pix_qrcode?: NullableStringFieldUpdateOperationsInput | string | null
    pix_transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    pix_key?: NullableStringFieldUpdateOperationsInput | string | null
    pix_validation_code?: NullableStringFieldUpdateOperationsInput | string | null
    twofactor_code?: NullableStringFieldUpdateOperationsInput | string | null
    fee_service_fixed?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    baas_key?: NullableStringFieldUpdateOperationsInput | string | null
    baas_secret?: NullableStringFieldUpdateOperationsInput | string | null
    baas_name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_configurationCreateManyInput = {
    id?: number
    id_user: number
    pix_encoded_pixcopypaste?: string | null
    pix_qrcode?: string | null
    pix_transaction_id?: string | null
    pix_key?: string | null
    pix_validation_code?: string | null
    twofactor_code?: string | null
    fee_service_fixed?: Decimal | DecimalJsLike | number | string
    fee_service_percent?: Decimal | DecimalJsLike | number | string
    fee_pix?: Decimal | DecimalJsLike | number | string
    baas_key?: string | null
    baas_secret?: string | null
    baas_name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_configurationUpdateManyMutationInput = {
    pix_encoded_pixcopypaste?: NullableStringFieldUpdateOperationsInput | string | null
    pix_qrcode?: NullableStringFieldUpdateOperationsInput | string | null
    pix_transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    pix_key?: NullableStringFieldUpdateOperationsInput | string | null
    pix_validation_code?: NullableStringFieldUpdateOperationsInput | string | null
    twofactor_code?: NullableStringFieldUpdateOperationsInput | string | null
    fee_service_fixed?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    baas_key?: NullableStringFieldUpdateOperationsInput | string | null
    baas_secret?: NullableStringFieldUpdateOperationsInput | string | null
    baas_name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_configurationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: IntFieldUpdateOperationsInput | number
    pix_encoded_pixcopypaste?: NullableStringFieldUpdateOperationsInput | string | null
    pix_qrcode?: NullableStringFieldUpdateOperationsInput | string | null
    pix_transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    pix_key?: NullableStringFieldUpdateOperationsInput | string | null
    pix_validation_code?: NullableStringFieldUpdateOperationsInput | string | null
    twofactor_code?: NullableStringFieldUpdateOperationsInput | string | null
    fee_service_fixed?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    baas_key?: NullableStringFieldUpdateOperationsInput | string | null
    baas_secret?: NullableStringFieldUpdateOperationsInput | string | null
    baas_name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
  }

  export type usersUpdateManyMutationInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UsersNullableRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type CategoriesOnModulesListRelationFilter = {
    every?: CategoriesOnModulesWhereInput
    some?: CategoriesOnModulesWhereInput
    none?: CategoriesOnModulesWhereInput
  }

  export type UsersOnCategoriesListRelationFilter = {
    every?: UsersOnCategoriesWhereInput
    some?: UsersOnCategoriesWhereInput
    none?: UsersOnCategoriesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CategoriesOnModulesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersOnCategoriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoriesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_id?: SortOrder
    custom_value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CategoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    created_id?: SortOrder
    custom_value?: SortOrder
  }

  export type CategoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_id?: SortOrder
    custom_value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CategoriesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_id?: SortOrder
    custom_value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CategoriesSumOrderByAggregateInput = {
    id?: SortOrder
    created_id?: SortOrder
    custom_value?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type CategoriesRelationFilter = {
    is?: CategoriesWhereInput
    isNot?: CategoriesWhereInput
  }

  export type ModulesRelationFilter = {
    is?: ModulesWhereInput
    isNot?: ModulesWhereInput
  }

  export type CategoriesOnModulesCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
  }

  export type CategoriesOnModulesAvgOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
  }

  export type CategoriesOnModulesMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
  }

  export type CategoriesOnModulesMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
  }

  export type CategoriesOnModulesSumOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    moduleId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type ResourcesOnModulesListRelationFilter = {
    every?: ResourcesOnModulesWhereInput
    some?: ResourcesOnModulesWhereInput
    none?: ResourcesOnModulesWhereInput
  }

  export type ResourcesOnModulesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModulesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    path_make_function?: SortOrder
  }

  export type ModulesAvgOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type ModulesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    path_make_function?: SortOrder
  }

  export type ModulesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    value?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    path_make_function?: SortOrder
  }

  export type ModulesSumOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type EnumLibrariesFilter<$PrismaModel = never> = {
    equals?: $Enums.Libraries | EnumLibrariesFieldRefInput<$PrismaModel>
    in?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    notIn?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    not?: NestedEnumLibrariesFilter<$PrismaModel> | $Enums.Libraries
  }

  export type ResourcesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    description?: SortOrder
    value?: SortOrder
    library?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ResourcesAvgOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type ResourcesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    description?: SortOrder
    value?: SortOrder
    library?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ResourcesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    path?: SortOrder
    description?: SortOrder
    value?: SortOrder
    library?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ResourcesSumOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
  }

  export type EnumLibrariesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Libraries | EnumLibrariesFieldRefInput<$PrismaModel>
    in?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    notIn?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    not?: NestedEnumLibrariesWithAggregatesFilter<$PrismaModel> | $Enums.Libraries
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLibrariesFilter<$PrismaModel>
    _max?: NestedEnumLibrariesFilter<$PrismaModel>
  }

  export type ResourcesRelationFilter = {
    is?: ResourcesWhereInput
    isNot?: ResourcesWhereInput
  }

  export type ResourcesOnModulesCountOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
  }

  export type ResourcesOnModulesAvgOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
  }

  export type ResourcesOnModulesMaxOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
  }

  export type ResourcesOnModulesMinOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
  }

  export type ResourcesOnModulesSumOrderByAggregateInput = {
    id?: SortOrder
    moduleId?: SortOrder
    resourceId?: SortOrder
  }

  export type UsersRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type UsersOnCategoriesCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UsersOnCategoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
  }

  export type UsersOnCategoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UsersOnCategoriesMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type UsersOnCategoriesSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    categoryId?: SortOrder
  }

  export type EnumStatusSecurityCodeFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusSecurityCode | EnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    in?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusSecurityCodeFilter<$PrismaModel> | $Enums.StatusSecurityCode
  }

  export type security_codeCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    code?: SortOrder
    date_expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type security_codeAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type security_codeMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    code?: SortOrder
    date_expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type security_codeMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    code?: SortOrder
    date_expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type security_codeSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type EnumStatusSecurityCodeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusSecurityCode | EnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    in?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusSecurityCodeWithAggregatesFilter<$PrismaModel> | $Enums.StatusSecurityCode
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusSecurityCodeFilter<$PrismaModel>
    _max?: NestedEnumStatusSecurityCodeFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFilter<$PrismaModel> | $Enums.Status
  }

  export type token_managementsCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    origin?: SortOrder
    token?: SortOrder
    expiration?: SortOrder
    data?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_managementsAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type token_managementsMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    origin?: SortOrder
    token?: SortOrder
    expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_managementsMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    origin?: SortOrder
    token?: SortOrder
    expiration?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type token_managementsSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusWithAggregatesFilter<$PrismaModel> | $Enums.Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFilter<$PrismaModel>
    _max?: NestedEnumStatusFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type user_configurationCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    pix_encoded_pixcopypaste?: SortOrder
    pix_qrcode?: SortOrder
    pix_transaction_id?: SortOrder
    pix_key?: SortOrder
    pix_validation_code?: SortOrder
    twofactor_code?: SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
    baas_key?: SortOrder
    baas_secret?: SortOrder
    baas_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_configurationAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
  }

  export type user_configurationMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    pix_encoded_pixcopypaste?: SortOrder
    pix_qrcode?: SortOrder
    pix_transaction_id?: SortOrder
    pix_key?: SortOrder
    pix_validation_code?: SortOrder
    twofactor_code?: SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
    baas_key?: SortOrder
    baas_secret?: SortOrder
    baas_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_configurationMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    pix_encoded_pixcopypaste?: SortOrder
    pix_qrcode?: SortOrder
    pix_transaction_id?: SortOrder
    pix_key?: SortOrder
    pix_validation_code?: SortOrder
    twofactor_code?: SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
    baas_key?: SortOrder
    baas_secret?: SortOrder
    baas_name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type user_configurationSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    fee_service_fixed?: SortOrder
    fee_service_percent?: SortOrder
    fee_pix?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumTypeEmailConfirmFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeEmailConfirm | EnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    in?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    notIn?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    not?: NestedEnumTypeEmailConfirmFilter<$PrismaModel> | $Enums.TypeEmailConfirm
  }

  export type CategoriesListRelationFilter = {
    every?: CategoriesWhereInput
    some?: CategoriesWhereInput
    none?: CategoriesWhereInput
  }

  export type Security_codeListRelationFilter = {
    every?: security_codeWhereInput
    some?: security_codeWhereInput
    none?: security_codeWhereInput
  }

  export type Token_managementsListRelationFilter = {
    every?: token_managementsWhereInput
    some?: token_managementsWhereInput
    none?: token_managementsWhereInput
  }

  export type User_configurationNullableRelationFilter = {
    is?: user_configurationWhereInput | null
    isNot?: user_configurationWhereInput | null
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type CategoriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type security_codeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type token_managementsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    status?: SortOrder
    email?: SortOrder
    password?: SortOrder
    username?: SortOrder
    role?: SortOrder
    access_token?: SortOrder
    seed?: SortOrder
    integration_token?: SortOrder
    onetime_token?: SortOrder
    two_factor_active?: SortOrder
    access_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email_code?: SortOrder
    email_status?: SortOrder
    password_code?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    status?: SortOrder
    email?: SortOrder
    password?: SortOrder
    username?: SortOrder
    role?: SortOrder
    access_token?: SortOrder
    seed?: SortOrder
    integration_token?: SortOrder
    onetime_token?: SortOrder
    two_factor_active?: SortOrder
    access_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email_code?: SortOrder
    email_status?: SortOrder
    password_code?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
    status?: SortOrder
    email?: SortOrder
    password?: SortOrder
    username?: SortOrder
    role?: SortOrder
    access_token?: SortOrder
    seed?: SortOrder
    integration_token?: SortOrder
    onetime_token?: SortOrder
    two_factor_active?: SortOrder
    access_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email_code?: SortOrder
    email_status?: SortOrder
    password_code?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    id_user?: SortOrder
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumTypeEmailConfirmWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeEmailConfirm | EnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    in?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    notIn?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    not?: NestedEnumTypeEmailConfirmWithAggregatesFilter<$PrismaModel> | $Enums.TypeEmailConfirm
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeEmailConfirmFilter<$PrismaModel>
    _max?: NestedEnumTypeEmailConfirmFilter<$PrismaModel>
  }

  export type usersCreateNestedOneWithoutCategoriesInput = {
    create?: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutCategoriesInput
    connect?: usersWhereUniqueInput
  }

  export type CategoriesOnModulesCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutCategoriesInput, CategoriesOnModulesUncheckedCreateWithoutCategoriesInput> | CategoriesOnModulesCreateWithoutCategoriesInput[] | CategoriesOnModulesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutCategoriesInput | CategoriesOnModulesCreateOrConnectWithoutCategoriesInput[]
    createMany?: CategoriesOnModulesCreateManyCategoriesInputEnvelope
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
  }

  export type UsersOnCategoriesCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutCategoriesInput, UsersOnCategoriesUncheckedCreateWithoutCategoriesInput> | UsersOnCategoriesCreateWithoutCategoriesInput[] | UsersOnCategoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutCategoriesInput | UsersOnCategoriesCreateOrConnectWithoutCategoriesInput[]
    createMany?: UsersOnCategoriesCreateManyCategoriesInputEnvelope
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
  }

  export type CategoriesOnModulesUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutCategoriesInput, CategoriesOnModulesUncheckedCreateWithoutCategoriesInput> | CategoriesOnModulesCreateWithoutCategoriesInput[] | CategoriesOnModulesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutCategoriesInput | CategoriesOnModulesCreateOrConnectWithoutCategoriesInput[]
    createMany?: CategoriesOnModulesCreateManyCategoriesInputEnvelope
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
  }

  export type UsersOnCategoriesUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutCategoriesInput, UsersOnCategoriesUncheckedCreateWithoutCategoriesInput> | UsersOnCategoriesCreateWithoutCategoriesInput[] | UsersOnCategoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutCategoriesInput | UsersOnCategoriesCreateOrConnectWithoutCategoriesInput[]
    createMany?: UsersOnCategoriesCreateManyCategoriesInputEnvelope
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type usersUpdateOneWithoutCategoriesNestedInput = {
    create?: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutCategoriesInput
    upsert?: usersUpsertWithoutCategoriesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCategoriesInput, usersUpdateWithoutCategoriesInput>, usersUncheckedUpdateWithoutCategoriesInput>
  }

  export type CategoriesOnModulesUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutCategoriesInput, CategoriesOnModulesUncheckedCreateWithoutCategoriesInput> | CategoriesOnModulesCreateWithoutCategoriesInput[] | CategoriesOnModulesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutCategoriesInput | CategoriesOnModulesCreateOrConnectWithoutCategoriesInput[]
    upsert?: CategoriesOnModulesUpsertWithWhereUniqueWithoutCategoriesInput | CategoriesOnModulesUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: CategoriesOnModulesCreateManyCategoriesInputEnvelope
    set?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    disconnect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    delete?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    update?: CategoriesOnModulesUpdateWithWhereUniqueWithoutCategoriesInput | CategoriesOnModulesUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: CategoriesOnModulesUpdateManyWithWhereWithoutCategoriesInput | CategoriesOnModulesUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: CategoriesOnModulesScalarWhereInput | CategoriesOnModulesScalarWhereInput[]
  }

  export type UsersOnCategoriesUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutCategoriesInput, UsersOnCategoriesUncheckedCreateWithoutCategoriesInput> | UsersOnCategoriesCreateWithoutCategoriesInput[] | UsersOnCategoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutCategoriesInput | UsersOnCategoriesCreateOrConnectWithoutCategoriesInput[]
    upsert?: UsersOnCategoriesUpsertWithWhereUniqueWithoutCategoriesInput | UsersOnCategoriesUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: UsersOnCategoriesCreateManyCategoriesInputEnvelope
    set?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    disconnect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    delete?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    update?: UsersOnCategoriesUpdateWithWhereUniqueWithoutCategoriesInput | UsersOnCategoriesUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: UsersOnCategoriesUpdateManyWithWhereWithoutCategoriesInput | UsersOnCategoriesUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: UsersOnCategoriesScalarWhereInput | UsersOnCategoriesScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoriesOnModulesUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutCategoriesInput, CategoriesOnModulesUncheckedCreateWithoutCategoriesInput> | CategoriesOnModulesCreateWithoutCategoriesInput[] | CategoriesOnModulesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutCategoriesInput | CategoriesOnModulesCreateOrConnectWithoutCategoriesInput[]
    upsert?: CategoriesOnModulesUpsertWithWhereUniqueWithoutCategoriesInput | CategoriesOnModulesUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: CategoriesOnModulesCreateManyCategoriesInputEnvelope
    set?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    disconnect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    delete?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    update?: CategoriesOnModulesUpdateWithWhereUniqueWithoutCategoriesInput | CategoriesOnModulesUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: CategoriesOnModulesUpdateManyWithWhereWithoutCategoriesInput | CategoriesOnModulesUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: CategoriesOnModulesScalarWhereInput | CategoriesOnModulesScalarWhereInput[]
  }

  export type UsersOnCategoriesUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutCategoriesInput, UsersOnCategoriesUncheckedCreateWithoutCategoriesInput> | UsersOnCategoriesCreateWithoutCategoriesInput[] | UsersOnCategoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutCategoriesInput | UsersOnCategoriesCreateOrConnectWithoutCategoriesInput[]
    upsert?: UsersOnCategoriesUpsertWithWhereUniqueWithoutCategoriesInput | UsersOnCategoriesUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: UsersOnCategoriesCreateManyCategoriesInputEnvelope
    set?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    disconnect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    delete?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    update?: UsersOnCategoriesUpdateWithWhereUniqueWithoutCategoriesInput | UsersOnCategoriesUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: UsersOnCategoriesUpdateManyWithWhereWithoutCategoriesInput | UsersOnCategoriesUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: UsersOnCategoriesScalarWhereInput | UsersOnCategoriesScalarWhereInput[]
  }

  export type CategoriesCreateNestedOneWithoutCategoriesOnModulesInput = {
    create?: XOR<CategoriesCreateWithoutCategoriesOnModulesInput, CategoriesUncheckedCreateWithoutCategoriesOnModulesInput>
    connectOrCreate?: CategoriesCreateOrConnectWithoutCategoriesOnModulesInput
    connect?: CategoriesWhereUniqueInput
  }

  export type ModulesCreateNestedOneWithoutCategoriesOnModulesInput = {
    create?: XOR<ModulesCreateWithoutCategoriesOnModulesInput, ModulesUncheckedCreateWithoutCategoriesOnModulesInput>
    connectOrCreate?: ModulesCreateOrConnectWithoutCategoriesOnModulesInput
    connect?: ModulesWhereUniqueInput
  }

  export type CategoriesUpdateOneRequiredWithoutCategoriesOnModulesNestedInput = {
    create?: XOR<CategoriesCreateWithoutCategoriesOnModulesInput, CategoriesUncheckedCreateWithoutCategoriesOnModulesInput>
    connectOrCreate?: CategoriesCreateOrConnectWithoutCategoriesOnModulesInput
    upsert?: CategoriesUpsertWithoutCategoriesOnModulesInput
    connect?: CategoriesWhereUniqueInput
    update?: XOR<XOR<CategoriesUpdateToOneWithWhereWithoutCategoriesOnModulesInput, CategoriesUpdateWithoutCategoriesOnModulesInput>, CategoriesUncheckedUpdateWithoutCategoriesOnModulesInput>
  }

  export type ModulesUpdateOneRequiredWithoutCategoriesOnModulesNestedInput = {
    create?: XOR<ModulesCreateWithoutCategoriesOnModulesInput, ModulesUncheckedCreateWithoutCategoriesOnModulesInput>
    connectOrCreate?: ModulesCreateOrConnectWithoutCategoriesOnModulesInput
    upsert?: ModulesUpsertWithoutCategoriesOnModulesInput
    connect?: ModulesWhereUniqueInput
    update?: XOR<XOR<ModulesUpdateToOneWithWhereWithoutCategoriesOnModulesInput, ModulesUpdateWithoutCategoriesOnModulesInput>, ModulesUncheckedUpdateWithoutCategoriesOnModulesInput>
  }

  export type CategoriesOnModulesCreateNestedManyWithoutModulesInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutModulesInput, CategoriesOnModulesUncheckedCreateWithoutModulesInput> | CategoriesOnModulesCreateWithoutModulesInput[] | CategoriesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutModulesInput | CategoriesOnModulesCreateOrConnectWithoutModulesInput[]
    createMany?: CategoriesOnModulesCreateManyModulesInputEnvelope
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
  }

  export type ResourcesOnModulesCreateNestedManyWithoutModulesInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutModulesInput, ResourcesOnModulesUncheckedCreateWithoutModulesInput> | ResourcesOnModulesCreateWithoutModulesInput[] | ResourcesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutModulesInput | ResourcesOnModulesCreateOrConnectWithoutModulesInput[]
    createMany?: ResourcesOnModulesCreateManyModulesInputEnvelope
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
  }

  export type CategoriesOnModulesUncheckedCreateNestedManyWithoutModulesInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutModulesInput, CategoriesOnModulesUncheckedCreateWithoutModulesInput> | CategoriesOnModulesCreateWithoutModulesInput[] | CategoriesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutModulesInput | CategoriesOnModulesCreateOrConnectWithoutModulesInput[]
    createMany?: CategoriesOnModulesCreateManyModulesInputEnvelope
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
  }

  export type ResourcesOnModulesUncheckedCreateNestedManyWithoutModulesInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutModulesInput, ResourcesOnModulesUncheckedCreateWithoutModulesInput> | ResourcesOnModulesCreateWithoutModulesInput[] | ResourcesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutModulesInput | ResourcesOnModulesCreateOrConnectWithoutModulesInput[]
    createMany?: ResourcesOnModulesCreateManyModulesInputEnvelope
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CategoriesOnModulesUpdateManyWithoutModulesNestedInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutModulesInput, CategoriesOnModulesUncheckedCreateWithoutModulesInput> | CategoriesOnModulesCreateWithoutModulesInput[] | CategoriesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutModulesInput | CategoriesOnModulesCreateOrConnectWithoutModulesInput[]
    upsert?: CategoriesOnModulesUpsertWithWhereUniqueWithoutModulesInput | CategoriesOnModulesUpsertWithWhereUniqueWithoutModulesInput[]
    createMany?: CategoriesOnModulesCreateManyModulesInputEnvelope
    set?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    disconnect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    delete?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    update?: CategoriesOnModulesUpdateWithWhereUniqueWithoutModulesInput | CategoriesOnModulesUpdateWithWhereUniqueWithoutModulesInput[]
    updateMany?: CategoriesOnModulesUpdateManyWithWhereWithoutModulesInput | CategoriesOnModulesUpdateManyWithWhereWithoutModulesInput[]
    deleteMany?: CategoriesOnModulesScalarWhereInput | CategoriesOnModulesScalarWhereInput[]
  }

  export type ResourcesOnModulesUpdateManyWithoutModulesNestedInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutModulesInput, ResourcesOnModulesUncheckedCreateWithoutModulesInput> | ResourcesOnModulesCreateWithoutModulesInput[] | ResourcesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutModulesInput | ResourcesOnModulesCreateOrConnectWithoutModulesInput[]
    upsert?: ResourcesOnModulesUpsertWithWhereUniqueWithoutModulesInput | ResourcesOnModulesUpsertWithWhereUniqueWithoutModulesInput[]
    createMany?: ResourcesOnModulesCreateManyModulesInputEnvelope
    set?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    disconnect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    delete?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    update?: ResourcesOnModulesUpdateWithWhereUniqueWithoutModulesInput | ResourcesOnModulesUpdateWithWhereUniqueWithoutModulesInput[]
    updateMany?: ResourcesOnModulesUpdateManyWithWhereWithoutModulesInput | ResourcesOnModulesUpdateManyWithWhereWithoutModulesInput[]
    deleteMany?: ResourcesOnModulesScalarWhereInput | ResourcesOnModulesScalarWhereInput[]
  }

  export type CategoriesOnModulesUncheckedUpdateManyWithoutModulesNestedInput = {
    create?: XOR<CategoriesOnModulesCreateWithoutModulesInput, CategoriesOnModulesUncheckedCreateWithoutModulesInput> | CategoriesOnModulesCreateWithoutModulesInput[] | CategoriesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: CategoriesOnModulesCreateOrConnectWithoutModulesInput | CategoriesOnModulesCreateOrConnectWithoutModulesInput[]
    upsert?: CategoriesOnModulesUpsertWithWhereUniqueWithoutModulesInput | CategoriesOnModulesUpsertWithWhereUniqueWithoutModulesInput[]
    createMany?: CategoriesOnModulesCreateManyModulesInputEnvelope
    set?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    disconnect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    delete?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    connect?: CategoriesOnModulesWhereUniqueInput | CategoriesOnModulesWhereUniqueInput[]
    update?: CategoriesOnModulesUpdateWithWhereUniqueWithoutModulesInput | CategoriesOnModulesUpdateWithWhereUniqueWithoutModulesInput[]
    updateMany?: CategoriesOnModulesUpdateManyWithWhereWithoutModulesInput | CategoriesOnModulesUpdateManyWithWhereWithoutModulesInput[]
    deleteMany?: CategoriesOnModulesScalarWhereInput | CategoriesOnModulesScalarWhereInput[]
  }

  export type ResourcesOnModulesUncheckedUpdateManyWithoutModulesNestedInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutModulesInput, ResourcesOnModulesUncheckedCreateWithoutModulesInput> | ResourcesOnModulesCreateWithoutModulesInput[] | ResourcesOnModulesUncheckedCreateWithoutModulesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutModulesInput | ResourcesOnModulesCreateOrConnectWithoutModulesInput[]
    upsert?: ResourcesOnModulesUpsertWithWhereUniqueWithoutModulesInput | ResourcesOnModulesUpsertWithWhereUniqueWithoutModulesInput[]
    createMany?: ResourcesOnModulesCreateManyModulesInputEnvelope
    set?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    disconnect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    delete?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    update?: ResourcesOnModulesUpdateWithWhereUniqueWithoutModulesInput | ResourcesOnModulesUpdateWithWhereUniqueWithoutModulesInput[]
    updateMany?: ResourcesOnModulesUpdateManyWithWhereWithoutModulesInput | ResourcesOnModulesUpdateManyWithWhereWithoutModulesInput[]
    deleteMany?: ResourcesOnModulesScalarWhereInput | ResourcesOnModulesScalarWhereInput[]
  }

  export type ResourcesOnModulesCreateNestedManyWithoutResourcesInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutResourcesInput, ResourcesOnModulesUncheckedCreateWithoutResourcesInput> | ResourcesOnModulesCreateWithoutResourcesInput[] | ResourcesOnModulesUncheckedCreateWithoutResourcesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutResourcesInput | ResourcesOnModulesCreateOrConnectWithoutResourcesInput[]
    createMany?: ResourcesOnModulesCreateManyResourcesInputEnvelope
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
  }

  export type ResourcesOnModulesUncheckedCreateNestedManyWithoutResourcesInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutResourcesInput, ResourcesOnModulesUncheckedCreateWithoutResourcesInput> | ResourcesOnModulesCreateWithoutResourcesInput[] | ResourcesOnModulesUncheckedCreateWithoutResourcesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutResourcesInput | ResourcesOnModulesCreateOrConnectWithoutResourcesInput[]
    createMany?: ResourcesOnModulesCreateManyResourcesInputEnvelope
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
  }

  export type EnumLibrariesFieldUpdateOperationsInput = {
    set?: $Enums.Libraries
  }

  export type ResourcesOnModulesUpdateManyWithoutResourcesNestedInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutResourcesInput, ResourcesOnModulesUncheckedCreateWithoutResourcesInput> | ResourcesOnModulesCreateWithoutResourcesInput[] | ResourcesOnModulesUncheckedCreateWithoutResourcesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutResourcesInput | ResourcesOnModulesCreateOrConnectWithoutResourcesInput[]
    upsert?: ResourcesOnModulesUpsertWithWhereUniqueWithoutResourcesInput | ResourcesOnModulesUpsertWithWhereUniqueWithoutResourcesInput[]
    createMany?: ResourcesOnModulesCreateManyResourcesInputEnvelope
    set?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    disconnect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    delete?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    update?: ResourcesOnModulesUpdateWithWhereUniqueWithoutResourcesInput | ResourcesOnModulesUpdateWithWhereUniqueWithoutResourcesInput[]
    updateMany?: ResourcesOnModulesUpdateManyWithWhereWithoutResourcesInput | ResourcesOnModulesUpdateManyWithWhereWithoutResourcesInput[]
    deleteMany?: ResourcesOnModulesScalarWhereInput | ResourcesOnModulesScalarWhereInput[]
  }

  export type ResourcesOnModulesUncheckedUpdateManyWithoutResourcesNestedInput = {
    create?: XOR<ResourcesOnModulesCreateWithoutResourcesInput, ResourcesOnModulesUncheckedCreateWithoutResourcesInput> | ResourcesOnModulesCreateWithoutResourcesInput[] | ResourcesOnModulesUncheckedCreateWithoutResourcesInput[]
    connectOrCreate?: ResourcesOnModulesCreateOrConnectWithoutResourcesInput | ResourcesOnModulesCreateOrConnectWithoutResourcesInput[]
    upsert?: ResourcesOnModulesUpsertWithWhereUniqueWithoutResourcesInput | ResourcesOnModulesUpsertWithWhereUniqueWithoutResourcesInput[]
    createMany?: ResourcesOnModulesCreateManyResourcesInputEnvelope
    set?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    disconnect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    delete?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    connect?: ResourcesOnModulesWhereUniqueInput | ResourcesOnModulesWhereUniqueInput[]
    update?: ResourcesOnModulesUpdateWithWhereUniqueWithoutResourcesInput | ResourcesOnModulesUpdateWithWhereUniqueWithoutResourcesInput[]
    updateMany?: ResourcesOnModulesUpdateManyWithWhereWithoutResourcesInput | ResourcesOnModulesUpdateManyWithWhereWithoutResourcesInput[]
    deleteMany?: ResourcesOnModulesScalarWhereInput | ResourcesOnModulesScalarWhereInput[]
  }

  export type ModulesCreateNestedOneWithoutResourcesOnModulesInput = {
    create?: XOR<ModulesCreateWithoutResourcesOnModulesInput, ModulesUncheckedCreateWithoutResourcesOnModulesInput>
    connectOrCreate?: ModulesCreateOrConnectWithoutResourcesOnModulesInput
    connect?: ModulesWhereUniqueInput
  }

  export type ResourcesCreateNestedOneWithoutResourcesOnModulesInput = {
    create?: XOR<ResourcesCreateWithoutResourcesOnModulesInput, ResourcesUncheckedCreateWithoutResourcesOnModulesInput>
    connectOrCreate?: ResourcesCreateOrConnectWithoutResourcesOnModulesInput
    connect?: ResourcesWhereUniqueInput
  }

  export type ModulesUpdateOneRequiredWithoutResourcesOnModulesNestedInput = {
    create?: XOR<ModulesCreateWithoutResourcesOnModulesInput, ModulesUncheckedCreateWithoutResourcesOnModulesInput>
    connectOrCreate?: ModulesCreateOrConnectWithoutResourcesOnModulesInput
    upsert?: ModulesUpsertWithoutResourcesOnModulesInput
    connect?: ModulesWhereUniqueInput
    update?: XOR<XOR<ModulesUpdateToOneWithWhereWithoutResourcesOnModulesInput, ModulesUpdateWithoutResourcesOnModulesInput>, ModulesUncheckedUpdateWithoutResourcesOnModulesInput>
  }

  export type ResourcesUpdateOneRequiredWithoutResourcesOnModulesNestedInput = {
    create?: XOR<ResourcesCreateWithoutResourcesOnModulesInput, ResourcesUncheckedCreateWithoutResourcesOnModulesInput>
    connectOrCreate?: ResourcesCreateOrConnectWithoutResourcesOnModulesInput
    upsert?: ResourcesUpsertWithoutResourcesOnModulesInput
    connect?: ResourcesWhereUniqueInput
    update?: XOR<XOR<ResourcesUpdateToOneWithWhereWithoutResourcesOnModulesInput, ResourcesUpdateWithoutResourcesOnModulesInput>, ResourcesUncheckedUpdateWithoutResourcesOnModulesInput>
  }

  export type CategoriesCreateNestedOneWithoutUsersOnCategoriesInput = {
    create?: XOR<CategoriesCreateWithoutUsersOnCategoriesInput, CategoriesUncheckedCreateWithoutUsersOnCategoriesInput>
    connectOrCreate?: CategoriesCreateOrConnectWithoutUsersOnCategoriesInput
    connect?: CategoriesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUsersOnCategoriesInput = {
    create?: XOR<usersCreateWithoutUsersOnCategoriesInput, usersUncheckedCreateWithoutUsersOnCategoriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUsersOnCategoriesInput
    connect?: usersWhereUniqueInput
  }

  export type CategoriesUpdateOneRequiredWithoutUsersOnCategoriesNestedInput = {
    create?: XOR<CategoriesCreateWithoutUsersOnCategoriesInput, CategoriesUncheckedCreateWithoutUsersOnCategoriesInput>
    connectOrCreate?: CategoriesCreateOrConnectWithoutUsersOnCategoriesInput
    upsert?: CategoriesUpsertWithoutUsersOnCategoriesInput
    connect?: CategoriesWhereUniqueInput
    update?: XOR<XOR<CategoriesUpdateToOneWithWhereWithoutUsersOnCategoriesInput, CategoriesUpdateWithoutUsersOnCategoriesInput>, CategoriesUncheckedUpdateWithoutUsersOnCategoriesInput>
  }

  export type usersUpdateOneRequiredWithoutUsersOnCategoriesNestedInput = {
    create?: XOR<usersCreateWithoutUsersOnCategoriesInput, usersUncheckedCreateWithoutUsersOnCategoriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutUsersOnCategoriesInput
    upsert?: usersUpsertWithoutUsersOnCategoriesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUsersOnCategoriesInput, usersUpdateWithoutUsersOnCategoriesInput>, usersUncheckedUpdateWithoutUsersOnCategoriesInput>
  }

  export type usersCreateNestedOneWithoutSecurity_codeInput = {
    create?: XOR<usersCreateWithoutSecurity_codeInput, usersUncheckedCreateWithoutSecurity_codeInput>
    connectOrCreate?: usersCreateOrConnectWithoutSecurity_codeInput
    connect?: usersWhereUniqueInput
  }

  export type EnumStatusSecurityCodeFieldUpdateOperationsInput = {
    set?: $Enums.StatusSecurityCode
  }

  export type usersUpdateOneRequiredWithoutSecurity_codeNestedInput = {
    create?: XOR<usersCreateWithoutSecurity_codeInput, usersUncheckedCreateWithoutSecurity_codeInput>
    connectOrCreate?: usersCreateOrConnectWithoutSecurity_codeInput
    upsert?: usersUpsertWithoutSecurity_codeInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSecurity_codeInput, usersUpdateWithoutSecurity_codeInput>, usersUncheckedUpdateWithoutSecurity_codeInput>
  }

  export type usersCreateNestedOneWithoutToken_managementsInput = {
    create?: XOR<usersCreateWithoutToken_managementsInput, usersUncheckedCreateWithoutToken_managementsInput>
    connectOrCreate?: usersCreateOrConnectWithoutToken_managementsInput
    connect?: usersWhereUniqueInput
  }

  export type EnumStatusFieldUpdateOperationsInput = {
    set?: $Enums.Status
  }

  export type usersUpdateOneWithoutToken_managementsNestedInput = {
    create?: XOR<usersCreateWithoutToken_managementsInput, usersUncheckedCreateWithoutToken_managementsInput>
    connectOrCreate?: usersCreateOrConnectWithoutToken_managementsInput
    upsert?: usersUpsertWithoutToken_managementsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutToken_managementsInput, usersUpdateWithoutToken_managementsInput>, usersUncheckedUpdateWithoutToken_managementsInput>
  }

  export type usersCreateNestedOneWithoutUser_configurationInput = {
    create?: XOR<usersCreateWithoutUser_configurationInput, usersUncheckedCreateWithoutUser_configurationInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_configurationInput
    connect?: usersWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type usersUpdateOneRequiredWithoutUser_configurationNestedInput = {
    create?: XOR<usersCreateWithoutUser_configurationInput, usersUncheckedCreateWithoutUser_configurationInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_configurationInput
    upsert?: usersUpsertWithoutUser_configurationInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_configurationInput, usersUpdateWithoutUser_configurationInput>, usersUncheckedUpdateWithoutUser_configurationInput>
  }

  export type CategoriesCreateNestedManyWithoutUsersInput = {
    create?: XOR<CategoriesCreateWithoutUsersInput, CategoriesUncheckedCreateWithoutUsersInput> | CategoriesCreateWithoutUsersInput[] | CategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: CategoriesCreateOrConnectWithoutUsersInput | CategoriesCreateOrConnectWithoutUsersInput[]
    createMany?: CategoriesCreateManyUsersInputEnvelope
    connect?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
  }

  export type UsersOnCategoriesCreateNestedManyWithoutUsersInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutUsersInput, UsersOnCategoriesUncheckedCreateWithoutUsersInput> | UsersOnCategoriesCreateWithoutUsersInput[] | UsersOnCategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutUsersInput | UsersOnCategoriesCreateOrConnectWithoutUsersInput[]
    createMany?: UsersOnCategoriesCreateManyUsersInputEnvelope
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
  }

  export type security_codeCreateNestedManyWithoutUsersInput = {
    create?: XOR<security_codeCreateWithoutUsersInput, security_codeUncheckedCreateWithoutUsersInput> | security_codeCreateWithoutUsersInput[] | security_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: security_codeCreateOrConnectWithoutUsersInput | security_codeCreateOrConnectWithoutUsersInput[]
    createMany?: security_codeCreateManyUsersInputEnvelope
    connect?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
  }

  export type token_managementsCreateNestedManyWithoutUsersInput = {
    create?: XOR<token_managementsCreateWithoutUsersInput, token_managementsUncheckedCreateWithoutUsersInput> | token_managementsCreateWithoutUsersInput[] | token_managementsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: token_managementsCreateOrConnectWithoutUsersInput | token_managementsCreateOrConnectWithoutUsersInput[]
    createMany?: token_managementsCreateManyUsersInputEnvelope
    connect?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
  }

  export type user_configurationCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_configurationCreateWithoutUsersInput, user_configurationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_configurationCreateOrConnectWithoutUsersInput
    connect?: user_configurationWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutOther_usersInput = {
    create?: XOR<usersCreateWithoutOther_usersInput, usersUncheckedCreateWithoutOther_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOther_usersInput
    connect?: usersWhereUniqueInput
  }

  export type usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput> | usersCreateWithoutUsersInput[] | usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsersInput | usersCreateOrConnectWithoutUsersInput[]
    createMany?: usersCreateManyUsersInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type CategoriesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<CategoriesCreateWithoutUsersInput, CategoriesUncheckedCreateWithoutUsersInput> | CategoriesCreateWithoutUsersInput[] | CategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: CategoriesCreateOrConnectWithoutUsersInput | CategoriesCreateOrConnectWithoutUsersInput[]
    createMany?: CategoriesCreateManyUsersInputEnvelope
    connect?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
  }

  export type UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutUsersInput, UsersOnCategoriesUncheckedCreateWithoutUsersInput> | UsersOnCategoriesCreateWithoutUsersInput[] | UsersOnCategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutUsersInput | UsersOnCategoriesCreateOrConnectWithoutUsersInput[]
    createMany?: UsersOnCategoriesCreateManyUsersInputEnvelope
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
  }

  export type security_codeUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<security_codeCreateWithoutUsersInput, security_codeUncheckedCreateWithoutUsersInput> | security_codeCreateWithoutUsersInput[] | security_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: security_codeCreateOrConnectWithoutUsersInput | security_codeCreateOrConnectWithoutUsersInput[]
    createMany?: security_codeCreateManyUsersInputEnvelope
    connect?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
  }

  export type token_managementsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<token_managementsCreateWithoutUsersInput, token_managementsUncheckedCreateWithoutUsersInput> | token_managementsCreateWithoutUsersInput[] | token_managementsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: token_managementsCreateOrConnectWithoutUsersInput | token_managementsCreateOrConnectWithoutUsersInput[]
    createMany?: token_managementsCreateManyUsersInputEnvelope
    connect?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
  }

  export type user_configurationUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<user_configurationCreateWithoutUsersInput, user_configurationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_configurationCreateOrConnectWithoutUsersInput
    connect?: user_configurationWhereUniqueInput
  }

  export type usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput> | usersCreateWithoutUsersInput[] | usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsersInput | usersCreateOrConnectWithoutUsersInput[]
    createMany?: usersCreateManyUsersInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumTypeEmailConfirmFieldUpdateOperationsInput = {
    set?: $Enums.TypeEmailConfirm
  }

  export type CategoriesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<CategoriesCreateWithoutUsersInput, CategoriesUncheckedCreateWithoutUsersInput> | CategoriesCreateWithoutUsersInput[] | CategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: CategoriesCreateOrConnectWithoutUsersInput | CategoriesCreateOrConnectWithoutUsersInput[]
    upsert?: CategoriesUpsertWithWhereUniqueWithoutUsersInput | CategoriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: CategoriesCreateManyUsersInputEnvelope
    set?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    disconnect?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    delete?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    connect?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    update?: CategoriesUpdateWithWhereUniqueWithoutUsersInput | CategoriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: CategoriesUpdateManyWithWhereWithoutUsersInput | CategoriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: CategoriesScalarWhereInput | CategoriesScalarWhereInput[]
  }

  export type UsersOnCategoriesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutUsersInput, UsersOnCategoriesUncheckedCreateWithoutUsersInput> | UsersOnCategoriesCreateWithoutUsersInput[] | UsersOnCategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutUsersInput | UsersOnCategoriesCreateOrConnectWithoutUsersInput[]
    upsert?: UsersOnCategoriesUpsertWithWhereUniqueWithoutUsersInput | UsersOnCategoriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: UsersOnCategoriesCreateManyUsersInputEnvelope
    set?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    disconnect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    delete?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    update?: UsersOnCategoriesUpdateWithWhereUniqueWithoutUsersInput | UsersOnCategoriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: UsersOnCategoriesUpdateManyWithWhereWithoutUsersInput | UsersOnCategoriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: UsersOnCategoriesScalarWhereInput | UsersOnCategoriesScalarWhereInput[]
  }

  export type security_codeUpdateManyWithoutUsersNestedInput = {
    create?: XOR<security_codeCreateWithoutUsersInput, security_codeUncheckedCreateWithoutUsersInput> | security_codeCreateWithoutUsersInput[] | security_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: security_codeCreateOrConnectWithoutUsersInput | security_codeCreateOrConnectWithoutUsersInput[]
    upsert?: security_codeUpsertWithWhereUniqueWithoutUsersInput | security_codeUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: security_codeCreateManyUsersInputEnvelope
    set?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    disconnect?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    delete?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    connect?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    update?: security_codeUpdateWithWhereUniqueWithoutUsersInput | security_codeUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: security_codeUpdateManyWithWhereWithoutUsersInput | security_codeUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: security_codeScalarWhereInput | security_codeScalarWhereInput[]
  }

  export type token_managementsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<token_managementsCreateWithoutUsersInput, token_managementsUncheckedCreateWithoutUsersInput> | token_managementsCreateWithoutUsersInput[] | token_managementsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: token_managementsCreateOrConnectWithoutUsersInput | token_managementsCreateOrConnectWithoutUsersInput[]
    upsert?: token_managementsUpsertWithWhereUniqueWithoutUsersInput | token_managementsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: token_managementsCreateManyUsersInputEnvelope
    set?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    disconnect?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    delete?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    connect?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    update?: token_managementsUpdateWithWhereUniqueWithoutUsersInput | token_managementsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: token_managementsUpdateManyWithWhereWithoutUsersInput | token_managementsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: token_managementsScalarWhereInput | token_managementsScalarWhereInput[]
  }

  export type user_configurationUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_configurationCreateWithoutUsersInput, user_configurationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_configurationCreateOrConnectWithoutUsersInput
    upsert?: user_configurationUpsertWithoutUsersInput
    disconnect?: user_configurationWhereInput | boolean
    delete?: user_configurationWhereInput | boolean
    connect?: user_configurationWhereUniqueInput
    update?: XOR<XOR<user_configurationUpdateToOneWithWhereWithoutUsersInput, user_configurationUpdateWithoutUsersInput>, user_configurationUncheckedUpdateWithoutUsersInput>
  }

  export type usersUpdateOneWithoutOther_usersNestedInput = {
    create?: XOR<usersCreateWithoutOther_usersInput, usersUncheckedCreateWithoutOther_usersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOther_usersInput
    upsert?: usersUpsertWithoutOther_usersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOther_usersInput, usersUpdateWithoutOther_usersInput>, usersUncheckedUpdateWithoutOther_usersInput>
  }

  export type usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput> | usersCreateWithoutUsersInput[] | usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsersInput | usersCreateOrConnectWithoutUsersInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutUsersInput | usersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: usersCreateManyUsersInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutUsersInput | usersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: usersUpdateManyWithWhereWithoutUsersInput | usersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type CategoriesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<CategoriesCreateWithoutUsersInput, CategoriesUncheckedCreateWithoutUsersInput> | CategoriesCreateWithoutUsersInput[] | CategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: CategoriesCreateOrConnectWithoutUsersInput | CategoriesCreateOrConnectWithoutUsersInput[]
    upsert?: CategoriesUpsertWithWhereUniqueWithoutUsersInput | CategoriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: CategoriesCreateManyUsersInputEnvelope
    set?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    disconnect?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    delete?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    connect?: CategoriesWhereUniqueInput | CategoriesWhereUniqueInput[]
    update?: CategoriesUpdateWithWhereUniqueWithoutUsersInput | CategoriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: CategoriesUpdateManyWithWhereWithoutUsersInput | CategoriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: CategoriesScalarWhereInput | CategoriesScalarWhereInput[]
  }

  export type UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<UsersOnCategoriesCreateWithoutUsersInput, UsersOnCategoriesUncheckedCreateWithoutUsersInput> | UsersOnCategoriesCreateWithoutUsersInput[] | UsersOnCategoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: UsersOnCategoriesCreateOrConnectWithoutUsersInput | UsersOnCategoriesCreateOrConnectWithoutUsersInput[]
    upsert?: UsersOnCategoriesUpsertWithWhereUniqueWithoutUsersInput | UsersOnCategoriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: UsersOnCategoriesCreateManyUsersInputEnvelope
    set?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    disconnect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    delete?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    connect?: UsersOnCategoriesWhereUniqueInput | UsersOnCategoriesWhereUniqueInput[]
    update?: UsersOnCategoriesUpdateWithWhereUniqueWithoutUsersInput | UsersOnCategoriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: UsersOnCategoriesUpdateManyWithWhereWithoutUsersInput | UsersOnCategoriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: UsersOnCategoriesScalarWhereInput | UsersOnCategoriesScalarWhereInput[]
  }

  export type security_codeUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<security_codeCreateWithoutUsersInput, security_codeUncheckedCreateWithoutUsersInput> | security_codeCreateWithoutUsersInput[] | security_codeUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: security_codeCreateOrConnectWithoutUsersInput | security_codeCreateOrConnectWithoutUsersInput[]
    upsert?: security_codeUpsertWithWhereUniqueWithoutUsersInput | security_codeUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: security_codeCreateManyUsersInputEnvelope
    set?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    disconnect?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    delete?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    connect?: security_codeWhereUniqueInput | security_codeWhereUniqueInput[]
    update?: security_codeUpdateWithWhereUniqueWithoutUsersInput | security_codeUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: security_codeUpdateManyWithWhereWithoutUsersInput | security_codeUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: security_codeScalarWhereInput | security_codeScalarWhereInput[]
  }

  export type token_managementsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<token_managementsCreateWithoutUsersInput, token_managementsUncheckedCreateWithoutUsersInput> | token_managementsCreateWithoutUsersInput[] | token_managementsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: token_managementsCreateOrConnectWithoutUsersInput | token_managementsCreateOrConnectWithoutUsersInput[]
    upsert?: token_managementsUpsertWithWhereUniqueWithoutUsersInput | token_managementsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: token_managementsCreateManyUsersInputEnvelope
    set?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    disconnect?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    delete?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    connect?: token_managementsWhereUniqueInput | token_managementsWhereUniqueInput[]
    update?: token_managementsUpdateWithWhereUniqueWithoutUsersInput | token_managementsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: token_managementsUpdateManyWithWhereWithoutUsersInput | token_managementsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: token_managementsScalarWhereInput | token_managementsScalarWhereInput[]
  }

  export type user_configurationUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<user_configurationCreateWithoutUsersInput, user_configurationUncheckedCreateWithoutUsersInput>
    connectOrCreate?: user_configurationCreateOrConnectWithoutUsersInput
    upsert?: user_configurationUpsertWithoutUsersInput
    disconnect?: user_configurationWhereInput | boolean
    delete?: user_configurationWhereInput | boolean
    connect?: user_configurationWhereUniqueInput
    update?: XOR<XOR<user_configurationUpdateToOneWithWhereWithoutUsersInput, user_configurationUpdateWithoutUsersInput>, user_configurationUncheckedUpdateWithoutUsersInput>
  }

  export type usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput> | usersCreateWithoutUsersInput[] | usersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: usersCreateOrConnectWithoutUsersInput | usersCreateOrConnectWithoutUsersInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutUsersInput | usersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: usersCreateManyUsersInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutUsersInput | usersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: usersUpdateManyWithWhereWithoutUsersInput | usersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumLibrariesFilter<$PrismaModel = never> = {
    equals?: $Enums.Libraries | EnumLibrariesFieldRefInput<$PrismaModel>
    in?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    notIn?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    not?: NestedEnumLibrariesFilter<$PrismaModel> | $Enums.Libraries
  }

  export type NestedEnumLibrariesWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Libraries | EnumLibrariesFieldRefInput<$PrismaModel>
    in?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    notIn?: $Enums.Libraries[] | ListEnumLibrariesFieldRefInput<$PrismaModel>
    not?: NestedEnumLibrariesWithAggregatesFilter<$PrismaModel> | $Enums.Libraries
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLibrariesFilter<$PrismaModel>
    _max?: NestedEnumLibrariesFilter<$PrismaModel>
  }

  export type NestedEnumStatusSecurityCodeFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusSecurityCode | EnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    in?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusSecurityCodeFilter<$PrismaModel> | $Enums.StatusSecurityCode
  }

  export type NestedEnumStatusSecurityCodeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusSecurityCode | EnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    in?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusSecurityCode[] | ListEnumStatusSecurityCodeFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusSecurityCodeWithAggregatesFilter<$PrismaModel> | $Enums.StatusSecurityCode
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusSecurityCodeFilter<$PrismaModel>
    _max?: NestedEnumStatusSecurityCodeFilter<$PrismaModel>
  }

  export type NestedEnumStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusFilter<$PrismaModel> | $Enums.Status
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Status | EnumStatusFieldRefInput<$PrismaModel>
    in?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.Status[] | ListEnumStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusWithAggregatesFilter<$PrismaModel> | $Enums.Status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusFilter<$PrismaModel>
    _max?: NestedEnumStatusFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumTypeEmailConfirmFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeEmailConfirm | EnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    in?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    notIn?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    not?: NestedEnumTypeEmailConfirmFilter<$PrismaModel> | $Enums.TypeEmailConfirm
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumTypeEmailConfirmWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TypeEmailConfirm | EnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    in?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    notIn?: $Enums.TypeEmailConfirm[] | ListEnumTypeEmailConfirmFieldRefInput<$PrismaModel>
    not?: NestedEnumTypeEmailConfirmWithAggregatesFilter<$PrismaModel> | $Enums.TypeEmailConfirm
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTypeEmailConfirmFilter<$PrismaModel>
    _max?: NestedEnumTypeEmailConfirmFilter<$PrismaModel>
  }

  export type usersCreateWithoutCategoriesInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCategoriesInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCategoriesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
  }

  export type CategoriesOnModulesCreateWithoutCategoriesInput = {
    Modules: ModulesCreateNestedOneWithoutCategoriesOnModulesInput
  }

  export type CategoriesOnModulesUncheckedCreateWithoutCategoriesInput = {
    id?: number
    moduleId: number
  }

  export type CategoriesOnModulesCreateOrConnectWithoutCategoriesInput = {
    where: CategoriesOnModulesWhereUniqueInput
    create: XOR<CategoriesOnModulesCreateWithoutCategoriesInput, CategoriesOnModulesUncheckedCreateWithoutCategoriesInput>
  }

  export type CategoriesOnModulesCreateManyCategoriesInputEnvelope = {
    data: CategoriesOnModulesCreateManyCategoriesInput | CategoriesOnModulesCreateManyCategoriesInput[]
    skipDuplicates?: boolean
  }

  export type UsersOnCategoriesCreateWithoutCategoriesInput = {
    created_at?: Date | string
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutUsersOnCategoriesInput
  }

  export type UsersOnCategoriesUncheckedCreateWithoutCategoriesInput = {
    id?: number
    userId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UsersOnCategoriesCreateOrConnectWithoutCategoriesInput = {
    where: UsersOnCategoriesWhereUniqueInput
    create: XOR<UsersOnCategoriesCreateWithoutCategoriesInput, UsersOnCategoriesUncheckedCreateWithoutCategoriesInput>
  }

  export type UsersOnCategoriesCreateManyCategoriesInputEnvelope = {
    data: UsersOnCategoriesCreateManyCategoriesInput | UsersOnCategoriesCreateManyCategoriesInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutCategoriesInput = {
    update: XOR<usersUpdateWithoutCategoriesInput, usersUncheckedUpdateWithoutCategoriesInput>
    create: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCategoriesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCategoriesInput, usersUncheckedUpdateWithoutCategoriesInput>
  }

  export type usersUpdateWithoutCategoriesInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type CategoriesOnModulesUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: CategoriesOnModulesWhereUniqueInput
    update: XOR<CategoriesOnModulesUpdateWithoutCategoriesInput, CategoriesOnModulesUncheckedUpdateWithoutCategoriesInput>
    create: XOR<CategoriesOnModulesCreateWithoutCategoriesInput, CategoriesOnModulesUncheckedCreateWithoutCategoriesInput>
  }

  export type CategoriesOnModulesUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: CategoriesOnModulesWhereUniqueInput
    data: XOR<CategoriesOnModulesUpdateWithoutCategoriesInput, CategoriesOnModulesUncheckedUpdateWithoutCategoriesInput>
  }

  export type CategoriesOnModulesUpdateManyWithWhereWithoutCategoriesInput = {
    where: CategoriesOnModulesScalarWhereInput
    data: XOR<CategoriesOnModulesUpdateManyMutationInput, CategoriesOnModulesUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type CategoriesOnModulesScalarWhereInput = {
    AND?: CategoriesOnModulesScalarWhereInput | CategoriesOnModulesScalarWhereInput[]
    OR?: CategoriesOnModulesScalarWhereInput[]
    NOT?: CategoriesOnModulesScalarWhereInput | CategoriesOnModulesScalarWhereInput[]
    id?: IntFilter<"CategoriesOnModules"> | number
    categoryId?: IntFilter<"CategoriesOnModules"> | number
    moduleId?: IntFilter<"CategoriesOnModules"> | number
  }

  export type UsersOnCategoriesUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: UsersOnCategoriesWhereUniqueInput
    update: XOR<UsersOnCategoriesUpdateWithoutCategoriesInput, UsersOnCategoriesUncheckedUpdateWithoutCategoriesInput>
    create: XOR<UsersOnCategoriesCreateWithoutCategoriesInput, UsersOnCategoriesUncheckedCreateWithoutCategoriesInput>
  }

  export type UsersOnCategoriesUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: UsersOnCategoriesWhereUniqueInput
    data: XOR<UsersOnCategoriesUpdateWithoutCategoriesInput, UsersOnCategoriesUncheckedUpdateWithoutCategoriesInput>
  }

  export type UsersOnCategoriesUpdateManyWithWhereWithoutCategoriesInput = {
    where: UsersOnCategoriesScalarWhereInput
    data: XOR<UsersOnCategoriesUpdateManyMutationInput, UsersOnCategoriesUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type UsersOnCategoriesScalarWhereInput = {
    AND?: UsersOnCategoriesScalarWhereInput | UsersOnCategoriesScalarWhereInput[]
    OR?: UsersOnCategoriesScalarWhereInput[]
    NOT?: UsersOnCategoriesScalarWhereInput | UsersOnCategoriesScalarWhereInput[]
    id?: IntFilter<"UsersOnCategories"> | number
    userId?: IntFilter<"UsersOnCategories"> | number
    categoryId?: IntFilter<"UsersOnCategories"> | number
    created_at?: DateTimeFilter<"UsersOnCategories"> | Date | string
    updated_at?: DateTimeFilter<"UsersOnCategories"> | Date | string
  }

  export type CategoriesCreateWithoutCategoriesOnModulesInput = {
    name: string
    description?: string | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedOneWithoutCategoriesInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesUncheckedCreateWithoutCategoriesOnModulesInput = {
    id?: number
    name: string
    description?: string | null
    created_id?: number | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesCreateOrConnectWithoutCategoriesOnModulesInput = {
    where: CategoriesWhereUniqueInput
    create: XOR<CategoriesCreateWithoutCategoriesOnModulesInput, CategoriesUncheckedCreateWithoutCategoriesOnModulesInput>
  }

  export type ModulesCreateWithoutCategoriesOnModulesInput = {
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
    ResourcesOnModules?: ResourcesOnModulesCreateNestedManyWithoutModulesInput
  }

  export type ModulesUncheckedCreateWithoutCategoriesOnModulesInput = {
    id?: number
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
    ResourcesOnModules?: ResourcesOnModulesUncheckedCreateNestedManyWithoutModulesInput
  }

  export type ModulesCreateOrConnectWithoutCategoriesOnModulesInput = {
    where: ModulesWhereUniqueInput
    create: XOR<ModulesCreateWithoutCategoriesOnModulesInput, ModulesUncheckedCreateWithoutCategoriesOnModulesInput>
  }

  export type CategoriesUpsertWithoutCategoriesOnModulesInput = {
    update: XOR<CategoriesUpdateWithoutCategoriesOnModulesInput, CategoriesUncheckedUpdateWithoutCategoriesOnModulesInput>
    create: XOR<CategoriesCreateWithoutCategoriesOnModulesInput, CategoriesUncheckedCreateWithoutCategoriesOnModulesInput>
    where?: CategoriesWhereInput
  }

  export type CategoriesUpdateToOneWithWhereWithoutCategoriesOnModulesInput = {
    where?: CategoriesWhereInput
    data: XOR<CategoriesUpdateWithoutCategoriesOnModulesInput, CategoriesUncheckedUpdateWithoutCategoriesOnModulesInput>
  }

  export type CategoriesUpdateWithoutCategoriesOnModulesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutCategoriesNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoriesUncheckedUpdateWithoutCategoriesOnModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_id?: NullableIntFieldUpdateOperationsInput | number | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type ModulesUpsertWithoutCategoriesOnModulesInput = {
    update: XOR<ModulesUpdateWithoutCategoriesOnModulesInput, ModulesUncheckedUpdateWithoutCategoriesOnModulesInput>
    create: XOR<ModulesCreateWithoutCategoriesOnModulesInput, ModulesUncheckedCreateWithoutCategoriesOnModulesInput>
    where?: ModulesWhereInput
  }

  export type ModulesUpdateToOneWithWhereWithoutCategoriesOnModulesInput = {
    where?: ModulesWhereInput
    data: XOR<ModulesUpdateWithoutCategoriesOnModulesInput, ModulesUncheckedUpdateWithoutCategoriesOnModulesInput>
  }

  export type ModulesUpdateWithoutCategoriesOnModulesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
    ResourcesOnModules?: ResourcesOnModulesUpdateManyWithoutModulesNestedInput
  }

  export type ModulesUncheckedUpdateWithoutCategoriesOnModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
    ResourcesOnModules?: ResourcesOnModulesUncheckedUpdateManyWithoutModulesNestedInput
  }

  export type CategoriesOnModulesCreateWithoutModulesInput = {
    Categories: CategoriesCreateNestedOneWithoutCategoriesOnModulesInput
  }

  export type CategoriesOnModulesUncheckedCreateWithoutModulesInput = {
    id?: number
    categoryId: number
  }

  export type CategoriesOnModulesCreateOrConnectWithoutModulesInput = {
    where: CategoriesOnModulesWhereUniqueInput
    create: XOR<CategoriesOnModulesCreateWithoutModulesInput, CategoriesOnModulesUncheckedCreateWithoutModulesInput>
  }

  export type CategoriesOnModulesCreateManyModulesInputEnvelope = {
    data: CategoriesOnModulesCreateManyModulesInput | CategoriesOnModulesCreateManyModulesInput[]
    skipDuplicates?: boolean
  }

  export type ResourcesOnModulesCreateWithoutModulesInput = {
    Resources: ResourcesCreateNestedOneWithoutResourcesOnModulesInput
  }

  export type ResourcesOnModulesUncheckedCreateWithoutModulesInput = {
    id?: number
    resourceId: number
  }

  export type ResourcesOnModulesCreateOrConnectWithoutModulesInput = {
    where: ResourcesOnModulesWhereUniqueInput
    create: XOR<ResourcesOnModulesCreateWithoutModulesInput, ResourcesOnModulesUncheckedCreateWithoutModulesInput>
  }

  export type ResourcesOnModulesCreateManyModulesInputEnvelope = {
    data: ResourcesOnModulesCreateManyModulesInput | ResourcesOnModulesCreateManyModulesInput[]
    skipDuplicates?: boolean
  }

  export type CategoriesOnModulesUpsertWithWhereUniqueWithoutModulesInput = {
    where: CategoriesOnModulesWhereUniqueInput
    update: XOR<CategoriesOnModulesUpdateWithoutModulesInput, CategoriesOnModulesUncheckedUpdateWithoutModulesInput>
    create: XOR<CategoriesOnModulesCreateWithoutModulesInput, CategoriesOnModulesUncheckedCreateWithoutModulesInput>
  }

  export type CategoriesOnModulesUpdateWithWhereUniqueWithoutModulesInput = {
    where: CategoriesOnModulesWhereUniqueInput
    data: XOR<CategoriesOnModulesUpdateWithoutModulesInput, CategoriesOnModulesUncheckedUpdateWithoutModulesInput>
  }

  export type CategoriesOnModulesUpdateManyWithWhereWithoutModulesInput = {
    where: CategoriesOnModulesScalarWhereInput
    data: XOR<CategoriesOnModulesUpdateManyMutationInput, CategoriesOnModulesUncheckedUpdateManyWithoutModulesInput>
  }

  export type ResourcesOnModulesUpsertWithWhereUniqueWithoutModulesInput = {
    where: ResourcesOnModulesWhereUniqueInput
    update: XOR<ResourcesOnModulesUpdateWithoutModulesInput, ResourcesOnModulesUncheckedUpdateWithoutModulesInput>
    create: XOR<ResourcesOnModulesCreateWithoutModulesInput, ResourcesOnModulesUncheckedCreateWithoutModulesInput>
  }

  export type ResourcesOnModulesUpdateWithWhereUniqueWithoutModulesInput = {
    where: ResourcesOnModulesWhereUniqueInput
    data: XOR<ResourcesOnModulesUpdateWithoutModulesInput, ResourcesOnModulesUncheckedUpdateWithoutModulesInput>
  }

  export type ResourcesOnModulesUpdateManyWithWhereWithoutModulesInput = {
    where: ResourcesOnModulesScalarWhereInput
    data: XOR<ResourcesOnModulesUpdateManyMutationInput, ResourcesOnModulesUncheckedUpdateManyWithoutModulesInput>
  }

  export type ResourcesOnModulesScalarWhereInput = {
    AND?: ResourcesOnModulesScalarWhereInput | ResourcesOnModulesScalarWhereInput[]
    OR?: ResourcesOnModulesScalarWhereInput[]
    NOT?: ResourcesOnModulesScalarWhereInput | ResourcesOnModulesScalarWhereInput[]
    id?: IntFilter<"ResourcesOnModules"> | number
    moduleId?: IntFilter<"ResourcesOnModules"> | number
    resourceId?: IntFilter<"ResourcesOnModules"> | number
  }

  export type ResourcesOnModulesCreateWithoutResourcesInput = {
    Modules: ModulesCreateNestedOneWithoutResourcesOnModulesInput
  }

  export type ResourcesOnModulesUncheckedCreateWithoutResourcesInput = {
    id?: number
    moduleId: number
  }

  export type ResourcesOnModulesCreateOrConnectWithoutResourcesInput = {
    where: ResourcesOnModulesWhereUniqueInput
    create: XOR<ResourcesOnModulesCreateWithoutResourcesInput, ResourcesOnModulesUncheckedCreateWithoutResourcesInput>
  }

  export type ResourcesOnModulesCreateManyResourcesInputEnvelope = {
    data: ResourcesOnModulesCreateManyResourcesInput | ResourcesOnModulesCreateManyResourcesInput[]
    skipDuplicates?: boolean
  }

  export type ResourcesOnModulesUpsertWithWhereUniqueWithoutResourcesInput = {
    where: ResourcesOnModulesWhereUniqueInput
    update: XOR<ResourcesOnModulesUpdateWithoutResourcesInput, ResourcesOnModulesUncheckedUpdateWithoutResourcesInput>
    create: XOR<ResourcesOnModulesCreateWithoutResourcesInput, ResourcesOnModulesUncheckedCreateWithoutResourcesInput>
  }

  export type ResourcesOnModulesUpdateWithWhereUniqueWithoutResourcesInput = {
    where: ResourcesOnModulesWhereUniqueInput
    data: XOR<ResourcesOnModulesUpdateWithoutResourcesInput, ResourcesOnModulesUncheckedUpdateWithoutResourcesInput>
  }

  export type ResourcesOnModulesUpdateManyWithWhereWithoutResourcesInput = {
    where: ResourcesOnModulesScalarWhereInput
    data: XOR<ResourcesOnModulesUpdateManyMutationInput, ResourcesOnModulesUncheckedUpdateManyWithoutResourcesInput>
  }

  export type ModulesCreateWithoutResourcesOnModulesInput = {
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
    CategoriesOnModules?: CategoriesOnModulesCreateNestedManyWithoutModulesInput
  }

  export type ModulesUncheckedCreateWithoutResourcesOnModulesInput = {
    id?: number
    name: string
    description: string
    value: number
    created_at?: Date | string
    updated_at?: Date | string
    path_make_function?: string
    CategoriesOnModules?: CategoriesOnModulesUncheckedCreateNestedManyWithoutModulesInput
  }

  export type ModulesCreateOrConnectWithoutResourcesOnModulesInput = {
    where: ModulesWhereUniqueInput
    create: XOR<ModulesCreateWithoutResourcesOnModulesInput, ModulesUncheckedCreateWithoutResourcesOnModulesInput>
  }

  export type ResourcesCreateWithoutResourcesOnModulesInput = {
    name: string
    path: string
    description: string
    value: number
    library: $Enums.Libraries
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ResourcesUncheckedCreateWithoutResourcesOnModulesInput = {
    id?: number
    name: string
    path: string
    description: string
    value: number
    library: $Enums.Libraries
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ResourcesCreateOrConnectWithoutResourcesOnModulesInput = {
    where: ResourcesWhereUniqueInput
    create: XOR<ResourcesCreateWithoutResourcesOnModulesInput, ResourcesUncheckedCreateWithoutResourcesOnModulesInput>
  }

  export type ModulesUpsertWithoutResourcesOnModulesInput = {
    update: XOR<ModulesUpdateWithoutResourcesOnModulesInput, ModulesUncheckedUpdateWithoutResourcesOnModulesInput>
    create: XOR<ModulesCreateWithoutResourcesOnModulesInput, ModulesUncheckedCreateWithoutResourcesOnModulesInput>
    where?: ModulesWhereInput
  }

  export type ModulesUpdateToOneWithWhereWithoutResourcesOnModulesInput = {
    where?: ModulesWhereInput
    data: XOR<ModulesUpdateWithoutResourcesOnModulesInput, ModulesUncheckedUpdateWithoutResourcesOnModulesInput>
  }

  export type ModulesUpdateWithoutResourcesOnModulesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
    CategoriesOnModules?: CategoriesOnModulesUpdateManyWithoutModulesNestedInput
  }

  export type ModulesUncheckedUpdateWithoutResourcesOnModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    path_make_function?: StringFieldUpdateOperationsInput | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedUpdateManyWithoutModulesNestedInput
  }

  export type ResourcesUpsertWithoutResourcesOnModulesInput = {
    update: XOR<ResourcesUpdateWithoutResourcesOnModulesInput, ResourcesUncheckedUpdateWithoutResourcesOnModulesInput>
    create: XOR<ResourcesCreateWithoutResourcesOnModulesInput, ResourcesUncheckedCreateWithoutResourcesOnModulesInput>
    where?: ResourcesWhereInput
  }

  export type ResourcesUpdateToOneWithWhereWithoutResourcesOnModulesInput = {
    where?: ResourcesWhereInput
    data: XOR<ResourcesUpdateWithoutResourcesOnModulesInput, ResourcesUncheckedUpdateWithoutResourcesOnModulesInput>
  }

  export type ResourcesUpdateWithoutResourcesOnModulesInput = {
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    library?: EnumLibrariesFieldUpdateOperationsInput | $Enums.Libraries
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ResourcesUncheckedUpdateWithoutResourcesOnModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    value?: FloatFieldUpdateOperationsInput | number
    library?: EnumLibrariesFieldUpdateOperationsInput | $Enums.Libraries
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriesCreateWithoutUsersOnCategoriesInput = {
    name: string
    description?: string | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedOneWithoutCategoriesInput
    CategoriesOnModules?: CategoriesOnModulesCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesUncheckedCreateWithoutUsersOnCategoriesInput = {
    id?: number
    name: string
    description?: string | null
    created_id?: number | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesCreateOrConnectWithoutUsersOnCategoriesInput = {
    where: CategoriesWhereUniqueInput
    create: XOR<CategoriesCreateWithoutUsersOnCategoriesInput, CategoriesUncheckedCreateWithoutUsersOnCategoriesInput>
  }

  export type usersCreateWithoutUsersOnCategoriesInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUsersOnCategoriesInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUsersOnCategoriesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUsersOnCategoriesInput, usersUncheckedCreateWithoutUsersOnCategoriesInput>
  }

  export type CategoriesUpsertWithoutUsersOnCategoriesInput = {
    update: XOR<CategoriesUpdateWithoutUsersOnCategoriesInput, CategoriesUncheckedUpdateWithoutUsersOnCategoriesInput>
    create: XOR<CategoriesCreateWithoutUsersOnCategoriesInput, CategoriesUncheckedCreateWithoutUsersOnCategoriesInput>
    where?: CategoriesWhereInput
  }

  export type CategoriesUpdateToOneWithWhereWithoutUsersOnCategoriesInput = {
    where?: CategoriesWhereInput
    data: XOR<CategoriesUpdateWithoutUsersOnCategoriesInput, CategoriesUncheckedUpdateWithoutUsersOnCategoriesInput>
  }

  export type CategoriesUpdateWithoutUsersOnCategoriesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneWithoutCategoriesNestedInput
    CategoriesOnModules?: CategoriesOnModulesUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoriesUncheckedUpdateWithoutUsersOnCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_id?: NullableIntFieldUpdateOperationsInput | number | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type usersUpsertWithoutUsersOnCategoriesInput = {
    update: XOR<usersUpdateWithoutUsersOnCategoriesInput, usersUncheckedUpdateWithoutUsersOnCategoriesInput>
    create: XOR<usersCreateWithoutUsersOnCategoriesInput, usersUncheckedCreateWithoutUsersOnCategoriesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUsersOnCategoriesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUsersOnCategoriesInput, usersUncheckedUpdateWithoutUsersOnCategoriesInput>
  }

  export type usersUpdateWithoutUsersOnCategoriesInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUsersOnCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutSecurity_codeInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSecurity_codeInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSecurity_codeInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSecurity_codeInput, usersUncheckedCreateWithoutSecurity_codeInput>
  }

  export type usersUpsertWithoutSecurity_codeInput = {
    update: XOR<usersUpdateWithoutSecurity_codeInput, usersUncheckedUpdateWithoutSecurity_codeInput>
    create: XOR<usersCreateWithoutSecurity_codeInput, usersUncheckedCreateWithoutSecurity_codeInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSecurity_codeInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSecurity_codeInput, usersUncheckedUpdateWithoutSecurity_codeInput>
  }

  export type usersUpdateWithoutSecurity_codeInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSecurity_codeInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutToken_managementsInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutToken_managementsInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutToken_managementsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutToken_managementsInput, usersUncheckedCreateWithoutToken_managementsInput>
  }

  export type usersUpsertWithoutToken_managementsInput = {
    update: XOR<usersUpdateWithoutToken_managementsInput, usersUncheckedUpdateWithoutToken_managementsInput>
    create: XOR<usersCreateWithoutToken_managementsInput, usersUncheckedCreateWithoutToken_managementsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutToken_managementsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutToken_managementsInput, usersUncheckedUpdateWithoutToken_managementsInput>
  }

  export type usersUpdateWithoutToken_managementsInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutToken_managementsInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutUser_configurationInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_configurationInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_configurationInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_configurationInput, usersUncheckedCreateWithoutUser_configurationInput>
  }

  export type usersUpsertWithoutUser_configurationInput = {
    update: XOR<usersUpdateWithoutUser_configurationInput, usersUncheckedUpdateWithoutUser_configurationInput>
    create: XOR<usersCreateWithoutUser_configurationInput, usersUncheckedCreateWithoutUser_configurationInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_configurationInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_configurationInput, usersUncheckedUpdateWithoutUser_configurationInput>
  }

  export type usersUpdateWithoutUser_configurationInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_configurationInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type CategoriesCreateWithoutUsersInput = {
    name: string
    description?: string | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    CategoriesOnModules?: CategoriesOnModulesCreateNestedManyWithoutCategoriesInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    description?: string | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedCreateNestedManyWithoutCategoriesInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type CategoriesCreateOrConnectWithoutUsersInput = {
    where: CategoriesWhereUniqueInput
    create: XOR<CategoriesCreateWithoutUsersInput, CategoriesUncheckedCreateWithoutUsersInput>
  }

  export type CategoriesCreateManyUsersInputEnvelope = {
    data: CategoriesCreateManyUsersInput | CategoriesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type UsersOnCategoriesCreateWithoutUsersInput = {
    created_at?: Date | string
    updated_at?: Date | string
    Categories: CategoriesCreateNestedOneWithoutUsersOnCategoriesInput
  }

  export type UsersOnCategoriesUncheckedCreateWithoutUsersInput = {
    id?: number
    categoryId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UsersOnCategoriesCreateOrConnectWithoutUsersInput = {
    where: UsersOnCategoriesWhereUniqueInput
    create: XOR<UsersOnCategoriesCreateWithoutUsersInput, UsersOnCategoriesUncheckedCreateWithoutUsersInput>
  }

  export type UsersOnCategoriesCreateManyUsersInputEnvelope = {
    data: UsersOnCategoriesCreateManyUsersInput | UsersOnCategoriesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type security_codeCreateWithoutUsersInput = {
    code: string
    date_expiration: Date | string
    status?: $Enums.StatusSecurityCode
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type security_codeUncheckedCreateWithoutUsersInput = {
    id?: number
    code: string
    date_expiration: Date | string
    status?: $Enums.StatusSecurityCode
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type security_codeCreateOrConnectWithoutUsersInput = {
    where: security_codeWhereUniqueInput
    create: XOR<security_codeCreateWithoutUsersInput, security_codeUncheckedCreateWithoutUsersInput>
  }

  export type security_codeCreateManyUsersInputEnvelope = {
    data: security_codeCreateManyUsersInput | security_codeCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type token_managementsCreateWithoutUsersInput = {
    origin: string
    token: string
    expiration: Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.Status
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_managementsUncheckedCreateWithoutUsersInput = {
    id?: number
    origin: string
    token: string
    expiration: Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.Status
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_managementsCreateOrConnectWithoutUsersInput = {
    where: token_managementsWhereUniqueInput
    create: XOR<token_managementsCreateWithoutUsersInput, token_managementsUncheckedCreateWithoutUsersInput>
  }

  export type token_managementsCreateManyUsersInputEnvelope = {
    data: token_managementsCreateManyUsersInput | token_managementsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_configurationCreateWithoutUsersInput = {
    pix_encoded_pixcopypaste?: string | null
    pix_qrcode?: string | null
    pix_transaction_id?: string | null
    pix_key?: string | null
    pix_validation_code?: string | null
    twofactor_code?: string | null
    fee_service_fixed?: Decimal | DecimalJsLike | number | string
    fee_service_percent?: Decimal | DecimalJsLike | number | string
    fee_pix?: Decimal | DecimalJsLike | number | string
    baas_key?: string | null
    baas_secret?: string | null
    baas_name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_configurationUncheckedCreateWithoutUsersInput = {
    id?: number
    pix_encoded_pixcopypaste?: string | null
    pix_qrcode?: string | null
    pix_transaction_id?: string | null
    pix_key?: string | null
    pix_validation_code?: string | null
    twofactor_code?: string | null
    fee_service_fixed?: Decimal | DecimalJsLike | number | string
    fee_service_percent?: Decimal | DecimalJsLike | number | string
    fee_pix?: Decimal | DecimalJsLike | number | string
    baas_key?: string | null
    baas_secret?: string | null
    baas_name?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type user_configurationCreateOrConnectWithoutUsersInput = {
    where: user_configurationWhereUniqueInput
    create: XOR<user_configurationCreateWithoutUsersInput, user_configurationUncheckedCreateWithoutUsersInput>
  }

  export type usersCreateWithoutOther_usersInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    users?: usersCreateNestedOneWithoutOther_usersInput
  }

  export type usersUncheckedCreateWithoutOther_usersInput = {
    id?: number
    id_user?: number | null
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOther_usersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOther_usersInput, usersUncheckedCreateWithoutOther_usersInput>
  }

  export type usersCreateWithoutUsersInput = {
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesCreateNestedManyWithoutUsersInput
    security_code?: security_codeCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationCreateNestedOneWithoutUsersInput
    other_users?: usersCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUsersInput = {
    id?: number
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
    Categories?: CategoriesUncheckedCreateNestedManyWithoutUsersInput
    UsersOnCategories?: UsersOnCategoriesUncheckedCreateNestedManyWithoutUsersInput
    security_code?: security_codeUncheckedCreateNestedManyWithoutUsersInput
    token_managements?: token_managementsUncheckedCreateNestedManyWithoutUsersInput
    user_configuration?: user_configurationUncheckedCreateNestedOneWithoutUsersInput
    other_users?: usersUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUsersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput>
  }

  export type usersCreateManyUsersInputEnvelope = {
    data: usersCreateManyUsersInput | usersCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type CategoriesUpsertWithWhereUniqueWithoutUsersInput = {
    where: CategoriesWhereUniqueInput
    update: XOR<CategoriesUpdateWithoutUsersInput, CategoriesUncheckedUpdateWithoutUsersInput>
    create: XOR<CategoriesCreateWithoutUsersInput, CategoriesUncheckedCreateWithoutUsersInput>
  }

  export type CategoriesUpdateWithWhereUniqueWithoutUsersInput = {
    where: CategoriesWhereUniqueInput
    data: XOR<CategoriesUpdateWithoutUsersInput, CategoriesUncheckedUpdateWithoutUsersInput>
  }

  export type CategoriesUpdateManyWithWhereWithoutUsersInput = {
    where: CategoriesScalarWhereInput
    data: XOR<CategoriesUpdateManyMutationInput, CategoriesUncheckedUpdateManyWithoutUsersInput>
  }

  export type CategoriesScalarWhereInput = {
    AND?: CategoriesScalarWhereInput | CategoriesScalarWhereInput[]
    OR?: CategoriesScalarWhereInput[]
    NOT?: CategoriesScalarWhereInput | CategoriesScalarWhereInput[]
    id?: IntFilter<"Categories"> | number
    name?: StringFilter<"Categories"> | string
    description?: StringNullableFilter<"Categories"> | string | null
    created_id?: IntNullableFilter<"Categories"> | number | null
    custom_value?: FloatNullableFilter<"Categories"> | number | null
    created_at?: DateTimeFilter<"Categories"> | Date | string
    updated_at?: DateTimeFilter<"Categories"> | Date | string
  }

  export type UsersOnCategoriesUpsertWithWhereUniqueWithoutUsersInput = {
    where: UsersOnCategoriesWhereUniqueInput
    update: XOR<UsersOnCategoriesUpdateWithoutUsersInput, UsersOnCategoriesUncheckedUpdateWithoutUsersInput>
    create: XOR<UsersOnCategoriesCreateWithoutUsersInput, UsersOnCategoriesUncheckedCreateWithoutUsersInput>
  }

  export type UsersOnCategoriesUpdateWithWhereUniqueWithoutUsersInput = {
    where: UsersOnCategoriesWhereUniqueInput
    data: XOR<UsersOnCategoriesUpdateWithoutUsersInput, UsersOnCategoriesUncheckedUpdateWithoutUsersInput>
  }

  export type UsersOnCategoriesUpdateManyWithWhereWithoutUsersInput = {
    where: UsersOnCategoriesScalarWhereInput
    data: XOR<UsersOnCategoriesUpdateManyMutationInput, UsersOnCategoriesUncheckedUpdateManyWithoutUsersInput>
  }

  export type security_codeUpsertWithWhereUniqueWithoutUsersInput = {
    where: security_codeWhereUniqueInput
    update: XOR<security_codeUpdateWithoutUsersInput, security_codeUncheckedUpdateWithoutUsersInput>
    create: XOR<security_codeCreateWithoutUsersInput, security_codeUncheckedCreateWithoutUsersInput>
  }

  export type security_codeUpdateWithWhereUniqueWithoutUsersInput = {
    where: security_codeWhereUniqueInput
    data: XOR<security_codeUpdateWithoutUsersInput, security_codeUncheckedUpdateWithoutUsersInput>
  }

  export type security_codeUpdateManyWithWhereWithoutUsersInput = {
    where: security_codeScalarWhereInput
    data: XOR<security_codeUpdateManyMutationInput, security_codeUncheckedUpdateManyWithoutUsersInput>
  }

  export type security_codeScalarWhereInput = {
    AND?: security_codeScalarWhereInput | security_codeScalarWhereInput[]
    OR?: security_codeScalarWhereInput[]
    NOT?: security_codeScalarWhereInput | security_codeScalarWhereInput[]
    id?: IntFilter<"security_code"> | number
    id_user?: IntFilter<"security_code"> | number
    code?: StringFilter<"security_code"> | string
    date_expiration?: DateTimeFilter<"security_code"> | Date | string
    status?: EnumStatusSecurityCodeFilter<"security_code"> | $Enums.StatusSecurityCode
    created_at?: DateTimeFilter<"security_code"> | Date | string
    updated_at?: DateTimeFilter<"security_code"> | Date | string
  }

  export type token_managementsUpsertWithWhereUniqueWithoutUsersInput = {
    where: token_managementsWhereUniqueInput
    update: XOR<token_managementsUpdateWithoutUsersInput, token_managementsUncheckedUpdateWithoutUsersInput>
    create: XOR<token_managementsCreateWithoutUsersInput, token_managementsUncheckedCreateWithoutUsersInput>
  }

  export type token_managementsUpdateWithWhereUniqueWithoutUsersInput = {
    where: token_managementsWhereUniqueInput
    data: XOR<token_managementsUpdateWithoutUsersInput, token_managementsUncheckedUpdateWithoutUsersInput>
  }

  export type token_managementsUpdateManyWithWhereWithoutUsersInput = {
    where: token_managementsScalarWhereInput
    data: XOR<token_managementsUpdateManyMutationInput, token_managementsUncheckedUpdateManyWithoutUsersInput>
  }

  export type token_managementsScalarWhereInput = {
    AND?: token_managementsScalarWhereInput | token_managementsScalarWhereInput[]
    OR?: token_managementsScalarWhereInput[]
    NOT?: token_managementsScalarWhereInput | token_managementsScalarWhereInput[]
    id?: IntFilter<"token_managements"> | number
    id_user?: IntNullableFilter<"token_managements"> | number | null
    origin?: StringFilter<"token_managements"> | string
    token?: StringFilter<"token_managements"> | string
    expiration?: DateTimeFilter<"token_managements"> | Date | string
    data?: JsonNullableFilter<"token_managements">
    status?: EnumStatusFilter<"token_managements"> | $Enums.Status
    created_at?: DateTimeFilter<"token_managements"> | Date | string
    updated_at?: DateTimeFilter<"token_managements"> | Date | string
  }

  export type user_configurationUpsertWithoutUsersInput = {
    update: XOR<user_configurationUpdateWithoutUsersInput, user_configurationUncheckedUpdateWithoutUsersInput>
    create: XOR<user_configurationCreateWithoutUsersInput, user_configurationUncheckedCreateWithoutUsersInput>
    where?: user_configurationWhereInput
  }

  export type user_configurationUpdateToOneWithWhereWithoutUsersInput = {
    where?: user_configurationWhereInput
    data: XOR<user_configurationUpdateWithoutUsersInput, user_configurationUncheckedUpdateWithoutUsersInput>
  }

  export type user_configurationUpdateWithoutUsersInput = {
    pix_encoded_pixcopypaste?: NullableStringFieldUpdateOperationsInput | string | null
    pix_qrcode?: NullableStringFieldUpdateOperationsInput | string | null
    pix_transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    pix_key?: NullableStringFieldUpdateOperationsInput | string | null
    pix_validation_code?: NullableStringFieldUpdateOperationsInput | string | null
    twofactor_code?: NullableStringFieldUpdateOperationsInput | string | null
    fee_service_fixed?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    baas_key?: NullableStringFieldUpdateOperationsInput | string | null
    baas_secret?: NullableStringFieldUpdateOperationsInput | string | null
    baas_name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_configurationUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    pix_encoded_pixcopypaste?: NullableStringFieldUpdateOperationsInput | string | null
    pix_qrcode?: NullableStringFieldUpdateOperationsInput | string | null
    pix_transaction_id?: NullableStringFieldUpdateOperationsInput | string | null
    pix_key?: NullableStringFieldUpdateOperationsInput | string | null
    pix_validation_code?: NullableStringFieldUpdateOperationsInput | string | null
    twofactor_code?: NullableStringFieldUpdateOperationsInput | string | null
    fee_service_fixed?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_service_percent?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fee_pix?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    baas_key?: NullableStringFieldUpdateOperationsInput | string | null
    baas_secret?: NullableStringFieldUpdateOperationsInput | string | null
    baas_name?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUpsertWithoutOther_usersInput = {
    update: XOR<usersUpdateWithoutOther_usersInput, usersUncheckedUpdateWithoutOther_usersInput>
    create: XOR<usersCreateWithoutOther_usersInput, usersUncheckedCreateWithoutOther_usersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOther_usersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOther_usersInput, usersUncheckedUpdateWithoutOther_usersInput>
  }

  export type usersUpdateWithoutOther_usersInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneWithoutOther_usersNestedInput
  }

  export type usersUncheckedUpdateWithoutOther_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_user?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutUsersInput, usersUncheckedUpdateWithoutUsersInput>
    create: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput>
  }

  export type usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutUsersInput, usersUncheckedUpdateWithoutUsersInput>
  }

  export type usersUpdateManyWithWhereWithoutUsersInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutUsersInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    id?: IntFilter<"users"> | number
    id_user?: IntNullableFilter<"users"> | number | null
    status?: EnumStatusFilter<"users"> | $Enums.Status
    email?: StringFilter<"users"> | string
    password?: StringNullableFilter<"users"> | string | null
    username?: StringNullableFilter<"users"> | string | null
    role?: EnumRoleFilter<"users"> | $Enums.Role
    access_token?: StringNullableFilter<"users"> | string | null
    seed?: StringNullableFilter<"users"> | string | null
    integration_token?: StringNullableFilter<"users"> | string | null
    onetime_token?: StringNullableFilter<"users"> | string | null
    two_factor_active?: BoolFilter<"users"> | boolean
    access_allowed?: BoolFilter<"users"> | boolean
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    email_code?: StringNullableFilter<"users"> | string | null
    email_status?: EnumTypeEmailConfirmFilter<"users"> | $Enums.TypeEmailConfirm
    password_code?: StringNullableFilter<"users"> | string | null
  }

  export type CategoriesOnModulesCreateManyCategoriesInput = {
    id?: number
    moduleId: number
  }

  export type UsersOnCategoriesCreateManyCategoriesInput = {
    id?: number
    userId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CategoriesOnModulesUpdateWithoutCategoriesInput = {
    Modules?: ModulesUpdateOneRequiredWithoutCategoriesOnModulesNestedInput
  }

  export type CategoriesOnModulesUncheckedUpdateWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriesOnModulesUncheckedUpdateManyWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
  }

  export type UsersOnCategoriesUpdateWithoutCategoriesInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUsersOnCategoriesNestedInput
  }

  export type UsersOnCategoriesUncheckedUpdateWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersOnCategoriesUncheckedUpdateManyWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoriesOnModulesCreateManyModulesInput = {
    id?: number
    categoryId: number
  }

  export type ResourcesOnModulesCreateManyModulesInput = {
    id?: number
    resourceId: number
  }

  export type CategoriesOnModulesUpdateWithoutModulesInput = {
    Categories?: CategoriesUpdateOneRequiredWithoutCategoriesOnModulesNestedInput
  }

  export type CategoriesOnModulesUncheckedUpdateWithoutModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriesOnModulesUncheckedUpdateManyWithoutModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
  }

  export type ResourcesOnModulesUpdateWithoutModulesInput = {
    Resources?: ResourcesUpdateOneRequiredWithoutResourcesOnModulesNestedInput
  }

  export type ResourcesOnModulesUncheckedUpdateWithoutModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    resourceId?: IntFieldUpdateOperationsInput | number
  }

  export type ResourcesOnModulesUncheckedUpdateManyWithoutModulesInput = {
    id?: IntFieldUpdateOperationsInput | number
    resourceId?: IntFieldUpdateOperationsInput | number
  }

  export type ResourcesOnModulesCreateManyResourcesInput = {
    id?: number
    moduleId: number
  }

  export type ResourcesOnModulesUpdateWithoutResourcesInput = {
    Modules?: ModulesUpdateOneRequiredWithoutResourcesOnModulesNestedInput
  }

  export type ResourcesOnModulesUncheckedUpdateWithoutResourcesInput = {
    id?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
  }

  export type ResourcesOnModulesUncheckedUpdateManyWithoutResourcesInput = {
    id?: IntFieldUpdateOperationsInput | number
    moduleId?: IntFieldUpdateOperationsInput | number
  }

  export type CategoriesCreateManyUsersInput = {
    id?: number
    name: string
    description?: string | null
    custom_value?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UsersOnCategoriesCreateManyUsersInput = {
    id?: number
    categoryId: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type security_codeCreateManyUsersInput = {
    id?: number
    code: string
    date_expiration: Date | string
    status?: $Enums.StatusSecurityCode
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type token_managementsCreateManyUsersInput = {
    id?: number
    origin: string
    token: string
    expiration: Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.Status
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type usersCreateManyUsersInput = {
    id?: number
    status?: $Enums.Status
    email: string
    password?: string | null
    username?: string | null
    role: $Enums.Role
    access_token?: string | null
    seed?: string | null
    integration_token?: string | null
    onetime_token?: string | null
    two_factor_active?: boolean
    access_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    email_code?: string | null
    email_status?: $Enums.TypeEmailConfirm
    password_code?: string | null
  }

  export type CategoriesUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoriesOnModules?: CategoriesOnModulesUpdateManyWithoutCategoriesNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoriesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    CategoriesOnModules?: CategoriesOnModulesUncheckedUpdateManyWithoutCategoriesNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type CategoriesUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    custom_value?: NullableFloatFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersOnCategoriesUpdateWithoutUsersInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    Categories?: CategoriesUpdateOneRequiredWithoutUsersOnCategoriesNestedInput
  }

  export type UsersOnCategoriesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UsersOnCategoriesUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type security_codeUpdateWithoutUsersInput = {
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type security_codeUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type security_codeUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    code?: StringFieldUpdateOperationsInput | string
    date_expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumStatusSecurityCodeFieldUpdateOperationsInput | $Enums.StatusSecurityCode
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_managementsUpdateWithoutUsersInput = {
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_managementsUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type token_managementsUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    origin?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiration?: DateTimeFieldUpdateOperationsInput | Date | string
    data?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersUpdateWithoutUsersInput = {
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUpdateOneWithoutUsersNestedInput
    other_users?: usersUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
    Categories?: CategoriesUncheckedUpdateManyWithoutUsersNestedInput
    UsersOnCategories?: UsersOnCategoriesUncheckedUpdateManyWithoutUsersNestedInput
    security_code?: security_codeUncheckedUpdateManyWithoutUsersNestedInput
    token_managements?: token_managementsUncheckedUpdateManyWithoutUsersNestedInput
    user_configuration?: user_configurationUncheckedUpdateOneWithoutUsersNestedInput
    other_users?: usersUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateManyWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: EnumStatusFieldUpdateOperationsInput | $Enums.Status
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    seed?: NullableStringFieldUpdateOperationsInput | string | null
    integration_token?: NullableStringFieldUpdateOperationsInput | string | null
    onetime_token?: NullableStringFieldUpdateOperationsInput | string | null
    two_factor_active?: BoolFieldUpdateOperationsInput | boolean
    access_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    email_code?: NullableStringFieldUpdateOperationsInput | string | null
    email_status?: EnumTypeEmailConfirmFieldUpdateOperationsInput | $Enums.TypeEmailConfirm
    password_code?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CategoriesCountOutputTypeDefaultArgs instead
     */
    export type CategoriesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModulesCountOutputTypeDefaultArgs instead
     */
    export type ModulesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModulesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ResourcesCountOutputTypeDefaultArgs instead
     */
    export type ResourcesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ResourcesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriesDefaultArgs instead
     */
    export type CategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoriesOnModulesDefaultArgs instead
     */
    export type CategoriesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoriesOnModulesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModulesDefaultArgs instead
     */
    export type ModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModulesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ResourcesDefaultArgs instead
     */
    export type ResourcesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ResourcesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ResourcesOnModulesDefaultArgs instead
     */
    export type ResourcesOnModulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ResourcesOnModulesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UsersOnCategoriesDefaultArgs instead
     */
    export type UsersOnCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersOnCategoriesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use security_codeDefaultArgs instead
     */
    export type security_codeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = security_codeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use token_managementsDefaultArgs instead
     */
    export type token_managementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = token_managementsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use user_configurationDefaultArgs instead
     */
    export type user_configurationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = user_configurationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}